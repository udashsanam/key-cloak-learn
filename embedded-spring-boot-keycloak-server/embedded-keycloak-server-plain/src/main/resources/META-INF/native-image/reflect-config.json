[
{
  "name":"boolean",
  "allDeclaredMethods":true
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.Appender"
},
{
  "name":"com.datical.liquibase.ext.appdba.diff.compare.SynonymComparator"
},
{
  "name":"com.datical.liquibase.ext.appdba.diff.output.changelog.UnexpectedColumnChangeGeneratorAppDBA"
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnsedChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnusedGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.markunused.change.MarkUnusedStatement"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.ChangedSynonymChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.MissingSynonymChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.Synonym"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.SynonymSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.UnexpectedSynonymChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.CreateSynonymStatement"
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.appdba.synonym.change.DropSynonymStatement"
},
{
  "name":"com.datical.liquibase.ext.changelog.filter.DeploymentIdFilter"
},
{
  "name":"com.datical.liquibase.ext.changelog.filter.SingleChangeSetFilter"
},
{
  "name":"com.datical.liquibase.ext.command.RollbackOneChangeSetCommand"
},
{
  "name":"com.datical.liquibase.ext.command.RollbackOneChangeSetCommand$1"
},
{
  "name":"com.datical.liquibase.ext.command.RollbackOneUpdateCommand"
},
{
  "name":"com.datical.liquibase.ext.command.RollbackOneUpdateCommand$1"
},
{
  "name":"com.datical.liquibase.ext.config.LiquibaseProConfiguration"
},
{
  "name":"com.datical.liquibase.ext.license.LicenseCheckingChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.license.LicenseCheckingSnapshotGenerator"
},
{
  "name":"com.datical.liquibase.ext.license.LicenseValidationChange"
},
{
  "name":"com.datical.liquibase.ext.parser.LiquibaseProNamespaceDetails",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.AbstractChangedStoredLogicChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.AbstractMissingStoredLogicChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.AbstractStoredDatabaseLogicSnapshotGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.AbstractStoredDatabaseLogicSnapshotGenerator$1"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.AbstractStoredDatabaseLogicSnapshotGenerator$2"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.AbstractUnexpectedStoredLogicChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.StoredLogicComparator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.ChangedCheckConstraintChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraint"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintComparator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator$1"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.CheckConstraintSnapshotGenerator$SqlExt"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.MissingCheckConstraintChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.UnexpectedCheckConstraintChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.AddCheckConstraintStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DisableCheckConstraintStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.DropCheckConstraintStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.change.EnableCheckConstraintStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.checkconstraint.postgres.PostgresCheckConstraintSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageBodyChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageBodyExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.ChangedPackageExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.DatabasePackage"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.DatabasePackageBody"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageBodyChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageBodyExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.MissingPackageExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.PackageBodySnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.PackageSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.UnexpectedPackageBodyChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.UnexpectedPackageChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageBodyStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.CreatePackageStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageBodyStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.databasepackage.change.DropPackageStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.ChangedFunctionChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.ChangedFunctionExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.Function"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.FunctionSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.MissingFunctionChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.MissingFunctionExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.UnexpectedFunctionChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.CreateFunctionStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.change.DropFunctionStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.postgres.EDBPostgresFunctionSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.function.postgres.PostgresFunctionSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.ChangedStoredProcedureChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.ChangedStoredProcedureExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.MissingStoredProcedureChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.MissingStoredProcedureExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.PostgresStoredProcedureSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.StoredProcedureSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.storedproc.UnexpectedStoredProcedureChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.ChangedTriggerChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.ChangedTriggerExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.MissingTriggerChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.MissingTriggerExternalFileChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.Trigger"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.TriggerSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.TriggerSnapshotGenerator$1"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.UnexpectedTriggerChangeGenerator"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.CreateTriggerStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DisableTriggerStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.DropTriggerStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.EnableTriggerStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.change.RenameTriggerStatement"
},
{
  "name":"com.datical.liquibase.ext.storedlogic.trigger.postgres.PostgresTriggerSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.datical.liquibase.ext.util.CachedQueryUtil"
},
{
  "name":"com.datical.liquibase.ext.util.ObjectSqlFileUtil"
},
{
  "name":"com.datical.liquibase.ext.util.RefactoringUtils"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"createArrayNode","parameterTypes":[] }, 
    {"name":"createObjectNode","parameterTypes":[] }, 
    {"name":"getFactory","parameterTypes":[] }, 
    {"name":"getJsonFactory","parameterTypes":[] }, 
    {"name":"missingNode","parameterTypes":[] }, 
    {"name":"nullNode","parameterTypes":[] }, 
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, 
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, 
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, 
    {"name":"version","parameterTypes":[] }, 
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, 
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, 
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, 
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, 
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, 
    {"name":"getModuleName","parameterTypes":[] }, 
    {"name":"getTypeId","parameterTypes":[] }, 
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, 
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, 
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, 
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, 
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, 
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, 
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, 
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, 
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, 
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.jaxrs.base.ProviderBase",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
  "fields":[{"name":"drainStatus", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.github.benmanes.caffeine.cache.PS",
  "fields":[
    {"name":"key", "allowUnsafeAccess":true}, 
    {"name":"value", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.SSLMS",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.CacheLoader","boolean"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.StripedBuffer",
  "fields":[{"name":"tableBusy", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.EmbeddedKeycloakApplication",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.EmbeddedKeycloakConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.EmbeddedKeycloakConfig$$EnhancerBySpringCGLIB$$f11faf30",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.EmbeddedKeycloakConfig$$EnhancerBySpringCGLIB$$f11faf30$$FastClassBySpringCGLIB$$fe4024c7",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.EmbeddedKeycloakConfig$$FastClassBySpringCGLIB$$aa4f54",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.EmbeddedKeycloakServer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.KeycloakCustomProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.KeycloakCustomProperties$AdminUser",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.KeycloakCustomProperties$Infinispan",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.KeycloakCustomProperties$Migration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.KeycloakCustomProperties$Server",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.KeycloakProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.runner.Main",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.starter.EmbeddedSpringKeycloakAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.starter.EmbeddedSpringKeycloakAutoConfiguration$$EnhancerBySpringCGLIB$$eee47585",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.support.DynamicJndiContextFactoryBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"createInitialContextFactory","parameterTypes":["java.util.Hashtable"] }]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.support.SpringBootConfigProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getProvider","parameterTypes":["java.lang.String"] }, 
    {"name":"scope","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.support.SpringBootPlatform",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, 
    {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }
  ]
},
{
  "name":"com.github.thomasdarimont.keycloak.embedded.support.SpringBootPlatform$Delegate",
  "allDeclaredFields":true
},
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[
    {"name":"getProcessCpuLoad","parameterTypes":[] }, 
    {"name":"getSystemCpuLoad","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "methods":[
    {"name":"getMaxFileDescriptorCount","parameterTypes":[] }, 
    {"name":"getOpenFileDescriptorCount","parameterTypes":[] }
  ]
},
{
  "name":"com.zaxxer.hikari.HikariConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addDataSourceProperty","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"addHealthCheckProperty","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"copyStateTo","parameterTypes":["com.zaxxer.hikari.HikariConfig"] }, 
    {"name":"getCatalog","parameterTypes":[] }, 
    {"name":"getConnectionInitSql","parameterTypes":[] }, 
    {"name":"getConnectionTestQuery","parameterTypes":[] }, 
    {"name":"getConnectionTimeout","parameterTypes":[] }, 
    {"name":"getDataSource","parameterTypes":[] }, 
    {"name":"getDataSourceClassName","parameterTypes":[] }, 
    {"name":"getDataSourceJNDI","parameterTypes":[] }, 
    {"name":"getDataSourceProperties","parameterTypes":[] }, 
    {"name":"getDriverClassName","parameterTypes":[] }, 
    {"name":"getExceptionOverrideClassName","parameterTypes":[] }, 
    {"name":"getHealthCheckProperties","parameterTypes":[] }, 
    {"name":"getHealthCheckRegistry","parameterTypes":[] }, 
    {"name":"getIdleTimeout","parameterTypes":[] }, 
    {"name":"getInitializationFailTimeout","parameterTypes":[] }, 
    {"name":"getJdbcUrl","parameterTypes":[] }, 
    {"name":"getLeakDetectionThreshold","parameterTypes":[] }, 
    {"name":"getMaxLifetime","parameterTypes":[] }, 
    {"name":"getMaximumPoolSize","parameterTypes":[] }, 
    {"name":"getMetricRegistry","parameterTypes":[] }, 
    {"name":"getMetricsTrackerFactory","parameterTypes":[] }, 
    {"name":"getMinimumIdle","parameterTypes":[] }, 
    {"name":"getPassword","parameterTypes":[] }, 
    {"name":"getPoolName","parameterTypes":[] }, 
    {"name":"getScheduledExecutor","parameterTypes":[] }, 
    {"name":"getSchema","parameterTypes":[] }, 
    {"name":"getThreadFactory","parameterTypes":[] }, 
    {"name":"getTransactionIsolation","parameterTypes":[] }, 
    {"name":"getUsername","parameterTypes":[] }, 
    {"name":"getValidationTimeout","parameterTypes":[] }, 
    {"name":"isAllowPoolSuspension","parameterTypes":[] }, 
    {"name":"isAutoCommit","parameterTypes":[] }, 
    {"name":"isIsolateInternalQueries","parameterTypes":[] }, 
    {"name":"isReadOnly","parameterTypes":[] }, 
    {"name":"isRegisterMbeans","parameterTypes":[] }, 
    {"name":"setAllowPoolSuspension","parameterTypes":["boolean"] }, 
    {"name":"setAutoCommit","parameterTypes":["boolean"] }, 
    {"name":"setCatalog","parameterTypes":["java.lang.String"] }, 
    {"name":"setConnectionInitSql","parameterTypes":["java.lang.String"] }, 
    {"name":"setConnectionTestQuery","parameterTypes":["java.lang.String"] }, 
    {"name":"setConnectionTimeout","parameterTypes":["long"] }, 
    {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, 
    {"name":"setDataSourceClassName","parameterTypes":["java.lang.String"] }, 
    {"name":"setDataSourceJNDI","parameterTypes":["java.lang.String"] }, 
    {"name":"setDataSourceProperties","parameterTypes":["java.util.Properties"] }, 
    {"name":"setDriverClassName","parameterTypes":["java.lang.String"] }, 
    {"name":"setExceptionOverrideClassName","parameterTypes":["java.lang.String"] }, 
    {"name":"setHealthCheckProperties","parameterTypes":["java.util.Properties"] }, 
    {"name":"setIdleTimeout","parameterTypes":["long"] }, 
    {"name":"setInitializationFailTimeout","parameterTypes":["long"] }, 
    {"name":"setIsolateInternalQueries","parameterTypes":["boolean"] }, 
    {"name":"setJdbcUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"setLeakDetectionThreshold","parameterTypes":["long"] }, 
    {"name":"setMaxLifetime","parameterTypes":["long"] }, 
    {"name":"setMaximumPoolSize","parameterTypes":["int"] }, 
    {"name":"setMinimumIdle","parameterTypes":["int"] }, 
    {"name":"setPassword","parameterTypes":["java.lang.String"] }, 
    {"name":"setPoolName","parameterTypes":["java.lang.String"] }, 
    {"name":"setReadOnly","parameterTypes":["boolean"] }, 
    {"name":"setRegisterMbeans","parameterTypes":["boolean"] }, 
    {"name":"setScheduledExecutor","parameterTypes":["java.util.concurrent.ScheduledExecutorService"] }, 
    {"name":"setSchema","parameterTypes":["java.lang.String"] }, 
    {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, 
    {"name":"setTransactionIsolation","parameterTypes":["java.lang.String"] }, 
    {"name":"setUsername","parameterTypes":["java.lang.String"] }, 
    {"name":"setValidationTimeout","parameterTypes":["long"] }, 
    {"name":"validate","parameterTypes":[] }
  ]
},
{
  "name":"com.zaxxer.hikari.HikariConfigMXBean",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.zaxxer.hikari.HikariDataSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyConnection",
  "methods":[{"name":"getSchema","parameterTypes":[] }]
},
{
  "name":"com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData",
  "methods":[{"name":"supportsRefCursors","parameterTypes":[] }]
},
{
  "name":"freemarker.ext.jython.JythonModel"
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"monotonicTime","parameterTypes":[] }, 
    {"name":"wallTime","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"close","parameterTypes":[] }, 
    {"name":"config","parameterTypes":[] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"find","parameterTypes":["java.lang.String"] }, 
    {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, 
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, 
    {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, 
    {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, 
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getMeters","parameterTypes":[] }, 
    {"name":"isClosed","parameterTypes":[] }, 
    {"name":"more","parameterTypes":[] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, 
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleConfig",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"io.micrometer.core.lang.NonNullApi",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.lang.NonNullFields",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.lang.Nullable",
  "allDeclaredMethods":true
},
{
  "name":"io.reactivex.Flowable"
},
{
  "name":"io.undertow.Undertow",
  "allDeclaredFields":true
},
{
  "name":"io.undertow.UndertowLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"io.undertow.UndertowOptions",
  "allDeclaredFields":true
},
{
  "name":"io.undertow.server.protocol.http.HttpRequestParser$$generated",
  "methods":[{"name":"<init>","parameterTypes":["org.xnio.OptionMap"] }]
},
{
  "name":"io.undertow.servlet.UndertowServletLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"io.undertow.servlet.handlers.DefaultServlet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.undertow.servlet.spec.ServletContextImpl",
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addFilter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addFilter","parameterTypes":["java.lang.String","javax.servlet.Filter"] }, 
    {"name":"addJspFile","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addListener","parameterTypes":["java.lang.Class"] }, 
    {"name":"addListener","parameterTypes":["java.lang.String"] }, 
    {"name":"addListener","parameterTypes":["java.util.EventListener"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"addServlet","parameterTypes":["java.lang.String","javax.servlet.Servlet"] }, 
    {"name":"createFilter","parameterTypes":["java.lang.Class"] }, 
    {"name":"createListener","parameterTypes":["java.lang.Class"] }, 
    {"name":"createServlet","parameterTypes":["java.lang.Class"] }, 
    {"name":"declareRoles","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"getAttributeNames","parameterTypes":[] }, 
    {"name":"getClassLoader","parameterTypes":[] }, 
    {"name":"getContext","parameterTypes":["java.lang.String"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getDefaultSessionTrackingModes","parameterTypes":[] }, 
    {"name":"getEffectiveMajorVersion","parameterTypes":[] }, 
    {"name":"getEffectiveMinorVersion","parameterTypes":[] }, 
    {"name":"getEffectiveSessionTrackingModes","parameterTypes":[] }, 
    {"name":"getFilterRegistration","parameterTypes":["java.lang.String"] }, 
    {"name":"getFilterRegistrations","parameterTypes":[] }, 
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getJspConfigDescriptor","parameterTypes":[] }, 
    {"name":"getMajorVersion","parameterTypes":[] }, 
    {"name":"getMimeType","parameterTypes":["java.lang.String"] }, 
    {"name":"getMinorVersion","parameterTypes":[] }, 
    {"name":"getNamedDispatcher","parameterTypes":["java.lang.String"] }, 
    {"name":"getRealPath","parameterTypes":["java.lang.String"] }, 
    {"name":"getRequestCharacterEncoding","parameterTypes":[] }, 
    {"name":"getRequestDispatcher","parameterTypes":["java.lang.String"] }, 
    {"name":"getResource","parameterTypes":["java.lang.String"] }, 
    {"name":"getResourceAsStream","parameterTypes":["java.lang.String"] }, 
    {"name":"getResourcePaths","parameterTypes":["java.lang.String"] }, 
    {"name":"getResponseCharacterEncoding","parameterTypes":[] }, 
    {"name":"getServerInfo","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletContextName","parameterTypes":[] }, 
    {"name":"getServletNames","parameterTypes":[] }, 
    {"name":"getServletRegistration","parameterTypes":["java.lang.String"] }, 
    {"name":"getServletRegistrations","parameterTypes":[] }, 
    {"name":"getServlets","parameterTypes":[] }, 
    {"name":"getSessionCookieConfig","parameterTypes":[] }, 
    {"name":"getSessionTimeout","parameterTypes":[] }, 
    {"name":"getVirtualServerName","parameterTypes":[] }, 
    {"name":"log","parameterTypes":["java.lang.Exception","java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }, 
    {"name":"removeAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setAttribute","parameterTypes":["java.lang.String","java.lang.Object"] }, 
    {"name":"setInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"setRequestCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setResponseCharacterEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setSessionTimeout","parameterTypes":["int"] }, 
    {"name":"setSessionTrackingModes","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"io.undertow.util.FastConcurrentDirectDeque",
  "fields":[
    {"name":"head", "allowUnsafeAccess":true}, 
    {"name":"tail", "allowUnsafeAccess":true}
  ],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.undertow.util.FastConcurrentDirectDeque$Node",
  "fields":[
    {"name":"item", "allowUnsafeAccess":true}, 
    {"name":"next", "allowUnsafeAccess":true}, 
    {"name":"prev", "allowUnsafeAccess":true}
  ]
},
{
  "name":"io.undertow.util.Headers",
  "allDeclaredFields":true
},
{
  "name":"io.undertow.util.HttpString",
  "fields":[{"name":"hashCode"}]
},
{
  "name":"io.undertow.util.Methods",
  "allDeclaredFields":true
},
{
  "name":"io.undertow.util.Protocols",
  "allDeclaredFields":true
},
{
  "name":"io.undertow.websockets.jsr.Bootstrap"
},
{
  "name":"io.undertow.websockets.jsr.Bootstrap$WebSocketListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.undertow.websockets.jsr.JsrWebSocketFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.undertow.websockets.jsr.JsrWebSocketFilter$LogoutListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.undertow.websockets.jsr.JsrWebSocketLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"java.io.Closeable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.io.File",
  "methods":[{"name":"toPath","parameterTypes":[] }]
},
{
  "name":"java.io.ObjectInputStream",
  "allPublicMethods":true
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.io.Serializable[]"
},
{
  "name":"java.lang.AutoCloseable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Boolean",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.CharSequence[]"
},
{
  "name":"java.lang.Class",
  "allDeclaredMethods":true,
  "methods":[
    {"name":"asSubclass","parameterTypes":["java.lang.Class"] }, 
    {"name":"cast","parameterTypes":["java.lang.Object"] }, 
    {"name":"desiredAssertionStatus","parameterTypes":[] }, 
    {"name":"getAnnotatedInterfaces","parameterTypes":[] }, 
    {"name":"getAnnotatedSuperclass","parameterTypes":[] }, 
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getAnnotations","parameterTypes":[] }, 
    {"name":"getAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getCanonicalName","parameterTypes":[] }, 
    {"name":"getClasses","parameterTypes":[] }, 
    {"name":"getComponentType","parameterTypes":[] }, 
    {"name":"getConstructor","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"getConstructors","parameterTypes":[] }, 
    {"name":"getDeclaredAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaredAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredClasses","parameterTypes":[] }, 
    {"name":"getDeclaredConstructor","parameterTypes":["java.lang.Class[]"] }, 
    {"name":"getDeclaredConstructors","parameterTypes":[] }, 
    {"name":"getDeclaredField","parameterTypes":["java.lang.String"] }, 
    {"name":"getDeclaredFields","parameterTypes":[] }, 
    {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, 
    {"name":"getDeclaredMethods","parameterTypes":[] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getEnclosingClass","parameterTypes":[] }, 
    {"name":"getEnclosingConstructor","parameterTypes":[] }, 
    {"name":"getEnclosingMethod","parameterTypes":[] }, 
    {"name":"getEnumConstants","parameterTypes":[] }, 
    {"name":"getField","parameterTypes":["java.lang.String"] }, 
    {"name":"getFields","parameterTypes":[] }, 
    {"name":"getGenericInterfaces","parameterTypes":[] }, 
    {"name":"getGenericSuperclass","parameterTypes":[] }, 
    {"name":"getInterfaces","parameterTypes":[] }, 
    {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, 
    {"name":"getMethods","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getNestHost","parameterTypes":[] }, 
    {"name":"getNestMembers","parameterTypes":[] }, 
    {"name":"getPackage","parameterTypes":[] }, 
    {"name":"getPackageName","parameterTypes":[] }, 
    {"name":"getProtectionDomain","parameterTypes":[] }, 
    {"name":"getSimpleName","parameterTypes":[] }, 
    {"name":"getSuperclass","parameterTypes":[] }, 
    {"name":"getTypeName","parameterTypes":[] }, 
    {"name":"getTypeParameters","parameterTypes":[] }, 
    {"name":"isAnnotation","parameterTypes":[] }, 
    {"name":"isAnnotationPresent","parameterTypes":["java.lang.Class"] }, 
    {"name":"isAnonymousClass","parameterTypes":[] }, 
    {"name":"isArray","parameterTypes":[] }, 
    {"name":"isAssignableFrom","parameterTypes":["java.lang.Class"] }, 
    {"name":"isEnum","parameterTypes":[] }, 
    {"name":"isInstance","parameterTypes":["java.lang.Object"] }, 
    {"name":"isInterface","parameterTypes":[] }, 
    {"name":"isLocalClass","parameterTypes":[] }, 
    {"name":"isMemberClass","parameterTypes":[] }, 
    {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }, 
    {"name":"isPrimitive","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }, 
    {"name":"toGenericString","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[
    {"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Cloneable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Comparable[]"
},
{
  "name":"java.lang.Integer",
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.Iterable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Module",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allPublicFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"java.lang.Object[]"
},
{
  "name":"java.lang.Package",
  "methods":[
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getAnnotations","parameterTypes":[] }, 
    {"name":"getAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaredAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getImplementationTitle","parameterTypes":[] }, 
    {"name":"getImplementationVendor","parameterTypes":[] }, 
    {"name":"getImplementationVersion","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getPackage","parameterTypes":["java.lang.String"] }, 
    {"name":"getPackages","parameterTypes":[] }, 
    {"name":"getSpecificationTitle","parameterTypes":[] }, 
    {"name":"getSpecificationVendor","parameterTypes":[] }, 
    {"name":"getSpecificationVersion","parameterTypes":[] }, 
    {"name":"isAnnotationPresent","parameterTypes":["java.lang.Class"] }, 
    {"name":"isCompatibleWith","parameterTypes":["java.lang.String"] }, 
    {"name":"isSealed","parameterTypes":[] }, 
    {"name":"isSealed","parameterTypes":["java.net.URL"] }
  ]
},
{
  "name":"java.lang.Runtime",
  "methods":[
    {"name":"availableProcessors","parameterTypes":[] }, 
    {"name":"freeMemory","parameterTypes":[] }, 
    {"name":"maxMemory","parameterTypes":[] }, 
    {"name":"totalMemory","parameterTypes":[] }, 
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.String",
  "allDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.System",
  "methods":[
    {"name":"currentTimeMillis","parameterTypes":[] }, 
    {"name":"getProperties","parameterTypes":[] }, 
    {"name":"getProperty","parameterTypes":["java.lang.String"] }, 
    {"name":"getProperty","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"getenv","parameterTypes":[] }, 
    {"name":"getenv","parameterTypes":["java.lang.String"] }, 
    {"name":"identityHashCode","parameterTypes":["java.lang.Object"] }, 
    {"name":"lineSeparator","parameterTypes":[] }, 
    {"name":"mapLibraryName","parameterTypes":["java.lang.String"] }, 
    {"name":"nanoTime","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.Thread",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicConstructors":true,
  "fields":[
    {"name":"contextClassLoader", "allowUnsafeAccess":true}, 
    {"name":"threadLocalRandomProbe", "allowUnsafeAccess":true}
  ]
},
{
  "name":"java.lang.ThreadGroup",
  "methods":[
    {"name":"activeCount","parameterTypes":[] }, 
    {"name":"activeGroupCount","parameterTypes":[] }, 
    {"name":"checkAccess","parameterTypes":[] }, 
    {"name":"getMaxPriority","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getParent","parameterTypes":[] }, 
    {"name":"isDaemon","parameterTypes":[] }, 
    {"name":"isDestroyed","parameterTypes":[] }, 
    {"name":"parentOf","parameterTypes":["java.lang.ThreadGroup"] }
  ]
},
{
  "name":"java.lang.Throwable",
  "methods":[{"name":"initCause","parameterTypes":["java.lang.Throwable"] }]
},
{
  "name":"java.lang.annotation.Annotation",
  "methods":[{"name":"annotationType","parameterTypes":[] }]
},
{
  "name":"java.lang.annotation.Documented",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[
    {"name":"defineClass","parameterTypes":["byte[]"] }, 
    {"name":"lookupClass","parameterTypes":[] }, 
    {"name":"lookupModes","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "allPublicFields":true,
  "allPublicMethods":true,
  "allPublicConstructors":true,
  "fields":[{"name":"override"}]
},
{
  "name":"java.lang.reflect.AnnotatedArrayType",
  "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.AnnotatedParameterizedType",
  "methods":[{"name":"getAnnotatedActualTypeArguments","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.AnnotatedType",
  "methods":[
    {"name":"getAnnotatedOwnerType","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Constructor",
  "methods":[
    {"name":"getAnnotatedReceiverType","parameterTypes":[] }, 
    {"name":"getAnnotatedReturnType","parameterTypes":[] }, 
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getExceptionTypes","parameterTypes":[] }, 
    {"name":"getGenericExceptionTypes","parameterTypes":[] }, 
    {"name":"getGenericParameterTypes","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getParameterAnnotations","parameterTypes":[] }, 
    {"name":"getParameterCount","parameterTypes":[] }, 
    {"name":"getParameterTypes","parameterTypes":[] }, 
    {"name":"getTypeParameters","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }, 
    {"name":"isVarArgs","parameterTypes":[] }, 
    {"name":"toGenericString","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Executable",
  "methods":[
    {"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, 
    {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, 
    {"name":"getAnnotatedReceiverType","parameterTypes":[] }, 
    {"name":"getAnnotatedReturnType","parameterTypes":[] }, 
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getExceptionTypes","parameterTypes":[] }, 
    {"name":"getGenericExceptionTypes","parameterTypes":[] }, 
    {"name":"getGenericParameterTypes","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getParameterAnnotations","parameterTypes":[] }, 
    {"name":"getParameterCount","parameterTypes":[] }, 
    {"name":"getParameterTypes","parameterTypes":[] }, 
    {"name":"getParameters","parameterTypes":[] }, 
    {"name":"getTypeParameters","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }, 
    {"name":"isVarArgs","parameterTypes":[] }, 
    {"name":"toGenericString","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Field",
  "methods":[
    {"name":"getAnnotatedType","parameterTypes":[] }, 
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getGenericType","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"isEnumConstant","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }, 
    {"name":"toGenericString","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.Member",
  "methods":[
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Method",
  "methods":[
    {"name":"getAnnotatedReturnType","parameterTypes":[] }, 
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaringClass","parameterTypes":[] }, 
    {"name":"getDefaultValue","parameterTypes":[] }, 
    {"name":"getExceptionTypes","parameterTypes":[] }, 
    {"name":"getGenericExceptionTypes","parameterTypes":[] }, 
    {"name":"getGenericParameterTypes","parameterTypes":[] }, 
    {"name":"getGenericReturnType","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getParameterAnnotations","parameterTypes":[] }, 
    {"name":"getParameterCount","parameterTypes":[] }, 
    {"name":"getParameterTypes","parameterTypes":[] }, 
    {"name":"getReturnType","parameterTypes":[] }, 
    {"name":"getTypeParameters","parameterTypes":[] }, 
    {"name":"isBridge","parameterTypes":[] }, 
    {"name":"isDefault","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }, 
    {"name":"isVarArgs","parameterTypes":[] }, 
    {"name":"toGenericString","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Parameter",
  "methods":[
    {"name":"getAnnotatedType","parameterTypes":[] }, 
    {"name":"getAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getAnnotations","parameterTypes":[] }, 
    {"name":"getAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotation","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaredAnnotations","parameterTypes":[] }, 
    {"name":"getDeclaredAnnotationsByType","parameterTypes":["java.lang.Class"] }, 
    {"name":"getDeclaringExecutable","parameterTypes":[] }, 
    {"name":"getModifiers","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getParameterizedType","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"isImplicit","parameterTypes":[] }, 
    {"name":"isNamePresent","parameterTypes":[] }, 
    {"name":"isSynthetic","parameterTypes":[] }, 
    {"name":"isVarArgs","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.Type",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[
    {"name":"getAnnotatedBounds","parameterTypes":[] }, 
    {"name":"getBounds","parameterTypes":[] }, 
    {"name":"getGenericDeclaration","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.net.URI",
  "methods":[
    {"name":"compareTo","parameterTypes":["java.lang.Object"] }, 
    {"name":"compareTo","parameterTypes":["java.net.URI"] }, 
    {"name":"create","parameterTypes":["java.lang.String"] }, 
    {"name":"getAuthority","parameterTypes":[] }, 
    {"name":"getFragment","parameterTypes":[] }, 
    {"name":"getHost","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getQuery","parameterTypes":[] }, 
    {"name":"getRawAuthority","parameterTypes":[] }, 
    {"name":"getRawFragment","parameterTypes":[] }, 
    {"name":"getRawPath","parameterTypes":[] }, 
    {"name":"getRawQuery","parameterTypes":[] }, 
    {"name":"getRawSchemeSpecificPart","parameterTypes":[] }, 
    {"name":"getRawUserInfo","parameterTypes":[] }, 
    {"name":"getScheme","parameterTypes":[] }, 
    {"name":"getSchemeSpecificPart","parameterTypes":[] }, 
    {"name":"getUserInfo","parameterTypes":[] }, 
    {"name":"isAbsolute","parameterTypes":[] }, 
    {"name":"isOpaque","parameterTypes":[] }, 
    {"name":"normalize","parameterTypes":[] }, 
    {"name":"parseServerAuthority","parameterTypes":[] }, 
    {"name":"relativize","parameterTypes":["java.net.URI"] }, 
    {"name":"resolve","parameterTypes":["java.lang.String"] }, 
    {"name":"resolve","parameterTypes":["java.net.URI"] }, 
    {"name":"toASCIIString","parameterTypes":[] }, 
    {"name":"toURL","parameterTypes":[] }
  ]
},
{
  "name":"java.net.URL",
  "methods":[
    {"name":"getAuthority","parameterTypes":[] }, 
    {"name":"getDefaultPort","parameterTypes":[] }, 
    {"name":"getFile","parameterTypes":[] }, 
    {"name":"getHost","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getProtocol","parameterTypes":[] }, 
    {"name":"getQuery","parameterTypes":[] }, 
    {"name":"getRef","parameterTypes":[] }, 
    {"name":"getUserInfo","parameterTypes":[] }, 
    {"name":"sameFile","parameterTypes":["java.net.URL"] }, 
    {"name":"toExternalForm","parameterTypes":[] }, 
    {"name":"toURI","parameterTypes":[] }
  ]
},
{
  "name":"java.nio.file.CopyOption"
},
{
  "name":"java.nio.file.CopyOption[]"
},
{
  "name":"java.nio.file.Files",
  "methods":[{"name":"move","parameterTypes":["java.nio.file.Path","java.nio.file.Path","java.nio.file.CopyOption[]"] }]
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.StandardCopyOption"
},
{
  "name":"java.security.ProtectionDomain"
},
{
  "name":"java.sql.Connection",
  "methods":[{"name":"createClob","parameterTypes":[] }]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Statement[]"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.sql.Wrapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.time.Duration"
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.time.LocalDate"
},
{
  "name":"java.time.LocalDateTime"
},
{
  "name":"java.time.LocalTime"
},
{
  "name":"java.time.OffsetDateTime"
},
{
  "name":"java.time.OffsetTime"
},
{
  "name":"java.time.Period"
},
{
  "name":"java.time.ZonedDateTime"
},
{
  "name":"java.util.AbstractMap",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"java.util.Arrays$ArrayList"
},
{
  "name":"java.util.Collections$EmptyList"
},
{
  "name":"java.util.Collections$EmptyMap"
},
{
  "name":"java.util.Collections$EmptySet"
},
{
  "name":"java.util.Collections$SingletonList"
},
{
  "name":"java.util.Collections$SingletonMap"
},
{
  "name":"java.util.Collections$SingletonSet"
},
{
  "name":"java.util.Collections$SynchronizedSet"
},
{
  "name":"java.util.Collections$UnmodifiableRandomAccessList"
},
{
  "name":"java.util.Collections$UnmodifiableSet"
},
{
  "name":"java.util.DoubleSummaryStatistics",
  "methods":[{"name":"<init>","parameterTypes":["long","double","double","double"] }]
},
{
  "name":"java.util.EventListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.HashMap",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"clone","parameterTypes":[] }, 
    {"name":"compute","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] }, 
    {"name":"computeIfAbsent","parameterTypes":["java.lang.Object","java.util.function.Function"] }, 
    {"name":"computeIfPresent","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] }, 
    {"name":"containsKey","parameterTypes":["java.lang.Object"] }, 
    {"name":"containsValue","parameterTypes":["java.lang.Object"] }, 
    {"name":"entrySet","parameterTypes":[] }, 
    {"name":"forEach","parameterTypes":["java.util.function.BiConsumer"] }, 
    {"name":"get","parameterTypes":["java.lang.Object"] }, 
    {"name":"getOrDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"keySet","parameterTypes":[] }, 
    {"name":"merge","parameterTypes":["java.lang.Object","java.lang.Object","java.util.function.BiFunction"] }, 
    {"name":"put","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"putAll","parameterTypes":["java.util.Map"] }, 
    {"name":"putIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"remove","parameterTypes":["java.lang.Object"] }, 
    {"name":"remove","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object"] }, 
    {"name":"replace","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.Object"] }, 
    {"name":"replaceAll","parameterTypes":["java.util.function.BiFunction"] }, 
    {"name":"size","parameterTypes":[] }, 
    {"name":"values","parameterTypes":[] }
  ]
},
{
  "name":"java.util.HashSet",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.util.IntSummaryStatistics",
  "methods":[{"name":"<init>","parameterTypes":["long","int","int","long"] }]
},
{
  "name":"java.util.JumboEnumSet"
},
{
  "name":"java.util.LongSummaryStatistics",
  "methods":[{"name":"<init>","parameterTypes":["long","long","long","long"] }]
},
{
  "name":"java.util.Map",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.RegularEnumSet"
},
{
  "name":"java.util.ServiceLoader",
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"java.util.ServiceLoader$Provider",
  "methods":[{"name":"type","parameterTypes":[] }]
},
{
  "name":"java.util.concurrent.ConcurrentMap",
  "methods":[{"name":"remove","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"java.util.concurrent.Executor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.concurrent.ExecutorService"
},
{
  "name":"java.util.concurrent.Flow$Publisher"
},
{
  "name":"java.util.concurrent.ScheduledExecutorService"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.activation.MimeType"
},
{
  "name":"javax.annotation.ManagedBean"
},
{
  "name":"javax.annotation.PostConstruct",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.mail.internet.MimeMessage"
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.naming.spi.InitialContextFactoryBuilder",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.persistence.EntityManager"
},
{
  "name":"javax.persistence.EntityManagerFactory"
},
{
  "name":"javax.servlet.Filter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.servlet.GenericServlet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getInitParameter","parameterTypes":["java.lang.String"] }, 
    {"name":"getInitParameterNames","parameterTypes":[] }, 
    {"name":"getServletConfig","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"getServletInfo","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["javax.servlet.ServletConfig"] }, 
    {"name":"log","parameterTypes":["java.lang.String"] }, 
    {"name":"log","parameterTypes":["java.lang.String","java.lang.Throwable"] }
  ]
},
{
  "name":"javax.servlet.MultipartConfigElement",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"javax.servlet.Servlet",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.servlet.ServletConfig",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.servlet.ServletContext",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.servlet.ServletRegistration"
},
{
  "name":"javax.servlet.ServletRequest"
},
{
  "name":"javax.servlet.http.HttpServlet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"service","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse"] }]
},
{
  "name":"javax.servlet.http.PushBuilder"
},
{
  "name":"javax.sql.CommonDataSource",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.sql.DataSource",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"javax.sql.XADataSource"
},
{
  "name":"javax.transaction.Transaction"
},
{
  "name":"javax.transaction.TransactionManager"
},
{
  "name":"javax.transaction.TransactionSynchronizationRegistry"
},
{
  "name":"javax.transaction.Transactional"
},
{
  "name":"javax.validation.Validation"
},
{
  "name":"javax.validation.Validator"
},
{
  "name":"javax.validation.ValidatorFactory"
},
{
  "name":"javax.validation.bootstrap.GenericBootstrap"
},
{
  "name":"javax.validation.executable.ExecutableValidator"
},
{
  "name":"javax.websocket.server.ServerContainer"
},
{
  "name":"javax.ws.rs.container.ContainerRequestFilter[]"
},
{
  "name":"javax.ws.rs.container.ContainerResponseFilter[]"
},
{
  "name":"javax.ws.rs.core.Application",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"javax.ws.rs.core.NoContentException",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"javax.ws.rs.ext.ReaderInterceptor[]"
},
{
  "name":"javax.ws.rs.ext.WriterInterceptor[]"
},
{
  "name":"javax.xml.bind.Binder"
},
{
  "name":"javax.xml.bind.annotation.XmlElement",
  "allDeclaredMethods":true
},
{
  "name":"javax.xml.bind.annotation.XmlRootElement",
  "allDeclaredMethods":true
},
{
  "name":"javax.xml.bind.annotation.XmlType",
  "allDeclaredMethods":true
},
{
  "name":"javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
  "allDeclaredMethods":true
},
{
  "name":"javax.xml.ws.WebServiceRef"
},
{
  "name":"liquibase.Liquibase",
  "methods":[
    {"name":"listUnrunChangeSets","parameterTypes":["liquibase.Contexts","liquibase.LabelExpression","boolean"] }, 
    {"name":"resetServices","parameterTypes":[] }
  ]
},
{
  "name":"liquibase.change.AbstractChange"
},
{
  "name":"liquibase.change.AbstractSQLChange",
  "methods":[
    {"name":"isSplitStatements","parameterTypes":[] }, 
    {"name":"isStripComments","parameterTypes":[] }
  ]
},
{
  "name":"liquibase.change.AbstractSQLChange$NormalizingStream"
},
{
  "name":"liquibase.change.AddColumnConfig",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.Change"
},
{
  "name":"liquibase.change.ChangeFactory"
},
{
  "name":"liquibase.change.ChangeFactory$1"
},
{
  "name":"liquibase.change.ChangeMetaData"
},
{
  "name":"liquibase.change.ChangeParameterMetaData"
},
{
  "name":"liquibase.change.ChangeStatus"
},
{
  "name":"liquibase.change.ChangeStatus$Status"
},
{
  "name":"liquibase.change.ChangeWithColumns"
},
{
  "name":"liquibase.change.CheckSum"
},
{
  "name":"liquibase.change.CheckSum$1"
},
{
  "name":"liquibase.change.ColumnConfig",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.ColumnConfig$ValueNumeric"
},
{
  "name":"liquibase.change.ConstraintsConfig",
  "allDeclaredFields":true
},
{
  "name":"liquibase.change.DatabaseChange",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.change.DatabaseChangeNote",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.change.DatabaseChangeProperty",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.change.DbmsTargetedChange"
},
{
  "name":"liquibase.change.core.AbstractModifyDataChange"
},
{
  "name":"liquibase.change.core.AddAutoIncrementChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddColumnChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddDefaultValueChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddForeignKeyConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddLookupTableChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddNotNullConstraintChange$SQLiteAlterTableVisitor"
},
{
  "name":"liquibase.change.core.AddPrimaryKeyChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AddUniqueConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.AlterSequenceChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateIndexChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateProcedureChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateSequenceChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateTableChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.CreateViewChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DeleteDataChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropAllForeignKeyConstraintsChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropColumnChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropColumnChange$1"
},
{
  "name":"liquibase.change.core.DropDefaultValueChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropForeignKeyConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropIndexChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropNotNullConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropPrimaryKeyChange$1"
},
{
  "name":"liquibase.change.core.DropProcedureChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropSequenceChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropTableChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropUniqueConstraintChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.DropViewChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.EmptyChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange$1"
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange$2"
},
{
  "name":"liquibase.change.core.ExecuteShellCommandChange$StreamGobbler"
},
{
  "name":"liquibase.change.core.InsertDataChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.LoadDataChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.LoadDataChange$LOAD_DATA_TYPE"
},
{
  "name":"liquibase.change.core.LoadDataColumnConfig"
},
{
  "name":"liquibase.change.core.LoadUpdateDataChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.MergeColumnChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.MergeColumnChange$1"
},
{
  "name":"liquibase.change.core.ModifyDataTypeChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.OutputChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.OutputChange$1"
},
{
  "name":"liquibase.change.core.RawSQLChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameColumnChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameSequenceChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameTableChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.RenameViewChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SQLFileChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SetColumnRemarksChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.SetTableRemarksChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.StopChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.StopChange$1"
},
{
  "name":"liquibase.change.core.StopChange$StopChangeException"
},
{
  "name":"liquibase.change.core.TagDatabaseChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.core.UpdateDataChange",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.custom.CustomChange"
},
{
  "name":"liquibase.change.custom.CustomChangeWrapper",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.change.custom.CustomSqlChange"
},
{
  "name":"liquibase.change.custom.CustomSqlRollback"
},
{
  "name":"liquibase.change.custom.CustomTaskChange"
},
{
  "name":"liquibase.change.custom.CustomTaskRollback"
},
{
  "name":"liquibase.changelog.AbstractChangeLogHistoryService"
},
{
  "name":"liquibase.changelog.ChangeLogChild"
},
{
  "name":"liquibase.changelog.ChangeLogHistoryService"
},
{
  "name":"liquibase.changelog.ChangeLogHistoryServiceFactory"
},
{
  "name":"liquibase.changelog.ChangeLogHistoryServiceFactory$1"
},
{
  "name":"liquibase.changelog.ChangeLogInclude"
},
{
  "name":"liquibase.changelog.ChangeLogIncludeAll"
},
{
  "name":"liquibase.changelog.ChangeLogIterator"
},
{
  "name":"liquibase.changelog.ChangeLogIterator$1"
},
{
  "name":"liquibase.changelog.ChangeLogParameters"
},
{
  "name":"liquibase.changelog.ChangeLogParameters$1"
},
{
  "name":"liquibase.changelog.ChangeLogParameters$ChangeLogParameter"
},
{
  "name":"liquibase.changelog.ChangeLogParameters$ExpressionExpander"
},
{
  "name":"liquibase.changelog.ChangeLogProperty"
},
{
  "name":"liquibase.changelog.ChangeSet"
},
{
  "name":"liquibase.changelog.ChangeSet$1"
},
{
  "name":"liquibase.changelog.ChangeSet$ExecType"
},
{
  "name":"liquibase.changelog.ChangeSet$RunStatus"
},
{
  "name":"liquibase.changelog.ChangeSet$ValidationFailOption"
},
{
  "name":"liquibase.changelog.ChangeSetStatus"
},
{
  "name":"liquibase.changelog.DatabaseChangeLog"
},
{
  "name":"liquibase.changelog.DatabaseChangeLog$1"
},
{
  "name":"liquibase.changelog.IncludeAllFilter"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$1"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$2"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$3"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$4"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$5"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$Columns"
},
{
  "name":"liquibase.changelog.OfflineChangeLogHistoryService$ReplaceChangeSetLogic"
},
{
  "name":"liquibase.changelog.RanChangeSet"
},
{
  "name":"liquibase.changelog.RollbackContainer"
},
{
  "name":"liquibase.changelog.StandardChangeLogHistoryService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.changelog.column.LiquibaseColumn"
},
{
  "name":"liquibase.changelog.filter.ActuallyExecutedChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.AfterTagChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.AlreadyRanChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.ChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.ChangeSetFilterResult"
},
{
  "name":"liquibase.changelog.filter.ContextChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.CountChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.DbmsChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.ExecutedAfterChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.IgnoreChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.LabelChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.NotInChangeLogChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.NotRanChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.RanChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.ShouldRunChangeSetFilter"
},
{
  "name":"liquibase.changelog.filter.UpToTagChangeSetFilter"
},
{
  "name":"liquibase.changelog.visitor.AbstractChangeExecListener"
},
{
  "name":"liquibase.changelog.visitor.ChangeExecListener"
},
{
  "name":"liquibase.changelog.visitor.ChangeLogSyncListener"
},
{
  "name":"liquibase.changelog.visitor.ChangeLogSyncVisitor"
},
{
  "name":"liquibase.changelog.visitor.ChangeSetVisitor"
},
{
  "name":"liquibase.changelog.visitor.ChangeSetVisitor$Direction"
},
{
  "name":"liquibase.changelog.visitor.DBDocVisitor"
},
{
  "name":"liquibase.changelog.visitor.DBDocVisitor$1"
},
{
  "name":"liquibase.changelog.visitor.DBDocVisitor$ChangeLogInfo"
},
{
  "name":"liquibase.changelog.visitor.DetermineNumberChangesFollowingVisitor"
},
{
  "name":"liquibase.changelog.visitor.ExpectedChangesVisitor"
},
{
  "name":"liquibase.changelog.visitor.ListVisitor"
},
{
  "name":"liquibase.changelog.visitor.RollbackVisitor"
},
{
  "name":"liquibase.changelog.visitor.SkippedChangeSetVisitor"
},
{
  "name":"liquibase.changelog.visitor.StatusVisitor"
},
{
  "name":"liquibase.changelog.visitor.UpdateVisitor"
},
{
  "name":"liquibase.changelog.visitor.ValidatingVisitor"
},
{
  "name":"liquibase.command.AbstractCommand"
},
{
  "name":"liquibase.command.AbstractSelfConfiguratingCommand"
},
{
  "name":"liquibase.command.CommandExecutionException"
},
{
  "name":"liquibase.command.CommandFactory"
},
{
  "name":"liquibase.command.CommandFactory$1"
},
{
  "name":"liquibase.command.CommandResult"
},
{
  "name":"liquibase.command.CommandValidationErrors"
},
{
  "name":"liquibase.command.LiquibaseCommand"
},
{
  "name":"liquibase.command.core.DiffCommand"
},
{
  "name":"liquibase.command.core.DiffToChangeLogCommand"
},
{
  "name":"liquibase.command.core.DropAllCommand"
},
{
  "name":"liquibase.command.core.ExecuteSqlCommand"
},
{
  "name":"liquibase.command.core.GenerateChangeLogCommand"
},
{
  "name":"liquibase.command.core.HistoryCommand"
},
{
  "name":"liquibase.command.core.HistoryCommand$1"
},
{
  "name":"liquibase.command.core.HistoryCommand$DeploymentDetails"
},
{
  "name":"liquibase.command.core.SnapshotCommand"
},
{
  "name":"liquibase.command.core.SnapshotCommand$SnapshotCommandResult"
},
{
  "name":"liquibase.configuration.GlobalConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.AbstractJdbcDatabase"
},
{
  "name":"liquibase.database.Database"
},
{
  "name":"liquibase.database.DatabaseConnection"
},
{
  "name":"liquibase.database.DatabaseFactory"
},
{
  "name":"liquibase.database.DatabaseFactory$1"
},
{
  "name":"liquibase.database.DatabaseFactory$DatabaseComparator"
},
{
  "name":"liquibase.database.DatabaseList"
},
{
  "name":"liquibase.database.InternalDatabase"
},
{
  "name":"liquibase.database.LiquibaseExtDriver"
},
{
  "name":"liquibase.database.MockDatabaseConnection"
},
{
  "name":"liquibase.database.ObjectQuotingStrategy"
},
{
  "name":"liquibase.database.OfflineConnection"
},
{
  "name":"liquibase.database.OfflineConnection$OutputLiquibaseSql"
},
{
  "name":"liquibase.database.PreparedStatementFactory"
},
{
  "name":"liquibase.database.core.AbstractDb2Database"
},
{
  "name":"liquibase.database.core.DB2Database",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.Db2zDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.DerbyDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.Firebird3Database",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.FirebirdDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.H2Database",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.HsqlDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.InformixDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.Ingres9Database",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.MSSQLDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.MSSQLDatabase$MSSQL_SERVER_VERSIONS"
},
{
  "name":"liquibase.database.core.MariaDBDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.MySQLDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.OracleDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.PostgresDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.PostgresDatabase$DbTypes"
},
{
  "name":"liquibase.database.core.SQLiteDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.SQLiteDatabase$AlterTableVisitor"
},
{
  "name":"liquibase.database.core.SybaseASADatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.SybaseDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.core.UnsupportedDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.database.jvm.DerbyConnection"
},
{
  "name":"liquibase.database.jvm.HsqlConnection"
},
{
  "name":"liquibase.database.jvm.JdbcConnection",
  "methods":[{"name":"getWrappedConnection","parameterTypes":[] }]
},
{
  "name":"liquibase.database.jvm.SybaseASAConnection"
},
{
  "name":"liquibase.database.jvm.SybaseConnection"
},
{
  "name":"liquibase.datatype.DataTypeFactory"
},
{
  "name":"liquibase.datatype.DataTypeFactory$1"
},
{
  "name":"liquibase.datatype.DataTypeInfo",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.datatype.DatabaseDataType"
},
{
  "name":"liquibase.datatype.LiquibaseDataType"
},
{
  "name":"liquibase.datatype.core.BigIntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.BlobType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.BooleanType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.CharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.ClobType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.CurrencyType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DatabaseFunctionType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DateTimeType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DateType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DecimalType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.DoubleType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.FloatType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.IntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.MediumIntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.NCharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.NVarcharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.NumberType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.SmallIntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.TimeType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.TimestampType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.TinyIntType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.UUIDType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.UnknownType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.VarcharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.datatype.core.XMLType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.diff.DiffGenerator"
},
{
  "name":"liquibase.diff.DiffGeneratorFactory"
},
{
  "name":"liquibase.diff.DiffGeneratorFactory$1"
},
{
  "name":"liquibase.diff.DiffResult"
},
{
  "name":"liquibase.diff.DiffStatusListener"
},
{
  "name":"liquibase.diff.Difference"
},
{
  "name":"liquibase.diff.ObjectDifferences"
},
{
  "name":"liquibase.diff.ObjectDifferences$CompareFunction"
},
{
  "name":"liquibase.diff.ObjectDifferences$DataTypeCompareFunction"
},
{
  "name":"liquibase.diff.ObjectDifferences$DatabaseObjectNameCompareFunction"
},
{
  "name":"liquibase.diff.ObjectDifferences$OrderedCollectionCompareFunction"
},
{
  "name":"liquibase.diff.ObjectDifferences$StandardCompareFunction"
},
{
  "name":"liquibase.diff.ObjectDifferences$ToStringCompareFunction"
},
{
  "name":"liquibase.diff.ObjectDifferences$UnOrderedCollectionCompareFunction"
},
{
  "name":"liquibase.diff.StringDiff"
},
{
  "name":"liquibase.diff.compare.CompareControl"
},
{
  "name":"liquibase.diff.compare.CompareControl$ComputedSchemas"
},
{
  "name":"liquibase.diff.compare.CompareControl$DatabaseRole"
},
{
  "name":"liquibase.diff.compare.CompareControl$SchemaComparison"
},
{
  "name":"liquibase.diff.compare.DatabaseObjectComparator"
},
{
  "name":"liquibase.diff.compare.DatabaseObjectComparatorChain"
},
{
  "name":"liquibase.diff.compare.DatabaseObjectComparatorComparator"
},
{
  "name":"liquibase.diff.compare.DatabaseObjectComparatorFactory"
},
{
  "name":"liquibase.diff.compare.core.CatalogComparator"
},
{
  "name":"liquibase.diff.compare.core.ColumnComparator"
},
{
  "name":"liquibase.diff.compare.core.CommonCatalogSchemaComparator"
},
{
  "name":"liquibase.diff.compare.core.DefaultDatabaseObjectComparator"
},
{
  "name":"liquibase.diff.compare.core.ForeignKeyComparator"
},
{
  "name":"liquibase.diff.compare.core.ForeignKeyComparator$1"
},
{
  "name":"liquibase.diff.compare.core.IndexComparator"
},
{
  "name":"liquibase.diff.compare.core.IndexComparator$1"
},
{
  "name":"liquibase.diff.compare.core.PrimaryKeyComparator"
},
{
  "name":"liquibase.diff.compare.core.PrimaryKeyComparator$1"
},
{
  "name":"liquibase.diff.compare.core.SchemaComparator"
},
{
  "name":"liquibase.diff.compare.core.TableComparator"
},
{
  "name":"liquibase.diff.compare.core.UniqueConstraintComparator"
},
{
  "name":"liquibase.diff.compare.core.UniqueConstraintComparator$1"
},
{
  "name":"liquibase.diff.core.StandardDiffGenerator"
},
{
  "name":"liquibase.diff.output.DiffOutputControl"
},
{
  "name":"liquibase.diff.output.DiffOutputControl$1"
},
{
  "name":"liquibase.diff.output.DiffOutputControl$DatabaseForHash"
},
{
  "name":"liquibase.diff.output.ObjectChangeFilter"
},
{
  "name":"liquibase.diff.output.StandardObjectChangeFilter"
},
{
  "name":"liquibase.diff.output.StandardObjectChangeFilter$Filter"
},
{
  "name":"liquibase.diff.output.StandardObjectChangeFilter$FilterType"
},
{
  "name":"liquibase.diff.output.changelog.AbstractChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.ChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.ChangeGeneratorChain"
},
{
  "name":"liquibase.diff.output.changelog.ChangeGeneratorComparator"
},
{
  "name":"liquibase.diff.output.changelog.ChangeGeneratorFactory"
},
{
  "name":"liquibase.diff.output.changelog.ChangedObjectChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$1"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$10"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$11"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$12"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$13"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$14"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$15"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$2"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$3"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$4"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$5"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$6"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$7"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$8"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$9"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph$1"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph$Edge"
},
{
  "name":"liquibase.diff.output.changelog.DiffToChangeLog$DependencyGraph$Node"
},
{
  "name":"liquibase.diff.output.changelog.MissingObjectChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.UnexpectedObjectChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedColumnChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedForeignKeyChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedForeignKeyChangeGenerator$1"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedIndexChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedIndexChangeGenerator$1"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedPrimaryKeyChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedSequenceChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedTableChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedUniqueConstraintChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedViewChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.ChangedViewChangeGenerator$1"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingColumnChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingDataChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingDataExternalFileChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingForeignKeyChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingForeignKeyChangeGenerator$1"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingForeignKeyChangeGenerator$2"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingIndexChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingPrimaryKeyChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingSequenceChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingTableChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingUniqueConstraintChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingViewChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.MissingViewChangeGenerator$1"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedColumnChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedForeignKeyChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedIndexChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedPrimaryKeyChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedSequenceChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedTableChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedUniqueConstraintChangeGenerator"
},
{
  "name":"liquibase.diff.output.changelog.core.UnexpectedViewChangeGenerator"
},
{
  "name":"liquibase.diff.output.report.DiffToReport"
},
{
  "name":"liquibase.diff.output.report.DiffToReport$1"
},
{
  "name":"liquibase.diff.output.report.DiffToReport$2"
},
{
  "name":"liquibase.executor.AbstractExecutor"
},
{
  "name":"liquibase.executor.Executor"
},
{
  "name":"liquibase.executor.ExecutorService"
},
{
  "name":"liquibase.executor.LoggingExecutor"
},
{
  "name":"liquibase.executor.LoggingExecutor$1"
},
{
  "name":"liquibase.executor.LoggingExecutor$NoopWriter"
},
{
  "name":"liquibase.executor.jvm.ArgPreparedStatementSetter"
},
{
  "name":"liquibase.executor.jvm.ArgTypePreparedStatementSetter"
},
{
  "name":"liquibase.executor.jvm.CallableStatementCallback"
},
{
  "name":"liquibase.executor.jvm.ColumnMapRowMapper"
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor$1"
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor$1UpdateStatementCallback"
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallback"
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor$ExecuteStatementCallbackAndCatch"
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor$QueryCallableStatementCallback"
},
{
  "name":"liquibase.executor.jvm.JdbcExecutor$QueryStatementCallback"
},
{
  "name":"liquibase.executor.jvm.PreparedStatementCallback"
},
{
  "name":"liquibase.executor.jvm.PreparedStatementSetter"
},
{
  "name":"liquibase.executor.jvm.ResultSetExtractor"
},
{
  "name":"liquibase.executor.jvm.RowCallbackHandler"
},
{
  "name":"liquibase.executor.jvm.RowMapper"
},
{
  "name":"liquibase.executor.jvm.RowMapperNotNullConstraintsResultSetExtractor"
},
{
  "name":"liquibase.executor.jvm.RowMapperResultSetExtractor"
},
{
  "name":"liquibase.executor.jvm.SingleColumnRowMapper"
},
{
  "name":"liquibase.executor.jvm.SqlParameter"
},
{
  "name":"liquibase.executor.jvm.SqlParameterValue"
},
{
  "name":"liquibase.executor.jvm.SqlTypeValue"
},
{
  "name":"liquibase.executor.jvm.StatementCallback"
},
{
  "name":"liquibase.executor.jvm.StatementCreatorUtils"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase"
},
{
  "name":"liquibase.license.LicenseService"
},
{
  "name":"liquibase.lockservice.DatabaseChangeLogLock"
},
{
  "name":"liquibase.lockservice.LockService"
},
{
  "name":"liquibase.lockservice.LockServiceFactory"
},
{
  "name":"liquibase.lockservice.LockServiceFactory$1"
},
{
  "name":"liquibase.lockservice.LockServiceImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.lockservice.OfflineLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.lockservice.StandardLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.logging.LogFactory"
},
{
  "name":"liquibase.logging.LogLevel"
},
{
  "name":"liquibase.logging.LogService"
},
{
  "name":"liquibase.logging.LogType"
},
{
  "name":"liquibase.logging.Logger"
},
{
  "name":"liquibase.logging.LoggerContext"
},
{
  "name":"liquibase.logging.LoggerFactory"
},
{
  "name":"liquibase.logging.core.AbstractLogger"
},
{
  "name":"liquibase.logging.core.AbstractLoggerFactory"
},
{
  "name":"liquibase.logging.core.DefaultLoggerConfiguration"
},
{
  "name":"liquibase.logging.core.NoOpLoggerContext"
},
{
  "name":"liquibase.logging.core.Slf4JLoggerFactory"
},
{
  "name":"liquibase.logging.core.Slf4jLogger"
},
{
  "name":"liquibase.logging.core.Slf4jLoggerContext"
},
{
  "name":"liquibase.parser.ChangeLogParser"
},
{
  "name":"liquibase.parser.ChangeLogParserCofiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.parser.NamespaceDetails"
},
{
  "name":"liquibase.parser.core.xml.AbstractChangeLogParser"
},
{
  "name":"liquibase.parser.core.xml.ClassLoaderXsdStreamResolver"
},
{
  "name":"liquibase.parser.core.xml.ContextClassLoaderXsdStreamResolver"
},
{
  "name":"liquibase.parser.core.xml.LiquibaseEntityResolver"
},
{
  "name":"liquibase.parser.core.xml.LiquibaseSchemaResolver"
},
{
  "name":"liquibase.parser.core.xml.ResourceAccessorXsdStreamResolver"
},
{
  "name":"liquibase.parser.core.xml.StandardNamespaceDetails",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.parser.core.xml.XMLChangeLogSAXHandler"
},
{
  "name":"liquibase.parser.core.xml.XMLChangeLogSAXParser",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.parser.core.xml.XMLChangeLogSAXParser$1"
},
{
  "name":"liquibase.parser.core.xml.XsdStreamResolver"
},
{
  "name":"liquibase.precondition.AbstractPrecondition",
  "allDeclaredFields":true
},
{
  "name":"liquibase.precondition.Conditional"
},
{
  "name":"liquibase.precondition.CustomPrecondition"
},
{
  "name":"liquibase.precondition.CustomPreconditionWrapper",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.ErrorPrecondition"
},
{
  "name":"liquibase.precondition.FailedPrecondition"
},
{
  "name":"liquibase.precondition.Precondition"
},
{
  "name":"liquibase.precondition.PreconditionFactory"
},
{
  "name":"liquibase.precondition.PreconditionLogic",
  "allDeclaredFields":true
},
{
  "name":"liquibase.precondition.core.AndPrecondition",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.ChangeLogPropertyDefinedPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.ChangeSetExecutedPrecondition",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.ColumnExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.DBMSPrecondition",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.ForeignKeyExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.IndexExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.NotPrecondition",
  "allDeclaredFields":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.ObjectQuotingStrategyPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.OrPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.PreconditionContainer",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.PreconditionContainer$ErrorOption"
},
{
  "name":"liquibase.precondition.core.PreconditionContainer$FailOption"
},
{
  "name":"liquibase.precondition.core.PreconditionContainer$OnSqlOutputOption"
},
{
  "name":"liquibase.precondition.core.PrimaryKeyExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.RowCountPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.RunningAsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.SequenceExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.SqlPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.TableExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.TableIsEmptyPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.precondition.core.ViewExistsPrecondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.A"
},
{
  "name":"liquibase.pro.packaged.B"
},
{
  "name":"liquibase.pro.packaged.C"
},
{
  "name":"liquibase.pro.packaged.D"
},
{
  "name":"liquibase.pro.packaged.E"
},
{
  "name":"liquibase.pro.packaged.F"
},
{
  "name":"liquibase.pro.packaged.G"
},
{
  "name":"liquibase.pro.packaged.H"
},
{
  "name":"liquibase.pro.packaged.I"
},
{
  "name":"liquibase.pro.packaged.J"
},
{
  "name":"liquibase.pro.packaged.K",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.pro.packaged.L"
},
{
  "name":"liquibase.pro.packaged.M"
},
{
  "name":"liquibase.pro.packaged.N"
},
{
  "name":"liquibase.pro.packaged.O"
},
{
  "name":"liquibase.pro.packaged.P"
},
{
  "name":"liquibase.pro.packaged.Q"
},
{
  "name":"liquibase.pro.packaged.R"
},
{
  "name":"liquibase.pro.packaged.S"
},
{
  "name":"liquibase.pro.packaged.T"
},
{
  "name":"liquibase.pro.packaged.U"
},
{
  "name":"liquibase.pro.packaged.V"
},
{
  "name":"liquibase.pro.packaged.W"
},
{
  "name":"liquibase.pro.packaged.X"
},
{
  "name":"liquibase.pro.packaged.Y"
},
{
  "name":"liquibase.pro.packaged.Z"
},
{
  "name":"liquibase.pro.packaged.a",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.pro.packaged.aA"
},
{
  "name":"liquibase.pro.packaged.aB"
},
{
  "name":"liquibase.pro.packaged.aC"
},
{
  "name":"liquibase.pro.packaged.aD"
},
{
  "name":"liquibase.pro.packaged.aE"
},
{
  "name":"liquibase.pro.packaged.aF"
},
{
  "name":"liquibase.pro.packaged.aG"
},
{
  "name":"liquibase.pro.packaged.aH"
},
{
  "name":"liquibase.pro.packaged.aI"
},
{
  "name":"liquibase.pro.packaged.aJ"
},
{
  "name":"liquibase.pro.packaged.aK"
},
{
  "name":"liquibase.pro.packaged.aL"
},
{
  "name":"liquibase.pro.packaged.aM"
},
{
  "name":"liquibase.pro.packaged.aN"
},
{
  "name":"liquibase.pro.packaged.aO"
},
{
  "name":"liquibase.pro.packaged.aO$1"
},
{
  "name":"liquibase.pro.packaged.aP"
},
{
  "name":"liquibase.pro.packaged.aQ"
},
{
  "name":"liquibase.pro.packaged.aQ$1"
},
{
  "name":"liquibase.pro.packaged.aR"
},
{
  "name":"liquibase.pro.packaged.aS"
},
{
  "name":"liquibase.pro.packaged.aT"
},
{
  "name":"liquibase.pro.packaged.aU"
},
{
  "name":"liquibase.pro.packaged.aV"
},
{
  "name":"liquibase.pro.packaged.aW"
},
{
  "name":"liquibase.pro.packaged.aX"
},
{
  "name":"liquibase.pro.packaged.aY"
},
{
  "name":"liquibase.pro.packaged.aZ"
},
{
  "name":"liquibase.pro.packaged.aa"
},
{
  "name":"liquibase.pro.packaged.ab"
},
{
  "name":"liquibase.pro.packaged.ac"
},
{
  "name":"liquibase.pro.packaged.ad"
},
{
  "name":"liquibase.pro.packaged.ad$1"
},
{
  "name":"liquibase.pro.packaged.ae"
},
{
  "name":"liquibase.pro.packaged.af"
},
{
  "name":"liquibase.pro.packaged.ag"
},
{
  "name":"liquibase.pro.packaged.ah"
},
{
  "name":"liquibase.pro.packaged.ai"
},
{
  "name":"liquibase.pro.packaged.aj"
},
{
  "name":"liquibase.pro.packaged.ak"
},
{
  "name":"liquibase.pro.packaged.al"
},
{
  "name":"liquibase.pro.packaged.am"
},
{
  "name":"liquibase.pro.packaged.an"
},
{
  "name":"liquibase.pro.packaged.ao"
},
{
  "name":"liquibase.pro.packaged.ap"
},
{
  "name":"liquibase.pro.packaged.ap$1"
},
{
  "name":"liquibase.pro.packaged.aq"
},
{
  "name":"liquibase.pro.packaged.ar"
},
{
  "name":"liquibase.pro.packaged.ar$1"
},
{
  "name":"liquibase.pro.packaged.as"
},
{
  "name":"liquibase.pro.packaged.at"
},
{
  "name":"liquibase.pro.packaged.au"
},
{
  "name":"liquibase.pro.packaged.av"
},
{
  "name":"liquibase.pro.packaged.aw"
},
{
  "name":"liquibase.pro.packaged.ax"
},
{
  "name":"liquibase.pro.packaged.ay"
},
{
  "name":"liquibase.pro.packaged.az"
},
{
  "name":"liquibase.pro.packaged.b"
},
{
  "name":"liquibase.pro.packaged.bA"
},
{
  "name":"liquibase.pro.packaged.bB"
},
{
  "name":"liquibase.pro.packaged.bC"
},
{
  "name":"liquibase.pro.packaged.bD"
},
{
  "name":"liquibase.pro.packaged.bE"
},
{
  "name":"liquibase.pro.packaged.bF"
},
{
  "name":"liquibase.pro.packaged.bG"
},
{
  "name":"liquibase.pro.packaged.bH"
},
{
  "name":"liquibase.pro.packaged.bI"
},
{
  "name":"liquibase.pro.packaged.bJ"
},
{
  "name":"liquibase.pro.packaged.bK"
},
{
  "name":"liquibase.pro.packaged.bL"
},
{
  "name":"liquibase.pro.packaged.bM"
},
{
  "name":"liquibase.pro.packaged.bN"
},
{
  "name":"liquibase.pro.packaged.bO"
},
{
  "name":"liquibase.pro.packaged.bP"
},
{
  "name":"liquibase.pro.packaged.bQ"
},
{
  "name":"liquibase.pro.packaged.bR"
},
{
  "name":"liquibase.pro.packaged.bS"
},
{
  "name":"liquibase.pro.packaged.bT"
},
{
  "name":"liquibase.pro.packaged.bU"
},
{
  "name":"liquibase.pro.packaged.bV"
},
{
  "name":"liquibase.pro.packaged.bW"
},
{
  "name":"liquibase.pro.packaged.bW$1"
},
{
  "name":"liquibase.pro.packaged.bX"
},
{
  "name":"liquibase.pro.packaged.bY"
},
{
  "name":"liquibase.pro.packaged.bZ"
},
{
  "name":"liquibase.pro.packaged.ba"
},
{
  "name":"liquibase.pro.packaged.bb"
},
{
  "name":"liquibase.pro.packaged.bc"
},
{
  "name":"liquibase.pro.packaged.bd"
},
{
  "name":"liquibase.pro.packaged.be"
},
{
  "name":"liquibase.pro.packaged.bf"
},
{
  "name":"liquibase.pro.packaged.bg"
},
{
  "name":"liquibase.pro.packaged.bh"
},
{
  "name":"liquibase.pro.packaged.bi"
},
{
  "name":"liquibase.pro.packaged.bj"
},
{
  "name":"liquibase.pro.packaged.bk"
},
{
  "name":"liquibase.pro.packaged.bl"
},
{
  "name":"liquibase.pro.packaged.bm"
},
{
  "name":"liquibase.pro.packaged.bn"
},
{
  "name":"liquibase.pro.packaged.bo"
},
{
  "name":"liquibase.pro.packaged.bp"
},
{
  "name":"liquibase.pro.packaged.bq"
},
{
  "name":"liquibase.pro.packaged.br"
},
{
  "name":"liquibase.pro.packaged.bs"
},
{
  "name":"liquibase.pro.packaged.bt"
},
{
  "name":"liquibase.pro.packaged.bu"
},
{
  "name":"liquibase.pro.packaged.bu[]"
},
{
  "name":"liquibase.pro.packaged.bv"
},
{
  "name":"liquibase.pro.packaged.bw"
},
{
  "name":"liquibase.pro.packaged.bx"
},
{
  "name":"liquibase.pro.packaged.by"
},
{
  "name":"liquibase.pro.packaged.bz"
},
{
  "name":"liquibase.pro.packaged.c"
},
{
  "name":"liquibase.pro.packaged.cA"
},
{
  "name":"liquibase.pro.packaged.cB"
},
{
  "name":"liquibase.pro.packaged.cC"
},
{
  "name":"liquibase.pro.packaged.cD"
},
{
  "name":"liquibase.pro.packaged.cE"
},
{
  "name":"liquibase.pro.packaged.cE$1"
},
{
  "name":"liquibase.pro.packaged.cF"
},
{
  "name":"liquibase.pro.packaged.cG"
},
{
  "name":"liquibase.pro.packaged.cH"
},
{
  "name":"liquibase.pro.packaged.cI"
},
{
  "name":"liquibase.pro.packaged.cJ"
},
{
  "name":"liquibase.pro.packaged.cK"
},
{
  "name":"liquibase.pro.packaged.cL"
},
{
  "name":"liquibase.pro.packaged.cM"
},
{
  "name":"liquibase.pro.packaged.cN"
},
{
  "name":"liquibase.pro.packaged.cO"
},
{
  "name":"liquibase.pro.packaged.cP"
},
{
  "name":"liquibase.pro.packaged.cQ"
},
{
  "name":"liquibase.pro.packaged.cR"
},
{
  "name":"liquibase.pro.packaged.cS"
},
{
  "name":"liquibase.pro.packaged.cT"
},
{
  "name":"liquibase.pro.packaged.cU"
},
{
  "name":"liquibase.pro.packaged.cV"
},
{
  "name":"liquibase.pro.packaged.cW"
},
{
  "name":"liquibase.pro.packaged.cX"
},
{
  "name":"liquibase.pro.packaged.cY"
},
{
  "name":"liquibase.pro.packaged.cZ"
},
{
  "name":"liquibase.pro.packaged.ca"
},
{
  "name":"liquibase.pro.packaged.cb"
},
{
  "name":"liquibase.pro.packaged.cc"
},
{
  "name":"liquibase.pro.packaged.cd"
},
{
  "name":"liquibase.pro.packaged.ce"
},
{
  "name":"liquibase.pro.packaged.cf"
},
{
  "name":"liquibase.pro.packaged.cg"
},
{
  "name":"liquibase.pro.packaged.ch"
},
{
  "name":"liquibase.pro.packaged.ci"
},
{
  "name":"liquibase.pro.packaged.cj"
},
{
  "name":"liquibase.pro.packaged.ck",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.pro.packaged.cl"
},
{
  "name":"liquibase.pro.packaged.cm"
},
{
  "name":"liquibase.pro.packaged.cn"
},
{
  "name":"liquibase.pro.packaged.co"
},
{
  "name":"liquibase.pro.packaged.cp"
},
{
  "name":"liquibase.pro.packaged.cq"
},
{
  "name":"liquibase.pro.packaged.cr"
},
{
  "name":"liquibase.pro.packaged.cs"
},
{
  "name":"liquibase.pro.packaged.ct"
},
{
  "name":"liquibase.pro.packaged.cu"
},
{
  "name":"liquibase.pro.packaged.cv"
},
{
  "name":"liquibase.pro.packaged.cw"
},
{
  "name":"liquibase.pro.packaged.cx"
},
{
  "name":"liquibase.pro.packaged.cy"
},
{
  "name":"liquibase.pro.packaged.cz"
},
{
  "name":"liquibase.pro.packaged.d"
},
{
  "name":"liquibase.pro.packaged.dA"
},
{
  "name":"liquibase.pro.packaged.dB"
},
{
  "name":"liquibase.pro.packaged.dC"
},
{
  "name":"liquibase.pro.packaged.dD"
},
{
  "name":"liquibase.pro.packaged.dE"
},
{
  "name":"liquibase.pro.packaged.dF"
},
{
  "name":"liquibase.pro.packaged.dG"
},
{
  "name":"liquibase.pro.packaged.dH"
},
{
  "name":"liquibase.pro.packaged.dI"
},
{
  "name":"liquibase.pro.packaged.dJ"
},
{
  "name":"liquibase.pro.packaged.dK"
},
{
  "name":"liquibase.pro.packaged.dL"
},
{
  "name":"liquibase.pro.packaged.dM"
},
{
  "name":"liquibase.pro.packaged.dN"
},
{
  "name":"liquibase.pro.packaged.dO"
},
{
  "name":"liquibase.pro.packaged.dP"
},
{
  "name":"liquibase.pro.packaged.dQ"
},
{
  "name":"liquibase.pro.packaged.dR"
},
{
  "name":"liquibase.pro.packaged.dS"
},
{
  "name":"liquibase.pro.packaged.dT"
},
{
  "name":"liquibase.pro.packaged.dU"
},
{
  "name":"liquibase.pro.packaged.dV"
},
{
  "name":"liquibase.pro.packaged.dW"
},
{
  "name":"liquibase.pro.packaged.dX"
},
{
  "name":"liquibase.pro.packaged.dY"
},
{
  "name":"liquibase.pro.packaged.dZ"
},
{
  "name":"liquibase.pro.packaged.da"
},
{
  "name":"liquibase.pro.packaged.db"
},
{
  "name":"liquibase.pro.packaged.dc"
},
{
  "name":"liquibase.pro.packaged.dd"
},
{
  "name":"liquibase.pro.packaged.de"
},
{
  "name":"liquibase.pro.packaged.df"
},
{
  "name":"liquibase.pro.packaged.dg"
},
{
  "name":"liquibase.pro.packaged.dh"
},
{
  "name":"liquibase.pro.packaged.di"
},
{
  "name":"liquibase.pro.packaged.dj"
},
{
  "name":"liquibase.pro.packaged.dk"
},
{
  "name":"liquibase.pro.packaged.dl"
},
{
  "name":"liquibase.pro.packaged.dm"
},
{
  "name":"liquibase.pro.packaged.dn"
},
{
  "name":"liquibase.pro.packaged.do"
},
{
  "name":"liquibase.pro.packaged.dp"
},
{
  "name":"liquibase.pro.packaged.dq"
},
{
  "name":"liquibase.pro.packaged.dr"
},
{
  "name":"liquibase.pro.packaged.ds"
},
{
  "name":"liquibase.pro.packaged.dt"
},
{
  "name":"liquibase.pro.packaged.du"
},
{
  "name":"liquibase.pro.packaged.dv"
},
{
  "name":"liquibase.pro.packaged.dw"
},
{
  "name":"liquibase.pro.packaged.dx"
},
{
  "name":"liquibase.pro.packaged.dy"
},
{
  "name":"liquibase.pro.packaged.dz"
},
{
  "name":"liquibase.pro.packaged.e"
},
{
  "name":"liquibase.pro.packaged.eA"
},
{
  "name":"liquibase.pro.packaged.eB"
},
{
  "name":"liquibase.pro.packaged.eC"
},
{
  "name":"liquibase.pro.packaged.eD"
},
{
  "name":"liquibase.pro.packaged.eE"
},
{
  "name":"liquibase.pro.packaged.eF"
},
{
  "name":"liquibase.pro.packaged.eG"
},
{
  "name":"liquibase.pro.packaged.eH"
},
{
  "name":"liquibase.pro.packaged.eI"
},
{
  "name":"liquibase.pro.packaged.eJ"
},
{
  "name":"liquibase.pro.packaged.eK"
},
{
  "name":"liquibase.pro.packaged.eL"
},
{
  "name":"liquibase.pro.packaged.eM"
},
{
  "name":"liquibase.pro.packaged.eN"
},
{
  "name":"liquibase.pro.packaged.eO"
},
{
  "name":"liquibase.pro.packaged.eP"
},
{
  "name":"liquibase.pro.packaged.eQ"
},
{
  "name":"liquibase.pro.packaged.eR"
},
{
  "name":"liquibase.pro.packaged.eS"
},
{
  "name":"liquibase.pro.packaged.eT"
},
{
  "name":"liquibase.pro.packaged.eU"
},
{
  "name":"liquibase.pro.packaged.eV"
},
{
  "name":"liquibase.pro.packaged.eW"
},
{
  "name":"liquibase.pro.packaged.eX"
},
{
  "name":"liquibase.pro.packaged.eY"
},
{
  "name":"liquibase.pro.packaged.eZ"
},
{
  "name":"liquibase.pro.packaged.ea"
},
{
  "name":"liquibase.pro.packaged.eb"
},
{
  "name":"liquibase.pro.packaged.ec"
},
{
  "name":"liquibase.pro.packaged.ed"
},
{
  "name":"liquibase.pro.packaged.ee"
},
{
  "name":"liquibase.pro.packaged.ef"
},
{
  "name":"liquibase.pro.packaged.eg"
},
{
  "name":"liquibase.pro.packaged.eh"
},
{
  "name":"liquibase.pro.packaged.ei"
},
{
  "name":"liquibase.pro.packaged.ej"
},
{
  "name":"liquibase.pro.packaged.ek"
},
{
  "name":"liquibase.pro.packaged.el"
},
{
  "name":"liquibase.pro.packaged.el$1"
},
{
  "name":"liquibase.pro.packaged.em"
},
{
  "name":"liquibase.pro.packaged.en"
},
{
  "name":"liquibase.pro.packaged.eo"
},
{
  "name":"liquibase.pro.packaged.ep"
},
{
  "name":"liquibase.pro.packaged.ep$1"
},
{
  "name":"liquibase.pro.packaged.eq"
},
{
  "name":"liquibase.pro.packaged.eq$1"
},
{
  "name":"liquibase.pro.packaged.er"
},
{
  "name":"liquibase.pro.packaged.es"
},
{
  "name":"liquibase.pro.packaged.et"
},
{
  "name":"liquibase.pro.packaged.eu"
},
{
  "name":"liquibase.pro.packaged.ev"
},
{
  "name":"liquibase.pro.packaged.ew"
},
{
  "name":"liquibase.pro.packaged.ex"
},
{
  "name":"liquibase.pro.packaged.ey"
},
{
  "name":"liquibase.pro.packaged.ez"
},
{
  "name":"liquibase.pro.packaged.f",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.pro.packaged.fA"
},
{
  "name":"liquibase.pro.packaged.fB"
},
{
  "name":"liquibase.pro.packaged.fC"
},
{
  "name":"liquibase.pro.packaged.fD"
},
{
  "name":"liquibase.pro.packaged.fE"
},
{
  "name":"liquibase.pro.packaged.fF"
},
{
  "name":"liquibase.pro.packaged.fG"
},
{
  "name":"liquibase.pro.packaged.fH"
},
{
  "name":"liquibase.pro.packaged.fI"
},
{
  "name":"liquibase.pro.packaged.fJ"
},
{
  "name":"liquibase.pro.packaged.fK"
},
{
  "name":"liquibase.pro.packaged.fL"
},
{
  "name":"liquibase.pro.packaged.fM"
},
{
  "name":"liquibase.pro.packaged.fN"
},
{
  "name":"liquibase.pro.packaged.fN$1"
},
{
  "name":"liquibase.pro.packaged.fO"
},
{
  "name":"liquibase.pro.packaged.fP"
},
{
  "name":"liquibase.pro.packaged.fQ"
},
{
  "name":"liquibase.pro.packaged.fQ$1"
},
{
  "name":"liquibase.pro.packaged.fQ$2"
},
{
  "name":"liquibase.pro.packaged.fQ$3"
},
{
  "name":"liquibase.pro.packaged.fQ$4"
},
{
  "name":"liquibase.pro.packaged.fQ$5"
},
{
  "name":"liquibase.pro.packaged.fR"
},
{
  "name":"liquibase.pro.packaged.fS"
},
{
  "name":"liquibase.pro.packaged.fT"
},
{
  "name":"liquibase.pro.packaged.fU"
},
{
  "name":"liquibase.pro.packaged.fV"
},
{
  "name":"liquibase.pro.packaged.fW"
},
{
  "name":"liquibase.pro.packaged.fX"
},
{
  "name":"liquibase.pro.packaged.fY"
},
{
  "name":"liquibase.pro.packaged.fZ"
},
{
  "name":"liquibase.pro.packaged.fa"
},
{
  "name":"liquibase.pro.packaged.fb"
},
{
  "name":"liquibase.pro.packaged.fc"
},
{
  "name":"liquibase.pro.packaged.fd"
},
{
  "name":"liquibase.pro.packaged.fe"
},
{
  "name":"liquibase.pro.packaged.ff"
},
{
  "name":"liquibase.pro.packaged.fg"
},
{
  "name":"liquibase.pro.packaged.fh"
},
{
  "name":"liquibase.pro.packaged.fi"
},
{
  "name":"liquibase.pro.packaged.fj"
},
{
  "name":"liquibase.pro.packaged.fk"
},
{
  "name":"liquibase.pro.packaged.fl"
},
{
  "name":"liquibase.pro.packaged.fm"
},
{
  "name":"liquibase.pro.packaged.fn"
},
{
  "name":"liquibase.pro.packaged.fo"
},
{
  "name":"liquibase.pro.packaged.fo$1"
},
{
  "name":"liquibase.pro.packaged.fp"
},
{
  "name":"liquibase.pro.packaged.fq"
},
{
  "name":"liquibase.pro.packaged.fr"
},
{
  "name":"liquibase.pro.packaged.fs"
},
{
  "name":"liquibase.pro.packaged.ft"
},
{
  "name":"liquibase.pro.packaged.fu"
},
{
  "name":"liquibase.pro.packaged.fv"
},
{
  "name":"liquibase.pro.packaged.fw"
},
{
  "name":"liquibase.pro.packaged.fx"
},
{
  "name":"liquibase.pro.packaged.fy"
},
{
  "name":"liquibase.pro.packaged.fz"
},
{
  "name":"liquibase.pro.packaged.g"
},
{
  "name":"liquibase.pro.packaged.gA"
},
{
  "name":"liquibase.pro.packaged.gB"
},
{
  "name":"liquibase.pro.packaged.gC"
},
{
  "name":"liquibase.pro.packaged.gD"
},
{
  "name":"liquibase.pro.packaged.gE"
},
{
  "name":"liquibase.pro.packaged.gF"
},
{
  "name":"liquibase.pro.packaged.gG"
},
{
  "name":"liquibase.pro.packaged.gH"
},
{
  "name":"liquibase.pro.packaged.gI"
},
{
  "name":"liquibase.pro.packaged.gJ"
},
{
  "name":"liquibase.pro.packaged.gK"
},
{
  "name":"liquibase.pro.packaged.gL"
},
{
  "name":"liquibase.pro.packaged.gM"
},
{
  "name":"liquibase.pro.packaged.gN"
},
{
  "name":"liquibase.pro.packaged.gO"
},
{
  "name":"liquibase.pro.packaged.gP"
},
{
  "name":"liquibase.pro.packaged.gQ"
},
{
  "name":"liquibase.pro.packaged.gR"
},
{
  "name":"liquibase.pro.packaged.gS"
},
{
  "name":"liquibase.pro.packaged.gT"
},
{
  "name":"liquibase.pro.packaged.gU"
},
{
  "name":"liquibase.pro.packaged.gV"
},
{
  "name":"liquibase.pro.packaged.gW"
},
{
  "name":"liquibase.pro.packaged.gX"
},
{
  "name":"liquibase.pro.packaged.gY"
},
{
  "name":"liquibase.pro.packaged.gZ"
},
{
  "name":"liquibase.pro.packaged.ga"
},
{
  "name":"liquibase.pro.packaged.ga$1"
},
{
  "name":"liquibase.pro.packaged.ga$10"
},
{
  "name":"liquibase.pro.packaged.ga$11"
},
{
  "name":"liquibase.pro.packaged.ga$12"
},
{
  "name":"liquibase.pro.packaged.ga$13"
},
{
  "name":"liquibase.pro.packaged.ga$2"
},
{
  "name":"liquibase.pro.packaged.ga$3"
},
{
  "name":"liquibase.pro.packaged.ga$4"
},
{
  "name":"liquibase.pro.packaged.ga$5"
},
{
  "name":"liquibase.pro.packaged.ga$6"
},
{
  "name":"liquibase.pro.packaged.ga$7"
},
{
  "name":"liquibase.pro.packaged.ga$8"
},
{
  "name":"liquibase.pro.packaged.ga$9"
},
{
  "name":"liquibase.pro.packaged.gb"
},
{
  "name":"liquibase.pro.packaged.gc"
},
{
  "name":"liquibase.pro.packaged.gd"
},
{
  "name":"liquibase.pro.packaged.ge"
},
{
  "name":"liquibase.pro.packaged.gf"
},
{
  "name":"liquibase.pro.packaged.gg"
},
{
  "name":"liquibase.pro.packaged.gh"
},
{
  "name":"liquibase.pro.packaged.gh$1"
},
{
  "name":"liquibase.pro.packaged.gi"
},
{
  "name":"liquibase.pro.packaged.gj"
},
{
  "name":"liquibase.pro.packaged.gk"
},
{
  "name":"liquibase.pro.packaged.gl"
},
{
  "name":"liquibase.pro.packaged.gm"
},
{
  "name":"liquibase.pro.packaged.gn"
},
{
  "name":"liquibase.pro.packaged.go"
},
{
  "name":"liquibase.pro.packaged.gp"
},
{
  "name":"liquibase.pro.packaged.gq"
},
{
  "name":"liquibase.pro.packaged.gr"
},
{
  "name":"liquibase.pro.packaged.gs"
},
{
  "name":"liquibase.pro.packaged.gt"
},
{
  "name":"liquibase.pro.packaged.gu"
},
{
  "name":"liquibase.pro.packaged.gv"
},
{
  "name":"liquibase.pro.packaged.gw"
},
{
  "name":"liquibase.pro.packaged.gx"
},
{
  "name":"liquibase.pro.packaged.gx$1"
},
{
  "name":"liquibase.pro.packaged.gy"
},
{
  "name":"liquibase.pro.packaged.gz"
},
{
  "name":"liquibase.pro.packaged.h"
},
{
  "name":"liquibase.pro.packaged.hA"
},
{
  "name":"liquibase.pro.packaged.hB"
},
{
  "name":"liquibase.pro.packaged.hC"
},
{
  "name":"liquibase.pro.packaged.hD"
},
{
  "name":"liquibase.pro.packaged.hE"
},
{
  "name":"liquibase.pro.packaged.hF"
},
{
  "name":"liquibase.pro.packaged.hG"
},
{
  "name":"liquibase.pro.packaged.hH"
},
{
  "name":"liquibase.pro.packaged.hI"
},
{
  "name":"liquibase.pro.packaged.hJ"
},
{
  "name":"liquibase.pro.packaged.hK"
},
{
  "name":"liquibase.pro.packaged.hL"
},
{
  "name":"liquibase.pro.packaged.hM"
},
{
  "name":"liquibase.pro.packaged.hN"
},
{
  "name":"liquibase.pro.packaged.hO"
},
{
  "name":"liquibase.pro.packaged.hP"
},
{
  "name":"liquibase.pro.packaged.hQ"
},
{
  "name":"liquibase.pro.packaged.hR"
},
{
  "name":"liquibase.pro.packaged.hS"
},
{
  "name":"liquibase.pro.packaged.hT"
},
{
  "name":"liquibase.pro.packaged.hU"
},
{
  "name":"liquibase.pro.packaged.hV"
},
{
  "name":"liquibase.pro.packaged.hW"
},
{
  "name":"liquibase.pro.packaged.hX"
},
{
  "name":"liquibase.pro.packaged.hY"
},
{
  "name":"liquibase.pro.packaged.hZ"
},
{
  "name":"liquibase.pro.packaged.ha"
},
{
  "name":"liquibase.pro.packaged.hb"
},
{
  "name":"liquibase.pro.packaged.hc"
},
{
  "name":"liquibase.pro.packaged.hd"
},
{
  "name":"liquibase.pro.packaged.he"
},
{
  "name":"liquibase.pro.packaged.hf"
},
{
  "name":"liquibase.pro.packaged.hg"
},
{
  "name":"liquibase.pro.packaged.hg$1"
},
{
  "name":"liquibase.pro.packaged.hh"
},
{
  "name":"liquibase.pro.packaged.hi"
},
{
  "name":"liquibase.pro.packaged.hj"
},
{
  "name":"liquibase.pro.packaged.hk"
},
{
  "name":"liquibase.pro.packaged.hl"
},
{
  "name":"liquibase.pro.packaged.hm"
},
{
  "name":"liquibase.pro.packaged.hn"
},
{
  "name":"liquibase.pro.packaged.ho"
},
{
  "name":"liquibase.pro.packaged.hp"
},
{
  "name":"liquibase.pro.packaged.hq"
},
{
  "name":"liquibase.pro.packaged.hr"
},
{
  "name":"liquibase.pro.packaged.hs"
},
{
  "name":"liquibase.pro.packaged.ht"
},
{
  "name":"liquibase.pro.packaged.hu"
},
{
  "name":"liquibase.pro.packaged.hv"
},
{
  "name":"liquibase.pro.packaged.hw"
},
{
  "name":"liquibase.pro.packaged.hx"
},
{
  "name":"liquibase.pro.packaged.hy"
},
{
  "name":"liquibase.pro.packaged.hz"
},
{
  "name":"liquibase.pro.packaged.i",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.pro.packaged.iA"
},
{
  "name":"liquibase.pro.packaged.iB"
},
{
  "name":"liquibase.pro.packaged.iC"
},
{
  "name":"liquibase.pro.packaged.iD"
},
{
  "name":"liquibase.pro.packaged.iE"
},
{
  "name":"liquibase.pro.packaged.iF"
},
{
  "name":"liquibase.pro.packaged.iG"
},
{
  "name":"liquibase.pro.packaged.iH"
},
{
  "name":"liquibase.pro.packaged.iI"
},
{
  "name":"liquibase.pro.packaged.iJ"
},
{
  "name":"liquibase.pro.packaged.iK"
},
{
  "name":"liquibase.pro.packaged.iL"
},
{
  "name":"liquibase.pro.packaged.iM"
},
{
  "name":"liquibase.pro.packaged.iN"
},
{
  "name":"liquibase.pro.packaged.iO"
},
{
  "name":"liquibase.pro.packaged.iP"
},
{
  "name":"liquibase.pro.packaged.iQ"
},
{
  "name":"liquibase.pro.packaged.iR"
},
{
  "name":"liquibase.pro.packaged.iS"
},
{
  "name":"liquibase.pro.packaged.iT"
},
{
  "name":"liquibase.pro.packaged.iU"
},
{
  "name":"liquibase.pro.packaged.iV"
},
{
  "name":"liquibase.pro.packaged.iW"
},
{
  "name":"liquibase.pro.packaged.iX"
},
{
  "name":"liquibase.pro.packaged.iY"
},
{
  "name":"liquibase.pro.packaged.iZ"
},
{
  "name":"liquibase.pro.packaged.ia"
},
{
  "name":"liquibase.pro.packaged.ib"
},
{
  "name":"liquibase.pro.packaged.ic"
},
{
  "name":"liquibase.pro.packaged.id"
},
{
  "name":"liquibase.pro.packaged.ie"
},
{
  "name":"liquibase.pro.packaged.if"
},
{
  "name":"liquibase.pro.packaged.ig"
},
{
  "name":"liquibase.pro.packaged.ih"
},
{
  "name":"liquibase.pro.packaged.ii"
},
{
  "name":"liquibase.pro.packaged.ij"
},
{
  "name":"liquibase.pro.packaged.ik"
},
{
  "name":"liquibase.pro.packaged.il"
},
{
  "name":"liquibase.pro.packaged.im"
},
{
  "name":"liquibase.pro.packaged.in"
},
{
  "name":"liquibase.pro.packaged.io"
},
{
  "name":"liquibase.pro.packaged.ip"
},
{
  "name":"liquibase.pro.packaged.iq"
},
{
  "name":"liquibase.pro.packaged.ir"
},
{
  "name":"liquibase.pro.packaged.is"
},
{
  "name":"liquibase.pro.packaged.it"
},
{
  "name":"liquibase.pro.packaged.iu"
},
{
  "name":"liquibase.pro.packaged.iv"
},
{
  "name":"liquibase.pro.packaged.iw"
},
{
  "name":"liquibase.pro.packaged.ix"
},
{
  "name":"liquibase.pro.packaged.iy"
},
{
  "name":"liquibase.pro.packaged.iz"
},
{
  "name":"liquibase.pro.packaged.j"
},
{
  "name":"liquibase.pro.packaged.jA"
},
{
  "name":"liquibase.pro.packaged.jB"
},
{
  "name":"liquibase.pro.packaged.jC"
},
{
  "name":"liquibase.pro.packaged.jD"
},
{
  "name":"liquibase.pro.packaged.jE"
},
{
  "name":"liquibase.pro.packaged.jF"
},
{
  "name":"liquibase.pro.packaged.jG"
},
{
  "name":"liquibase.pro.packaged.jH"
},
{
  "name":"liquibase.pro.packaged.jI"
},
{
  "name":"liquibase.pro.packaged.jJ"
},
{
  "name":"liquibase.pro.packaged.jK"
},
{
  "name":"liquibase.pro.packaged.jL"
},
{
  "name":"liquibase.pro.packaged.jM"
},
{
  "name":"liquibase.pro.packaged.jN"
},
{
  "name":"liquibase.pro.packaged.jO"
},
{
  "name":"liquibase.pro.packaged.jP"
},
{
  "name":"liquibase.pro.packaged.jQ"
},
{
  "name":"liquibase.pro.packaged.jQ$1"
},
{
  "name":"liquibase.pro.packaged.jQ$2"
},
{
  "name":"liquibase.pro.packaged.jQ$3"
},
{
  "name":"liquibase.pro.packaged.jQ$4"
},
{
  "name":"liquibase.pro.packaged.jR"
},
{
  "name":"liquibase.pro.packaged.jS"
},
{
  "name":"liquibase.pro.packaged.jT"
},
{
  "name":"liquibase.pro.packaged.jU"
},
{
  "name":"liquibase.pro.packaged.jV"
},
{
  "name":"liquibase.pro.packaged.jW"
},
{
  "name":"liquibase.pro.packaged.jX"
},
{
  "name":"liquibase.pro.packaged.jY"
},
{
  "name":"liquibase.pro.packaged.jZ"
},
{
  "name":"liquibase.pro.packaged.ja"
},
{
  "name":"liquibase.pro.packaged.jb"
},
{
  "name":"liquibase.pro.packaged.jc"
},
{
  "name":"liquibase.pro.packaged.jd"
},
{
  "name":"liquibase.pro.packaged.je"
},
{
  "name":"liquibase.pro.packaged.jf"
},
{
  "name":"liquibase.pro.packaged.jg"
},
{
  "name":"liquibase.pro.packaged.jh"
},
{
  "name":"liquibase.pro.packaged.ji"
},
{
  "name":"liquibase.pro.packaged.jj"
},
{
  "name":"liquibase.pro.packaged.jk"
},
{
  "name":"liquibase.pro.packaged.jl"
},
{
  "name":"liquibase.pro.packaged.jm"
},
{
  "name":"liquibase.pro.packaged.jn"
},
{
  "name":"liquibase.pro.packaged.jo"
},
{
  "name":"liquibase.pro.packaged.jp"
},
{
  "name":"liquibase.pro.packaged.jq"
},
{
  "name":"liquibase.pro.packaged.jr"
},
{
  "name":"liquibase.pro.packaged.js"
},
{
  "name":"liquibase.pro.packaged.jt"
},
{
  "name":"liquibase.pro.packaged.ju"
},
{
  "name":"liquibase.pro.packaged.jv"
},
{
  "name":"liquibase.pro.packaged.jw"
},
{
  "name":"liquibase.pro.packaged.jx"
},
{
  "name":"liquibase.pro.packaged.jy"
},
{
  "name":"liquibase.pro.packaged.jz"
},
{
  "name":"liquibase.pro.packaged.jz$1"
},
{
  "name":"liquibase.pro.packaged.k"
},
{
  "name":"liquibase.pro.packaged.kA"
},
{
  "name":"liquibase.pro.packaged.kB"
},
{
  "name":"liquibase.pro.packaged.kC"
},
{
  "name":"liquibase.pro.packaged.kD"
},
{
  "name":"liquibase.pro.packaged.kE"
},
{
  "name":"liquibase.pro.packaged.kF"
},
{
  "name":"liquibase.pro.packaged.kG"
},
{
  "name":"liquibase.pro.packaged.kH"
},
{
  "name":"liquibase.pro.packaged.kI"
},
{
  "name":"liquibase.pro.packaged.kJ"
},
{
  "name":"liquibase.pro.packaged.kK"
},
{
  "name":"liquibase.pro.packaged.kL"
},
{
  "name":"liquibase.pro.packaged.kM"
},
{
  "name":"liquibase.pro.packaged.kN"
},
{
  "name":"liquibase.pro.packaged.kO"
},
{
  "name":"liquibase.pro.packaged.kP"
},
{
  "name":"liquibase.pro.packaged.kQ"
},
{
  "name":"liquibase.pro.packaged.kR"
},
{
  "name":"liquibase.pro.packaged.kS"
},
{
  "name":"liquibase.pro.packaged.kT"
},
{
  "name":"liquibase.pro.packaged.kU"
},
{
  "name":"liquibase.pro.packaged.kV"
},
{
  "name":"liquibase.pro.packaged.kW"
},
{
  "name":"liquibase.pro.packaged.kX"
},
{
  "name":"liquibase.pro.packaged.kY"
},
{
  "name":"liquibase.pro.packaged.kY$1"
},
{
  "name":"liquibase.pro.packaged.kZ"
},
{
  "name":"liquibase.pro.packaged.ka"
},
{
  "name":"liquibase.pro.packaged.kb"
},
{
  "name":"liquibase.pro.packaged.kc"
},
{
  "name":"liquibase.pro.packaged.kd"
},
{
  "name":"liquibase.pro.packaged.ke"
},
{
  "name":"liquibase.pro.packaged.kf"
},
{
  "name":"liquibase.pro.packaged.kg"
},
{
  "name":"liquibase.pro.packaged.kh"
},
{
  "name":"liquibase.pro.packaged.ki"
},
{
  "name":"liquibase.pro.packaged.ki$1"
},
{
  "name":"liquibase.pro.packaged.kj"
},
{
  "name":"liquibase.pro.packaged.kj$1"
},
{
  "name":"liquibase.pro.packaged.kk"
},
{
  "name":"liquibase.pro.packaged.kl"
},
{
  "name":"liquibase.pro.packaged.km",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.km$1"
},
{
  "name":"liquibase.pro.packaged.kn",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.ko"
},
{
  "name":"liquibase.pro.packaged.kp",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.pro.packaged.kp$1"
},
{
  "name":"liquibase.pro.packaged.kq"
},
{
  "name":"liquibase.pro.packaged.kr"
},
{
  "name":"liquibase.pro.packaged.ks"
},
{
  "name":"liquibase.pro.packaged.kt"
},
{
  "name":"liquibase.pro.packaged.kt$1"
},
{
  "name":"liquibase.pro.packaged.kt$2"
},
{
  "name":"liquibase.pro.packaged.kt$3"
},
{
  "name":"liquibase.pro.packaged.kt$4"
},
{
  "name":"liquibase.pro.packaged.kt$5"
},
{
  "name":"liquibase.pro.packaged.kt$6"
},
{
  "name":"liquibase.pro.packaged.kt$7"
},
{
  "name":"liquibase.pro.packaged.ku"
},
{
  "name":"liquibase.pro.packaged.ku$1"
},
{
  "name":"liquibase.pro.packaged.ku$2"
},
{
  "name":"liquibase.pro.packaged.ku$3"
},
{
  "name":"liquibase.pro.packaged.kv"
},
{
  "name":"liquibase.pro.packaged.kv$1"
},
{
  "name":"liquibase.pro.packaged.kv$a"
},
{
  "name":"liquibase.pro.packaged.kv$a$1"
},
{
  "name":"liquibase.pro.packaged.kv$a$2"
},
{
  "name":"liquibase.pro.packaged.kv$a$3"
},
{
  "name":"liquibase.pro.packaged.kv$b"
},
{
  "name":"liquibase.pro.packaged.kw"
},
{
  "name":"liquibase.pro.packaged.kx"
},
{
  "name":"liquibase.pro.packaged.ky"
},
{
  "name":"liquibase.pro.packaged.kz"
},
{
  "name":"liquibase.pro.packaged.kz$1"
},
{
  "name":"liquibase.pro.packaged.kz$2"
},
{
  "name":"liquibase.pro.packaged.kz$3"
},
{
  "name":"liquibase.pro.packaged.kz$4"
},
{
  "name":"liquibase.pro.packaged.kz$5"
},
{
  "name":"liquibase.pro.packaged.kz$6"
},
{
  "name":"liquibase.pro.packaged.l"
},
{
  "name":"liquibase.pro.packaged.lA"
},
{
  "name":"liquibase.pro.packaged.lB"
},
{
  "name":"liquibase.pro.packaged.lC"
},
{
  "name":"liquibase.pro.packaged.lC$1"
},
{
  "name":"liquibase.pro.packaged.lD"
},
{
  "name":"liquibase.pro.packaged.lE"
},
{
  "name":"liquibase.pro.packaged.lF"
},
{
  "name":"liquibase.pro.packaged.lG"
},
{
  "name":"liquibase.pro.packaged.lH"
},
{
  "name":"liquibase.pro.packaged.lI"
},
{
  "name":"liquibase.pro.packaged.lJ"
},
{
  "name":"liquibase.pro.packaged.lK"
},
{
  "name":"liquibase.pro.packaged.lL"
},
{
  "name":"liquibase.pro.packaged.lM"
},
{
  "name":"liquibase.pro.packaged.lN"
},
{
  "name":"liquibase.pro.packaged.lO"
},
{
  "name":"liquibase.pro.packaged.lP"
},
{
  "name":"liquibase.pro.packaged.lQ"
},
{
  "name":"liquibase.pro.packaged.lR"
},
{
  "name":"liquibase.pro.packaged.lR$1"
},
{
  "name":"liquibase.pro.packaged.lR$2"
},
{
  "name":"liquibase.pro.packaged.lS"
},
{
  "name":"liquibase.pro.packaged.lT"
},
{
  "name":"liquibase.pro.packaged.lU"
},
{
  "name":"liquibase.pro.packaged.lV"
},
{
  "name":"liquibase.pro.packaged.lW"
},
{
  "name":"liquibase.pro.packaged.la"
},
{
  "name":"liquibase.pro.packaged.lb"
},
{
  "name":"liquibase.pro.packaged.lb$1"
},
{
  "name":"liquibase.pro.packaged.lb$1$1"
},
{
  "name":"liquibase.pro.packaged.lb$2"
},
{
  "name":"liquibase.pro.packaged.lb$2$1"
},
{
  "name":"liquibase.pro.packaged.lc"
},
{
  "name":"liquibase.pro.packaged.lc$1"
},
{
  "name":"liquibase.pro.packaged.lc$1$1"
},
{
  "name":"liquibase.pro.packaged.lc$2"
},
{
  "name":"liquibase.pro.packaged.lc$2$1"
},
{
  "name":"liquibase.pro.packaged.ld"
},
{
  "name":"liquibase.pro.packaged.le"
},
{
  "name":"liquibase.pro.packaged.lf"
},
{
  "name":"liquibase.pro.packaged.lg"
},
{
  "name":"liquibase.pro.packaged.lh"
},
{
  "name":"liquibase.pro.packaged.li"
},
{
  "name":"liquibase.pro.packaged.lj"
},
{
  "name":"liquibase.pro.packaged.lk"
},
{
  "name":"liquibase.pro.packaged.lk$1"
},
{
  "name":"liquibase.pro.packaged.ll"
},
{
  "name":"liquibase.pro.packaged.lm"
},
{
  "name":"liquibase.pro.packaged.ln"
},
{
  "name":"liquibase.pro.packaged.lo"
},
{
  "name":"liquibase.pro.packaged.lp"
},
{
  "name":"liquibase.pro.packaged.lq"
},
{
  "name":"liquibase.pro.packaged.lr"
},
{
  "name":"liquibase.pro.packaged.ls"
},
{
  "name":"liquibase.pro.packaged.lt"
},
{
  "name":"liquibase.pro.packaged.lu"
},
{
  "name":"liquibase.pro.packaged.lv"
},
{
  "name":"liquibase.pro.packaged.lw"
},
{
  "name":"liquibase.pro.packaged.lx"
},
{
  "name":"liquibase.pro.packaged.ly"
},
{
  "name":"liquibase.pro.packaged.lz"
},
{
  "name":"liquibase.pro.packaged.lz$1"
},
{
  "name":"liquibase.pro.packaged.m"
},
{
  "name":"liquibase.pro.packaged.n"
},
{
  "name":"liquibase.pro.packaged.o"
},
{
  "name":"liquibase.pro.packaged.p"
},
{
  "name":"liquibase.pro.packaged.q"
},
{
  "name":"liquibase.pro.packaged.r"
},
{
  "name":"liquibase.pro.packaged.s"
},
{
  "name":"liquibase.pro.packaged.t"
},
{
  "name":"liquibase.pro.packaged.u"
},
{
  "name":"liquibase.pro.packaged.v"
},
{
  "name":"liquibase.pro.packaged.w"
},
{
  "name":"liquibase.pro.packaged.x"
},
{
  "name":"liquibase.pro.packaged.y"
},
{
  "name":"liquibase.pro.packaged.z"
},
{
  "name":"liquibase.sdk.database.MockDatabase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.serializer.AbstractLiquibaseSerializable",
  "allDeclaredFields":true
},
{
  "name":"liquibase.serializer.LiquibaseSerializable$SerializationType"
},
{
  "name":"liquibase.serializer.core.xml.XMLChangeLogSerializer"
},
{
  "name":"liquibase.servicelocator.CustomResolverServiceLocator"
},
{
  "name":"liquibase.servicelocator.LiquibaseService",
  "allDeclaredMethods":true
},
{
  "name":"liquibase.snapshot.CachedRow"
},
{
  "name":"liquibase.snapshot.DatabaseSnapshot"
},
{
  "name":"liquibase.snapshot.EmptyDatabaseSnapshot"
},
{
  "name":"liquibase.snapshot.InvalidExampleException"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$1"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$1"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$2"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$3"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$4"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$5"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$ForeignKeysResultSetCache"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetColumnResultSetCache"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetNotNullConstraintsResultSetCache"
},
{
  "name":"liquibase.snapshot.JdbcDatabaseSnapshot$CachingDatabaseMetaData$GetNotNullConstraintsResultSetCache$1"
},
{
  "name":"liquibase.snapshot.RestoredDatabaseSnapshot"
},
{
  "name":"liquibase.snapshot.ResultSetCache"
},
{
  "name":"liquibase.snapshot.ResultSetCache$ResultSetExtractor"
},
{
  "name":"liquibase.snapshot.ResultSetCache$ResultSetExtractor$1"
},
{
  "name":"liquibase.snapshot.ResultSetCache$RowData"
},
{
  "name":"liquibase.snapshot.ResultSetCache$SingleResultSetExtractor"
},
{
  "name":"liquibase.snapshot.ResultSetCache$UnionResultSetExtractor"
},
{
  "name":"liquibase.snapshot.SnapshotControl"
},
{
  "name":"liquibase.snapshot.SnapshotGenerator"
},
{
  "name":"liquibase.snapshot.SnapshotGeneratorChain"
},
{
  "name":"liquibase.snapshot.SnapshotGeneratorComparator"
},
{
  "name":"liquibase.snapshot.SnapshotGeneratorFactory"
},
{
  "name":"liquibase.snapshot.SnapshotIdService"
},
{
  "name":"liquibase.snapshot.SnapshotListener"
},
{
  "name":"liquibase.snapshot.jvm.CatalogSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorH2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorOracle",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ColumnSnapshotGeneratorPostgres",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.DataSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ForeignKeySnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.IndexSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.JdbcSnapshotGenerator"
},
{
  "name":"liquibase.snapshot.jvm.PrimaryKeySnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.SchemaSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.SequenceSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.TableSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.UniqueConstraintSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.snapshot.jvm.ViewSnapshotGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.AppendSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.PrependSqlVisitor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.RegExpReplaceSqlVisitor",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sql.visitor.ReplaceSqlVisitor",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.SqlGenerator"
},
{
  "name":"liquibase.sqlgenerator.SqlGeneratorChain"
},
{
  "name":"liquibase.sqlgenerator.SqlGeneratorComparator"
},
{
  "name":"liquibase.sqlgenerator.SqlGeneratorFactory"
},
{
  "name":"liquibase.sqlgenerator.core.AbstractSqlGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorDB2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorHsqlH2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorMySQL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddAutoIncrementGeneratorSQLite$1"
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGeneratorDefaultClauseBeforeNotNull",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGeneratorSQLite",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddColumnGeneratorSQLite$1"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorDerby",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorMSSQL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorMySQL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorOracle",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorPostgres",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSQLite$1"
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddDefaultValueGeneratorSybaseASA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddForeignKeyConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddPrimaryKeyGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddPrimaryKeyGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AddUniqueConstraintGeneratorTDS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.AlterSequenceGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.BatchDmlExecutablePreparedStatementGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.ClearDatabaseChangeLogTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CommentGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CopyRowsGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogLockTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateDatabaseChangeLogTableGeneratorSybase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird$1"
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorFirebird$ColumnAnalysisResult"
},
{
  "name":"liquibase.sqlgenerator.core.CreateIndexGeneratorPostgres",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateProcedureGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateSequenceGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateTableGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateViewGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.CreateViewGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DeleteGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropColumnGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropDefaultValueGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropForeignKeyConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropIndexGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropPrimaryKeyGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropProcedureGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropSequenceGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropUniqueConstraintGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.DropViewGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetNextChangeSetSequenceValueGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDB2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorDerby",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorFirebird",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorHsql",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorMSSQL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorOracle",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorPostgres",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybase",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.GetViewDefinitionGeneratorSybaseASA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InitializeDatabaseChangeLogLockTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertDataChangeGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGenerator"
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorDB2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorH2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorHsql",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorInformix",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMSSQL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorMySQL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorOracle",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorPostgres",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSQLite",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertOrUpdateGeneratorSybaseASA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.InsertSetGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.LockDatabaseChangeLogGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.MarkChangeSetRanGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.ModifyDataTypeGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RawSqlGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.ReindexGeneratorSQLite",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RemoveChangeSetRanStatusGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RenameColumnGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RenameSequenceGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RenameTableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RenameViewGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.ReorganizeTableGeneratorDB2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.RuntimeGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogGenerator$1"
},
{
  "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.SelectFromDatabaseChangeLogLockGenerator$1"
},
{
  "name":"liquibase.sqlgenerator.core.SetColumnRemarksGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.SetNullableGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.SetTableRemarksGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.StoredProcedureGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.TableRowCountGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.TagDatabaseGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.UnlockDatabaseChangeLogGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.UpdateChangeSetChecksumGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.UpdateDataChangeGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.sqlgenerator.core.UpdateGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"liquibase.structure.AbstractDatabaseObject"
},
{
  "name":"liquibase.structure.CatalogLevelObject"
},
{
  "name":"liquibase.structure.DatabaseLevelObject"
},
{
  "name":"liquibase.structure.DatabaseObject"
},
{
  "name":"liquibase.structure.DatabaseObjectCollection"
},
{
  "name":"liquibase.structure.DatabaseObjectCollection$1"
},
{
  "name":"liquibase.structure.DatabaseObjectComparator"
},
{
  "name":"liquibase.structure.core.Catalog"
},
{
  "name":"liquibase.structure.core.Column"
},
{
  "name":"liquibase.structure.core.Column$AutoIncrementInformation"
},
{
  "name":"liquibase.structure.core.Data"
},
{
  "name":"liquibase.structure.core.DataType"
},
{
  "name":"liquibase.structure.core.DataType$ColumnSizeUnit"
},
{
  "name":"liquibase.structure.core.DatabaseObjectFactory"
},
{
  "name":"liquibase.structure.core.ForeignKey"
},
{
  "name":"liquibase.structure.core.ForeignKey$1"
},
{
  "name":"liquibase.structure.core.ForeignKey$2"
},
{
  "name":"liquibase.structure.core.ForeignKey$3"
},
{
  "name":"liquibase.structure.core.ForeignKey$4"
},
{
  "name":"liquibase.structure.core.ForeignKeyConstraintType"
},
{
  "name":"liquibase.structure.core.Index"
},
{
  "name":"liquibase.structure.core.PrimaryKey"
},
{
  "name":"liquibase.structure.core.PrimaryKey$1"
},
{
  "name":"liquibase.structure.core.Relation"
},
{
  "name":"liquibase.structure.core.Schema"
},
{
  "name":"liquibase.structure.core.Sequence"
},
{
  "name":"liquibase.structure.core.StoredDatabaseLogic"
},
{
  "name":"liquibase.structure.core.StoredProcedure"
},
{
  "name":"liquibase.structure.core.Table"
},
{
  "name":"liquibase.structure.core.UniqueConstraint"
},
{
  "name":"liquibase.structure.core.UniqueConstraint$1"
},
{
  "name":"liquibase.structure.core.View"
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.AllArguments",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Default",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultCall",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.DefaultMethod",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.FieldValue",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Origin",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.StubValue",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.Super",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"net.bytebuddy.implementation.bind.annotation.This",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "allPublicMethods":true
},
{
  "name":"org.apache.logging.log4j.LogManager"
},
{
  "name":"org.apache.logging.log4j.Logger"
},
{
  "name":"org.apache.logging.log4j.message.DefaultFlowMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.message.ParameterizedMessageFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.spi.AbstractLogger"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.log4j.util.internal.DefaultObjectInputFilter",
  "allPublicMethods":true
},
{
  "name":"org.apache.logging.slf4j.MDCContextMap",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.slf4j.SLF4JLoggerContextFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DH$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.DSTU4145$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ECGOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.EdEC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.ElGamal$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GM$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.GOST$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.IES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.RSA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.asymmetric.X509$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2b$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Blake2s$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.DSTU7564$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.GOST3411$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Keccak$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.MD5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD160$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.RIPEMD320$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA224$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA384$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SHA512$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.SM3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Skein$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Tiger$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.digest.Whirlpool$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.drbg.DRBG$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.BCFKS$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.keystore.PKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.AES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARC4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ARIA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Blowfish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.CAST6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Camellia$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.ChaCha$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DES$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DESede$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.DSTU7624$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST28147$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.GOST3412_2015$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grain128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Grainv1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC128$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.HC256$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.IDEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Noekeon$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.OpenSSLPBKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF1$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPBKDF2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.PBEPKCS12$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Poly1305$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC5$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.RC6$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Rijndael$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SCRYPT$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SEED$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SM4$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Salsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Serpent$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Shacal2$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.SipHash$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Skipjack$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.TLSKDF$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Threefish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.Twofish$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPC$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.VMPCKSA3$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XSalsa20$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bouncycastle.jcajce.provider.symmetric.XTEA$Mappings",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.Driver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.engine.Constants",
  "fields":[
    {"name":"BUILD_ID"}, 
    {"name":"VERSION_MAJOR"}, 
    {"name":"VERSION_MINOR"}
  ]
},
{
  "name":"org.h2.engine.Engine",
  "methods":[{"name":"getInstance","parameterTypes":[] }]
},
{
  "name":"org.h2.jdbc.JdbcLob",
  "methods":[{"name":"free","parameterTypes":[] }]
},
{
  "name":"org.h2.mvstore.db.MVTableEngine",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.server.web.WebServlet"
},
{
  "name":"org.h2.store.fs.FilePathAsync",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathDisk",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathMem",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathMemLZF",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathNio",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathNioMapped",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathNioMem",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathNioMemLZF",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathRetryOnInterrupt",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathSplit",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.h2.store.fs.FilePathZip",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.SessionFactory"
},
{
  "name":"org.hibernate.annotations.common.util.impl.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.DisabledCaching",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cache.internal.NoCachingRegionFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.cfg.beanvalidation.TypeSafeActivator",
  "methods":[{"name":"activate","parameterTypes":["org.hibernate.cfg.beanvalidation.ActivationContext"] }]
},
{
  "name":"org.hibernate.dialect.H2Dialect",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.jndi.internal.JndiServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.spi.SessionImplementor"
},
{
  "name":"org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.event.service.internal.EventListenerRegistryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.event.spi.AutoFlushEventListener[]"
},
{
  "name":"org.hibernate.event.spi.DeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.DirtyCheckEventListener[]"
},
{
  "name":"org.hibernate.event.spi.EventType",
  "allDeclaredFields":true
},
{
  "name":"org.hibernate.event.spi.EvictEventListener[]"
},
{
  "name":"org.hibernate.event.spi.FlushEntityEventListener[]"
},
{
  "name":"org.hibernate.event.spi.FlushEventListener[]"
},
{
  "name":"org.hibernate.event.spi.InitializeCollectionEventListener[]"
},
{
  "name":"org.hibernate.event.spi.LoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.LockEventListener[]"
},
{
  "name":"org.hibernate.event.spi.MergeEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PersistEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostDeleteEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostInsertEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostLoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PostUpdateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.PreLoadEventListener[]"
},
{
  "name":"org.hibernate.event.spi.RefreshEventListener[]"
},
{
  "name":"org.hibernate.event.spi.ReplicateEventListener[]"
},
{
  "name":"org.hibernate.event.spi.ResolveNaturalIdEventListener[]"
},
{
  "name":"org.hibernate.event.spi.SaveOrUpdateEventListener[]"
},
{
  "name":"org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.hql.internal.ast.HqlToken",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.BinaryArithmeticOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.BinaryLogicOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.BooleanLiteralNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.CollectionFunction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.CountNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.DeleteStatement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.DotNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.FromClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.FromElement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.IdentNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.ImpliedFromElement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.InLogicOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.InsertStatement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.IntoClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.IsNotNullLogicOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.IsNullLogicOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.LiteralNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.MapKeyNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.MethodNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.Node",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.NullNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.OrderByClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.ParameterNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.QueryNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SelectClause",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SelectExpressionImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SqlFragment",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.SqlNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.UnaryLogicOperatorNode",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.hql.internal.ast.tree.UpdateStatement",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.Assigned",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.internal.CoreMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.jmx.internal.DisabledJmxServiceImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.persister.collection.BasicCollectionPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Collection","org.hibernate.cache.spi.access.CollectionDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
},
{
  "name":"org.hibernate.persister.collection.OneToManyPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Collection","org.hibernate.cache.spi.access.CollectionDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
},
{
  "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
},
{
  "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.proxy.HibernateProxy",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getHibernateLazyInitializer","parameterTypes":[] }, 
    {"name":"writeReplace","parameterTypes":[] }
  ]
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.stat.internal.StatisticsImpl",
  "allPublicMethods":true
},
{
  "name":"org.hibernate.tuple.component.PojoComponentTuplizer",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Component"] }]
},
{
  "name":"org.hibernate.tuple.entity.PojoEntityTuplizer",
  "methods":[{"name":"<init>","parameterTypes":["org.hibernate.tuple.entity.EntityMetamodel","org.hibernate.mapping.PersistentClass"] }]
},
{
  "name":"org.hibernate.type.EnumType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.AdvancedCache"
},
{
  "name":"org.infinispan.Cache"
},
{
  "name":"org.infinispan.batch.BatchContainer",
  "fields":[{"name":"transactionManager"}]
},
{
  "name":"org.infinispan.cache.impl.AbstractDelegatingAdvancedCache",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.cache.impl.AbstractDelegatingCache",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.cache.impl.CacheConfigurationMBean",
  "allDeclaredMethods":true,
  "fields":[{"name":"configuration"}]
},
{
  "name":"org.infinispan.cache.impl.CacheImpl",
  "fields":[
    {"name":"authorizationManager"}, 
    {"name":"batchContainer"}, 
    {"name":"cacheManager"}, 
    {"name":"cacheManagerNotifier"}, 
    {"name":"commandsFactory"}, 
    {"name":"componentRegistry"}, 
    {"name":"config"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"evictionManager"}, 
    {"name":"expirationManager"}, 
    {"name":"globalCfg"}, 
    {"name":"invocationContextFactory"}, 
    {"name":"invoker"}, 
    {"name":"keyPartitioner"}, 
    {"name":"localTopologyManager"}, 
    {"name":"lockManager"}, 
    {"name":"marshaller"}, 
    {"name":"notifier"}, 
    {"name":"partitionHandlingManager"}, 
    {"name":"rpcManager"}, 
    {"name":"stateTransferManager"}, 
    {"name":"transactionManager"}, 
    {"name":"txTable"}
  ],
  "methods":[{"name":"preStart","parameterTypes":[] }]
},
{
  "name":"org.infinispan.cache.impl.EncoderCache",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"componentRegistry"}, 
    {"name":"entryFactory"}
  ]
},
{
  "name":"org.infinispan.commands.CancellationService"
},
{
  "name":"org.infinispan.commands.CommandsFactory"
},
{
  "name":"org.infinispan.commands.CommandsFactoryImpl",
  "fields":[
    {"name":"backupSender"}, 
    {"name":"biasManager"}, 
    {"name":"cache"}, 
    {"name":"cacheManager"}, 
    {"name":"cancellationService"}, 
    {"name":"clusterStreamManager"}, 
    {"name":"clusteringDependentLogic"}, 
    {"name":"commandAckCollector"}, 
    {"name":"componentRegistry"}, 
    {"name":"configuration"}, 
    {"name":"configurationManager"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"entryFactory"}, 
    {"name":"groupManager"}, 
    {"name":"icf"}, 
    {"name":"interceptorChain"}, 
    {"name":"iteratorHandler"}, 
    {"name":"keyPartitioner"}, 
    {"name":"localStreamManager"}, 
    {"name":"lockManager"}, 
    {"name":"marshaller"}, 
    {"name":"moduleCommandInitializers"}, 
    {"name":"notifier"}, 
    {"name":"orderedUpdatesManager"}, 
    {"name":"recoveryManager"}, 
    {"name":"rpcManager"}, 
    {"name":"stateConsumer"}, 
    {"name":"stateProvider"}, 
    {"name":"stateReceiver"}, 
    {"name":"stateTransferLock"}, 
    {"name":"stateTransferManager"}, 
    {"name":"timeService"}, 
    {"name":"txTable"}, 
    {"name":"versionGenerator"}, 
    {"name":"xSiteStateConsumer"}, 
    {"name":"xSiteStateProvider"}, 
    {"name":"xSiteStateTransferManager"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.commands.RemoteCommandsFactory",
  "fields":[
    {"name":"cacheManager"}, 
    {"name":"commandFactories"}, 
    {"name":"globalComponentRegistry"}
  ]
},
{
  "name":"org.infinispan.commons.api.BasicCacheContainer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.infinispan.commons.api.Lifecycle",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.infinispan.commons.io.ByteBufferFactory"
},
{
  "name":"org.infinispan.commons.jmx.PlatformMBeanServerLookup",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.commons.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.infinispan.commons.marshall.StreamingMarshaller"
},
{
  "name":"org.infinispan.commons.time.TimeService"
},
{
  "name":"org.infinispan.configuration.ConfigurationManager"
},
{
  "name":"org.infinispan.configuration.cache.Configuration"
},
{
  "name":"org.infinispan.configuration.global.GlobalConfiguration"
},
{
  "name":"org.infinispan.conflict.EntryMergePolicyFactoryRegistry"
},
{
  "name":"org.infinispan.conflict.impl.DefaultConflictManager",
  "fields":[
    {"name":"cache"}, 
    {"name":"cacheConfiguration"}, 
    {"name":"commandsFactory"}, 
    {"name":"distributionManager"}, 
    {"name":"interceptorChain"}, 
    {"name":"invocationContextFactory"}, 
    {"name":"mergePolicyRegistry"}, 
    {"name":"rpcManager"}, 
    {"name":"stateConsumer"}, 
    {"name":"stateReceiver"}, 
    {"name":"stateTransferExecutor"}, 
    {"name":"timeService"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.conflict.impl.InternalConflictManager"
},
{
  "name":"org.infinispan.conflict.impl.StateReceiver"
},
{
  "name":"org.infinispan.conflict.impl.StateReceiverImpl",
  "allPublicMethods":true,
  "fields":[
    {"name":"cacheName"}, 
    {"name":"cacheNotifier"}, 
    {"name":"commandsFactory"}, 
    {"name":"dataContainer"}, 
    {"name":"rpcManager"}, 
    {"name":"stateTransferExecutor"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.container.impl.AbstractInternalDataContainer",
  "fields":[
    {"name":"activator"}, 
    {"name":"configuration"}, 
    {"name":"entryFactory"}, 
    {"name":"evictionManager"}, 
    {"name":"expirationManager"}, 
    {"name":"keyPartitioner"}, 
    {"name":"passivator"}, 
    {"name":"timeService"}
  ]
},
{
  "name":"org.infinispan.container.impl.DefaultDataContainer",
  "methods":[{"name":"clear","parameterTypes":[] }]
},
{
  "name":"org.infinispan.container.impl.DefaultSegmentedDataContainer",
  "methods":[
    {"name":"clear","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.container.impl.EntryFactory"
},
{
  "name":"org.infinispan.container.impl.EntryFactoryImpl",
  "fields":[
    {"name":"configuration"}, 
    {"name":"container"}, 
    {"name":"distributionManager"}, 
    {"name":"expirationManager"}, 
    {"name":"timeService"}, 
    {"name":"versionGenerator"}
  ],
  "methods":[{"name":"init","parameterTypes":[] }]
},
{
  "name":"org.infinispan.container.impl.InternalDataContainer"
},
{
  "name":"org.infinispan.container.impl.InternalEntryFactory"
},
{
  "name":"org.infinispan.container.impl.InternalEntryFactoryImpl",
  "fields":[{"name":"timeService"}]
},
{
  "name":"org.infinispan.container.offheap.OffHeapMemoryAllocator"
},
{
  "name":"org.infinispan.container.versioning.NumericVersionGenerator",
  "fields":[
    {"name":"cacheManagerNotifier"}, 
    {"name":"configuration"}, 
    {"name":"transport"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.container.versioning.NumericVersionGenerator$RankCalculator",
  "allPublicMethods":true
},
{
  "name":"org.infinispan.container.versioning.VersionGenerator"
},
{
  "name":"org.infinispan.context.AbstractInvocationContextFactory",
  "fields":[{"name":"config"}]
},
{
  "name":"org.infinispan.context.Flag[]"
},
{
  "name":"org.infinispan.context.InvocationContextFactory"
},
{
  "name":"org.infinispan.context.NonTransactionalInvocationContextFactory",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.context.TransactionalInvocationContextFactory",
  "allPublicMethods":true,
  "fields":[
    {"name":"batchContainer"}, 
    {"name":"tm"}, 
    {"name":"transactionTable"}
  ],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.distribution.DistributionManager"
},
{
  "name":"org.infinispan.distribution.RemoteValueRetrievedListener"
},
{
  "name":"org.infinispan.distribution.TriangleOrderManager",
  "fields":[{"name":"distributionManager"}]
},
{
  "name":"org.infinispan.distribution.ch.KeyPartitioner"
},
{
  "name":"org.infinispan.distribution.ch.impl.HashFunctionPartitioner",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.distribution.ch.impl.KeyPartitionerFactory",
  "fields":[{"name":"groupManager"}],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.distribution.group.impl.GroupManager"
},
{
  "name":"org.infinispan.distribution.group.impl.GroupManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.distribution.impl.DistributionManagerImpl",
  "fields":[
    {"name":"configuration"}, 
    {"name":"keyPartitioner"}, 
    {"name":"transport"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.distribution.impl.L1ManagerImpl",
  "fields":[
    {"name":"commandsFactory"}, 
    {"name":"configuration"}, 
    {"name":"rpcManager"}, 
    {"name":"scheduledExecutor"}, 
    {"name":"timeService"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.encoding.DataConversion",
  "methods":[{"name":"injectDependencies","parameterTypes":["org.infinispan.configuration.global.GlobalConfiguration","org.infinispan.marshall.core.EncoderRegistry","org.infinispan.configuration.cache.Configuration"] }]
},
{
  "name":"org.infinispan.eviction.ActivationManager"
},
{
  "name":"org.infinispan.eviction.EvictionManager"
},
{
  "name":"org.infinispan.eviction.PassivationManager"
},
{
  "name":"org.infinispan.eviction.impl.ActivationManagerImpl",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"cfg"}, 
    {"name":"distributionManager"}, 
    {"name":"keyPartitioner"}, 
    {"name":"persistenceManager"}, 
    {"name":"statisticsEnabled"}
  ]
},
{
  "name":"org.infinispan.eviction.impl.EvictionManagerImpl",
  "fields":[
    {"name":"cacheNotifier"}, 
    {"name":"cfg"}, 
    {"name":"interceptorChain"}
  ]
},
{
  "name":"org.infinispan.eviction.impl.PassivationManagerImpl",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"cfg"}, 
    {"name":"container"}, 
    {"name":"distributionManager"}, 
    {"name":"keyPartitioner"}, 
    {"name":"marshalledEntryFactory"}, 
    {"name":"notifier"}, 
    {"name":"persistenceManager"}, 
    {"name":"timeService"}
  ]
},
{
  "name":"org.infinispan.executors.LazyInitializingBlockingTaskAwareExecutorService",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.executors.LazyInitializingExecutorService",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.executors.LazyInitializingScheduledExecutorService",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.executors.ManageableExecutorService",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.expiration.impl.ClusterExpirationManager",
  "fields":[
    {"name":"asyncExecutor"}, 
    {"name":"cacheRef"}, 
    {"name":"distributionManager"}, 
    {"name":"rpcManager"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.expiration.impl.ExpirationManagerImpl",
  "fields":[
    {"name":"cacheNotifier"}, 
    {"name":"cf"}, 
    {"name":"cfRef"}, 
    {"name":"componentRegistry"}, 
    {"name":"configuration"}, 
    {"name":"dataContainer"}, 
    {"name":"executor"}, 
    {"name":"invokerRef"}, 
    {"name":"keyPartitioner"}, 
    {"name":"persistenceManager"}, 
    {"name":"timeService"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.expiration.impl.InternalExpirationManager"
},
{
  "name":"org.infinispan.factories.AbstractComponentFactory",
  "fields":[
    {"name":"globalComponentRegistry"}, 
    {"name":"globalConfiguration"}
  ]
},
{
  "name":"org.infinispan.factories.AbstractNamedCacheComponentFactory",
  "fields":[
    {"name":"basicComponentRegistry"}, 
    {"name":"componentRegistry"}, 
    {"name":"configuration"}
  ]
},
{
  "name":"org.infinispan.factories.AuthorizationManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.ComponentRegistry",
  "fields":[{"name":"cacheManagerNotifier"}]
},
{
  "name":"org.infinispan.factories.DataContainerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.DistributionManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.EmptyConstructorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.EmptyConstructorNamedCacheFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.EncoderRegistryFactory",
  "fields":[
    {"name":"embeddedCacheManager"}, 
    {"name":"globalMarshaller"}
  ],
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.EntryMetaFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.ExpirationManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.GlobalComponentRegistry"
},
{
  "name":"org.infinispan.factories.InboundInvocationHandlerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.InterceptorChainFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.InternalCacheFactory$AbstractGetAdvancedCache",
  "fields":[
    {"name":"componentRegistry"}, 
    {"name":"expirationManager"}, 
    {"name":"keyPartitioner"}
  ],
  "methods":[{"name":"wireRealCache","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.InternalCacheFactory$GetReplCache",
  "fields":[{"name":"cacheNotifier"}]
},
{
  "name":"org.infinispan.factories.InternalCacheFactory$StatsCache",
  "fields":[{"name":"timeService"}]
},
{
  "name":"org.infinispan.factories.LockContainerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.LockManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.MarshallerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.NamedExecutorsFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.PartitionHandlingManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.RecoveryManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.ResponseGeneratorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.RpcManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.StateTransferComponentFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.StreamManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.TransactionManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.TransactionSynchronizationRegistryFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.TransactionTableFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.TransportFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.VersionGeneratorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.factories.annotations.SurvivesRestarts",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.factories.components.ComponentMetadataRepo"
},
{
  "name":"org.infinispan.factories.impl.BasicComponentRegistry"
},
{
  "name":"org.infinispan.factories.scopes.Scope",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.functional.impl.FunctionalNotifier"
},
{
  "name":"org.infinispan.globalstate.GlobalStateManager"
},
{
  "name":"org.infinispan.globalstate.impl.GlobalConfigurationManagerImpl",
  "fields":[
    {"name":"cacheManager"}, 
    {"name":"configurationManager"}, 
    {"name":"globalComponentRegistry"}, 
    {"name":"internalCacheRegistry"}, 
    {"name":"localTopologyManager"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.globalstate.impl.GlobalConfigurationStateListener",
  "allPublicMethods":true
},
{
  "name":"org.infinispan.globalstate.impl.GlobalStateManagerImpl",
  "fields":[
    {"name":"globalConfiguration"}, 
    {"name":"timeService"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.health.impl.jmx.HealthJMXExposerImpl",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.interceptors.AsyncInterceptorChain"
},
{
  "name":"org.infinispan.interceptors.BaseAsyncInterceptor",
  "fields":[{"name":"cacheConfiguration"}]
},
{
  "name":"org.infinispan.interceptors.distribution.BaseDistributionInterceptor",
  "fields":[
    {"name":"expirationManager"}, 
    {"name":"keyPartitioner"}, 
    {"name":"rvrl"}, 
    {"name":"timeService"}
  ],
  "methods":[{"name":"configure","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.distribution.DistributionBulkInterceptor",
  "fields":[{"name":"cache"}]
},
{
  "name":"org.infinispan.interceptors.distribution.TriangleDistributionInterceptor",
  "fields":[
    {"name":"commandAckCollector"}, 
    {"name":"commandsFactory"}, 
    {"name":"triangleOrderManager"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.impl.AsyncInterceptorChainImpl",
  "methods":[{"name":"printChainInfo","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.impl.BaseRpcInterceptor",
  "fields":[
    {"name":"componentRegistry"}, 
    {"name":"rpcManager"}
  ],
  "methods":[{"name":"init","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.impl.BaseStateTransferInterceptor",
  "fields":[
    {"name":"configuration"}, 
    {"name":"distributionManager"}, 
    {"name":"remoteExecutor"}, 
    {"name":"stateTransferLock"}, 
    {"name":"timeoutExecutor"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.impl.BatchingInterceptor",
  "fields":[
    {"name":"batchContainer"}, 
    {"name":"invocationContextFactory"}, 
    {"name":"transactionManager"}
  ]
},
{
  "name":"org.infinispan.interceptors.impl.CacheMgmtInterceptor",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"allocator"}, 
    {"name":"cache"}, 
    {"name":"componentRegistry"}, 
    {"name":"dataContainer"}, 
    {"name":"timeService"}
  ]
},
{
  "name":"org.infinispan.interceptors.impl.ClusteringInterceptor",
  "fields":[
    {"name":"cf"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"entryFactory"}, 
    {"name":"lockManager"}
  ]
},
{
  "name":"org.infinispan.interceptors.impl.EntryWrappingInterceptor",
  "fields":[
    {"name":"cdl"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"entryFactory"}, 
    {"name":"groupManager"}, 
    {"name":"keyPartitioner"}, 
    {"name":"notifier"}, 
    {"name":"stateConsumer"}, 
    {"name":"stateTransferLock"}, 
    {"name":"versionGenerator"}, 
    {"name":"xSiteStateConsumer"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.impl.InvocationContextInterceptor",
  "fields":[
    {"name":"componentRegistry"}, 
    {"name":"txTable"}
  ],
  "methods":[
    {"name":"setStartStatus","parameterTypes":[] }, 
    {"name":"setStopStatus","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.interceptors.impl.JmxStatsCommandInterceptor",
  "fields":[{"name":"statisticsEnabled"}],
  "methods":[{"name":"checkStatisticsUsed","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.impl.NotificationInterceptor",
  "fields":[{"name":"notifier"}]
},
{
  "name":"org.infinispan.interceptors.impl.TxInterceptor",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"cache"}, 
    {"name":"commandsFactory"}, 
    {"name":"recoveryManager"}, 
    {"name":"txTable"}
  ]
},
{
  "name":"org.infinispan.interceptors.impl.VersionInterceptor",
  "fields":[{"name":"versionGenerator"}]
},
{
  "name":"org.infinispan.interceptors.locking.AbstractLockingInterceptor",
  "fields":[
    {"name":"cdl"}, 
    {"name":"lockManager"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.locking.AbstractTxLockingInterceptor",
  "fields":[
    {"name":"partitionHandlingManager"}, 
    {"name":"pendingLockManager"}
  ]
},
{
  "name":"org.infinispan.interceptors.locking.ClusteringDependentLogic"
},
{
  "name":"org.infinispan.interceptors.locking.ClusteringDependentLogic$AbstractClusteringDependentLogic",
  "fields":[
    {"name":"commitManager"}, 
    {"name":"configuration"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"functionalNotifier"}, 
    {"name":"keyPartitioner"}, 
    {"name":"notifier"}, 
    {"name":"persistenceManager"}, 
    {"name":"timeService"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.interceptors.locking.ClusteringDependentLogic$DistributionLogic",
  "fields":[{"name":"stateTransferLock"}]
},
{
  "name":"org.infinispan.interceptors.locking.ClusteringDependentLogic$LocalLogic",
  "methods":[{"name":"init","parameterTypes":["org.infinispan.remoting.transport.Transport","org.infinispan.configuration.cache.Configuration","org.infinispan.distribution.ch.KeyPartitioner"] }]
},
{
  "name":"org.infinispan.interceptors.locking.ClusteringDependentLogic$ReplicationLogic",
  "fields":[{"name":"stateTransferLock"}]
},
{
  "name":"org.infinispan.interceptors.locking.PessimisticLockingInterceptor",
  "fields":[{"name":"cf"}]
},
{
  "name":"org.infinispan.jmx.AbstractJmxRegistration",
  "fields":[
    {"name":"basicComponentRegistry"}, 
    {"name":"componentMetadataRepo"}, 
    {"name":"globalConfig"}
  ]
},
{
  "name":"org.infinispan.jmx.CacheJmxRegistration",
  "fields":[
    {"name":"cacheConfiguration"}, 
    {"name":"cacheName"}, 
    {"name":"globalJmxRegistration"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.jmx.CacheManagerJmxRegistration"
},
{
  "name":"org.infinispan.jmx.annotations.MBean",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.jmx.annotations.ManagedAttribute",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.jmx.annotations.ManagedOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.manager.CacheContainer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.infinispan.manager.DefaultCacheManager",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.infinispan.manager.EmbeddedCacheManager",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.infinispan.marshall.core.EncoderRegistry"
},
{
  "name":"org.infinispan.marshall.core.GlobalMarshaller",
  "fields":[
    {"name":"cmdFactory"}, 
    {"name":"gcr"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.marshall.core.MarshalledEntryFactory"
},
{
  "name":"org.infinispan.marshall.core.MarshalledEntryFactoryImpl",
  "fields":[{"name":"marshaller"}]
},
{
  "name":"org.infinispan.notifications.Listenable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.infinispan.notifications.cachelistener.CacheNotifier"
},
{
  "name":"org.infinispan.notifications.cachelistener.CacheNotifierImpl",
  "fields":[
    {"name":"cache"}, 
    {"name":"clusteringDependentLogic"}, 
    {"name":"componentRegistry"}, 
    {"name":"config"}, 
    {"name":"entryFactory"}, 
    {"name":"eventManager"}, 
    {"name":"interceptorChain"}, 
    {"name":"keyPartitioner"}, 
    {"name":"rpcManager"}, 
    {"name":"transactionManager"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.notifications.cachelistener.cluster.ClusterCacheNotifier"
},
{
  "name":"org.infinispan.notifications.cachelistener.cluster.ClusterEventManager"
},
{
  "name":"org.infinispan.notifications.cachelistener.cluster.ClusterEventManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.notifications.cachelistener.cluster.impl.BatchingClusterEventManagerImpl",
  "fields":[{"name":"cache"}],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.notifications.cachelistener.filter.KeyFilterAsCacheEventFilter",
  "methods":[{"name":"injectDependencies","parameterTypes":["org.infinispan.factories.ComponentRegistry"] }]
},
{
  "name":"org.infinispan.notifications.cachemanagerlistener.CacheManagerNotifier"
},
{
  "name":"org.infinispan.notifications.cachemanagerlistener.CacheManagerNotifierImpl",
  "fields":[{"name":"cacheManager"}]
},
{
  "name":"org.infinispan.notifications.impl.AbstractListenerImpl",
  "fields":[{"name":"asyncProcessor"}],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.partitionhandling.impl.PartitionHandlingManager"
},
{
  "name":"org.infinispan.persistence.factory.CacheStoreFactoryRegistry"
},
{
  "name":"org.infinispan.persistence.manager.OrderedUpdatesManager"
},
{
  "name":"org.infinispan.persistence.manager.PersistenceManager"
},
{
  "name":"org.infinispan.persistence.manager.PersistenceManagerImpl",
  "fields":[
    {"name":"byteBufferFactory"}, 
    {"name":"cache"}, 
    {"name":"cacheNotifier"}, 
    {"name":"cacheStoreFactoryRegistry"}, 
    {"name":"configuration"}, 
    {"name":"expirationManager"}, 
    {"name":"globalConfiguration"}, 
    {"name":"keyPartitioner"}, 
    {"name":"m"}, 
    {"name":"marshalledEntryFactory"}, 
    {"name":"persistenceExecutor"}, 
    {"name":"timeService"}, 
    {"name":"transactionManager"}, 
    {"name":"transport"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.persistence.manager.PreloadManager",
  "fields":[{"name":"persistenceManager"}],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.persistence.remote.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.infinispan.registry.InternalCacheRegistry"
},
{
  "name":"org.infinispan.registry.impl.InternalCacheRegistryImpl",
  "fields":[
    {"name":"cacheManager"}, 
    {"name":"cacheManagerJmxRegistration"}, 
    {"name":"configurationManager"}
  ]
},
{
  "name":"org.infinispan.remoting.inboundhandler.BasePerCacheInboundInvocationHandler",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"cancellationService"}, 
    {"name":"configuration"}, 
    {"name":"remoteCommandsExecutor"}, 
    {"name":"responseGenerator"}, 
    {"name":"stateTransferLock"}
  ]
},
{
  "name":"org.infinispan.remoting.inboundhandler.GlobalInboundInvocationHandler",
  "fields":[
    {"name":"backupReceiverRepository"}, 
    {"name":"globalComponentRegistry"}, 
    {"name":"remoteCommandsExecutor"}
  ]
},
{
  "name":"org.infinispan.remoting.inboundhandler.InboundInvocationHandler"
},
{
  "name":"org.infinispan.remoting.inboundhandler.NonTotalOrderPerCacheInboundInvocationHandler",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"distributionManager"}, 
    {"name":"lockManager"}
  ]
},
{
  "name":"org.infinispan.remoting.inboundhandler.PerCacheInboundInvocationHandler"
},
{
  "name":"org.infinispan.remoting.inboundhandler.TrianglePerCacheInboundInvocationHandler",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"commandAckCollector"}, 
    {"name":"commandsFactory"}, 
    {"name":"distributionManager"}, 
    {"name":"lockManager"}, 
    {"name":"rpcManager"}, 
    {"name":"triangleOrderManager"}
  ]
},
{
  "name":"org.infinispan.remoting.responses.ResponseGenerator"
},
{
  "name":"org.infinispan.remoting.rpc.RpcManager"
},
{
  "name":"org.infinispan.remoting.rpc.RpcManagerImpl",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"cf"}, 
    {"name":"configuration"}, 
    {"name":"distributionManager"}, 
    {"name":"t"}, 
    {"name":"timeService"}
  ]
},
{
  "name":"org.infinispan.remoting.transport.Transport"
},
{
  "name":"org.infinispan.remoting.transport.jgroups.JGroupsTransport",
  "allPublicMethods":true,
  "fields":[
    {"name":"configuration"}, 
    {"name":"invocationHandler"}, 
    {"name":"marshaller"}, 
    {"name":"notifier"}, 
    {"name":"remoteExecutor"}, 
    {"name":"timeService"}, 
    {"name":"timeoutExecutor"}
  ],
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.scattered.BiasManager"
},
{
  "name":"org.infinispan.security.AuthorizationManager"
},
{
  "name":"org.infinispan.statetransfer.CommitManager",
  "fields":[
    {"name":"dataContainer"}, 
    {"name":"persistenceManager"}, 
    {"name":"timeService"}
  ]
},
{
  "name":"org.infinispan.statetransfer.StateConsumer"
},
{
  "name":"org.infinispan.statetransfer.StateConsumerImpl",
  "fields":[
    {"name":"cache"}, 
    {"name":"cacheNotifier"}, 
    {"name":"commandAckCollector"}, 
    {"name":"commandsFactory"}, 
    {"name":"commitManager"}, 
    {"name":"configuration"}, 
    {"name":"conflictManager"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"icf"}, 
    {"name":"interceptorChain"}, 
    {"name":"keyPartitioner"}, 
    {"name":"localTopologyManager"}, 
    {"name":"persistenceManager"}, 
    {"name":"remoteCommandsExecutor"}, 
    {"name":"rpcManager"}, 
    {"name":"stateTransferExecutor"}, 
    {"name":"stateTransferLock"}, 
    {"name":"totalOrderManager"}, 
    {"name":"transactionManager"}, 
    {"name":"transactionTable"}, 
    {"name":"triangleOrderManager"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.statetransfer.StateProvider"
},
{
  "name":"org.infinispan.statetransfer.StateProviderImpl",
  "fields":[
    {"name":"cacheName"}, 
    {"name":"clusterCacheNotifier"}, 
    {"name":"commandsFactory"}, 
    {"name":"configuration"}, 
    {"name":"dataContainer"}, 
    {"name":"distributionManager"}, 
    {"name":"entryFactory"}, 
    {"name":"executorService"}, 
    {"name":"keyPartitioner"}, 
    {"name":"persistenceManager"}, 
    {"name":"rpcManager"}, 
    {"name":"stateTransferLock"}, 
    {"name":"transactionOriginatorChecker"}, 
    {"name":"transactionTable"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.statetransfer.StateTransferLock"
},
{
  "name":"org.infinispan.statetransfer.StateTransferLockImpl",
  "methods":[{"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.infinispan.statetransfer.StateTransferManager"
},
{
  "name":"org.infinispan.statetransfer.StateTransferManagerImpl",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"cacheName"}, 
    {"name":"cacheNotifier"}, 
    {"name":"configuration"}, 
    {"name":"distributionManager"}, 
    {"name":"globalConfiguration"}, 
    {"name":"globalStateManager"}, 
    {"name":"inboundInvocationHandler"}, 
    {"name":"keyPartitioner"}, 
    {"name":"localTopologyManager"}, 
    {"name":"partitionHandlingManager"}, 
    {"name":"preloadManager"}, 
    {"name":"rpcManager"}, 
    {"name":"stateConsumer"}, 
    {"name":"stateProvider"}
  ]
},
{
  "name":"org.infinispan.stats.impl.AbstractClusterStats",
  "allDeclaredMethods":true,
  "fields":[{"name":"timeService"}]
},
{
  "name":"org.infinispan.stats.impl.ClusterCacheStatsFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.stats.impl.ClusterCacheStatsImpl",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.stats.impl.ClusterContainerStatsFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.stats.impl.ClusterContainerStatsImpl",
  "allDeclaredMethods":true
},
{
  "name":"org.infinispan.stream.impl.ClusterStreamManager"
},
{
  "name":"org.infinispan.stream.impl.ClusterStreamManagerImpl",
  "fields":[
    {"name":"factory"}, 
    {"name":"rpc"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.stream.impl.IteratorHandler",
  "allPublicMethods":true,
  "fields":[{"name":"manager"}],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.stream.impl.LocalStreamManager"
},
{
  "name":"org.infinispan.stream.impl.LocalStreamManagerImpl",
  "allPublicMethods":true,
  "fields":[
    {"name":"dm"}, 
    {"name":"factory"}, 
    {"name":"iteratorHandler"}, 
    {"name":"registry"}, 
    {"name":"rpc"}
  ],
  "methods":[
    {"name":"inject","parameterTypes":["org.infinispan.Cache"] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.topology.CacheTopologyControlCommand",
  "fields":[
    {"name":"clusterTopologyManager"}, 
    {"name":"localTopologyManager"}
  ]
},
{
  "name":"org.infinispan.topology.ClusterTopologyManager"
},
{
  "name":"org.infinispan.topology.ClusterTopologyManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.topology.ClusterTopologyManagerImpl",
  "fields":[
    {"name":"asyncTransportExecutor"}, 
    {"name":"cacheManager"}, 
    {"name":"cacheManagerNotifier"}, 
    {"name":"configurationManager"}, 
    {"name":"eventLogManager"}, 
    {"name":"gcr"}, 
    {"name":"globalConfiguration"}, 
    {"name":"persistentUUIDManager"}, 
    {"name":"stateTransferExecutor"}, 
    {"name":"transport"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.topology.ClusterTopologyManagerImpl$ClusterViewListener",
  "allPublicMethods":true
},
{
  "name":"org.infinispan.topology.LocalTopologyManager"
},
{
  "name":"org.infinispan.topology.LocalTopologyManagerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.infinispan.topology.LocalTopologyManagerImpl",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"asyncTransportExecutor"}, 
    {"name":"clusterTopologyManager"}, 
    {"name":"gcr"}, 
    {"name":"globalStateManager"}, 
    {"name":"persistentUUIDManager"}, 
    {"name":"timeService"}, 
    {"name":"transport"}
  ]
},
{
  "name":"org.infinispan.topology.PersistentUUIDManager"
},
{
  "name":"org.infinispan.transaction.impl.ClusteredTransactionOriginatorChecker",
  "fields":[{"name":"rpcManager"}]
},
{
  "name":"org.infinispan.transaction.impl.TransactionCoordinator",
  "fields":[
    {"name":"commandsFactory"}, 
    {"name":"configuration"}, 
    {"name":"icf"}, 
    {"name":"invoker"}, 
    {"name":"recoveryManager"}, 
    {"name":"txTable"}
  ],
  "methods":[
    {"name":"setStartStatus","parameterTypes":[] }, 
    {"name":"setStopStatus","parameterTypes":[] }, 
    {"name":"start","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.transaction.impl.TransactionOriginatorChecker"
},
{
  "name":"org.infinispan.transaction.impl.TransactionTable",
  "fields":[
    {"name":"cacheManagerNotifier"}, 
    {"name":"cacheName"}, 
    {"name":"clusteringLogic"}, 
    {"name":"commandsFactory"}, 
    {"name":"configuration"}, 
    {"name":"notifier"}, 
    {"name":"partitionHandlingManager"}, 
    {"name":"rpcManager"}, 
    {"name":"timeService"}, 
    {"name":"timeoutExecutor"}, 
    {"name":"transactionManager"}, 
    {"name":"transactionOriginatorChecker"}, 
    {"name":"transactionSynchronizationRegistry"}, 
    {"name":"txCoordinator"}, 
    {"name":"txFactory"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.transaction.totalorder.TotalOrderManager"
},
{
  "name":"org.infinispan.transaction.xa.TransactionFactory",
  "fields":[
    {"name":"clusterIdGenerator"}, 
    {"name":"configuration"}, 
    {"name":"timeService"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.transaction.xa.recovery.RecoveryManager"
},
{
  "name":"org.infinispan.upgrade.RollingUpgradeManager",
  "fields":[
    {"name":"cache"}, 
    {"name":"globalConfiguration"}, 
    {"name":"timeService"}
  ]
},
{
  "name":"org.infinispan.util.concurrent.BlockingTaskAwareExecutorService"
},
{
  "name":"org.infinispan.util.concurrent.CommandAckCollector",
  "fields":[
    {"name":"configuration"}, 
    {"name":"timeoutExecutor"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.util.concurrent.locks.LockManager"
},
{
  "name":"org.infinispan.util.concurrent.locks.PendingLockManager"
},
{
  "name":"org.infinispan.util.concurrent.locks.impl.DefaultLockManager",
  "allDeclaredMethods":true,
  "fields":[
    {"name":"configuration"}, 
    {"name":"executor"}, 
    {"name":"lockContainer"}, 
    {"name":"scheduler"}
  ]
},
{
  "name":"org.infinispan.util.concurrent.locks.impl.LockContainer"
},
{
  "name":"org.infinispan.util.concurrent.locks.impl.PerKeyLockContainer",
  "methods":[{"name":"inject","parameterTypes":["java.util.concurrent.Executor","org.infinispan.commons.time.TimeService"] }]
},
{
  "name":"org.infinispan.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.infinispan.util.logging.events.EventLogManager"
},
{
  "name":"org.infinispan.xsite.BackupReceiverRepository"
},
{
  "name":"org.infinispan.xsite.BackupReceiverRepositoryImpl",
  "allPublicMethods":true,
  "fields":[
    {"name":"cacheManager"}, 
    {"name":"cacheManagerNotifier"}, 
    {"name":"configurationManager"}
  ],
  "methods":[
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.infinispan.xsite.BackupSender"
},
{
  "name":"org.infinispan.xsite.BackupSenderImpl",
  "fields":[
    {"name":"cache"}, 
    {"name":"commandsFactory"}, 
    {"name":"config"}, 
    {"name":"eventLogManager"}, 
    {"name":"globalConfig"}, 
    {"name":"keyPartitioner"}, 
    {"name":"rpcManager"}, 
    {"name":"timeService"}, 
    {"name":"transport"}, 
    {"name":"txTable"}
  ],
  "methods":[{"name":"start","parameterTypes":[] }]
},
{
  "name":"org.infinispan.xsite.GlobalXSiteAdminOperations",
  "fields":[{"name":"cacheManager"}]
},
{
  "name":"org.infinispan.xsite.statetransfer.XSiteStateConsumer"
},
{
  "name":"org.infinispan.xsite.statetransfer.XSiteStateConsumerImpl",
  "fields":[
    {"name":"commandsFactory"}, 
    {"name":"commitManager"}, 
    {"name":"interceptorChain"}, 
    {"name":"invocationContextFactory"}, 
    {"name":"keyPartitioner"}, 
    {"name":"transactionManager"}
  ]
},
{
  "name":"org.infinispan.xsite.statetransfer.XSiteStateProvider"
},
{
  "name":"org.infinispan.xsite.statetransfer.XSiteStateProviderImpl",
  "fields":[
    {"name":"clusteringDependentLogic"}, 
    {"name":"commandsFactory"}, 
    {"name":"configuration"}, 
    {"name":"dataContainer"}, 
    {"name":"executorService"}, 
    {"name":"persistenceManager"}, 
    {"name":"rpcManager"}, 
    {"name":"stateTransferLock"}, 
    {"name":"stateTransferManager"}
  ]
},
{
  "name":"org.infinispan.xsite.statetransfer.XSiteStateTransferManager"
},
{
  "name":"org.infinispan.xsite.statetransfer.XSiteStateTransferManagerImpl",
  "allPublicMethods":true,
  "fields":[
    {"name":"asyncExecutor"}, 
    {"name":"cacheNotifier"}, 
    {"name":"commandsFactory"}, 
    {"name":"configuration"}, 
    {"name":"consumer"}, 
    {"name":"distributionManager"}, 
    {"name":"provider"}, 
    {"name":"responseGenerator"}, 
    {"name":"rpcManager"}, 
    {"name":"stateTransferManager"}
  ],
  "methods":[
    {"name":"addListener","parameterTypes":[] }, 
    {"name":"removeListener","parameterTypes":[] }
  ]
},
{
  "name":"org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.interceptors.CacheControlFeature",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.interceptors.CacheControlFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.interceptors.encoding.ClientContentEncodingAnnotationFeature",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.interceptors.encoding.MessageSanitizerContainerResponseFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.interceptors.encoding.ServerContentEncodingAnnotationFeature",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.AbstractEntityProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.ByteArrayProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.CompletionStageProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.DataSourceProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.DefaultBooleanWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.DefaultNumberWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.DefaultTextPlain",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.DocumentProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.FileProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.FileRangeWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.FormUrlEncodedProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.IIOImageProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.InputStreamProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.JaxrsFormProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.ReactiveStreamProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.ReaderProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.ServerFormUrlEncodedProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.SourceProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.StreamingOutputProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.StringTextStar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jackson.PatchMethodFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jackson.ResteasyJackson2Provider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jackson.UnrecognizedPropertyExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.AbstractJAXBContextFinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.AbstractJAXBProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.CollectionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.JAXBElementProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.JAXBXmlRootElementProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.JAXBXmlSeeAlsoProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.JAXBXmlTypeProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.MapProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.XmlJAXBContextFinder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.jaxb.i18n.LogMessages_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.AbstractMultipartFormDataWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.AbstractMultipartRelatedWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.AbstractMultipartWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.ListMultipartReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.ListMultipartWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MapMultipartFormDataReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MapMultipartFormDataWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MimeMultipartProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartFormAnnotationReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartFormAnnotationWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartFormDataReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartFormDataWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartRelatedReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartRelatedWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.MultipartWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.XopWithMultipartRelatedReader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.multipart.XopWithMultipartRelatedWriter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.sse.SseEventOutputProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.sse.SseEventProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.plugins.providers.sse.SseEventSinkInterceptor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.jboss.resteasy.resteasy_jaxrs.i18n.LogMessages_$logger_en_US",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor",
  "fields":[
    {"name":"activeCount", "allowUnsafeAccess":true}, 
    {"name":"peakQueueSize", "allowUnsafeAccess":true}, 
    {"name":"peakThreadCount", "allowUnsafeAccess":true}, 
    {"name":"queueSize", "allowUnsafeAccess":true}, 
    {"name":"sequence"}, 
    {"name":"terminationWaiters", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode",
  "fields":[
    {"name":"parked", "allowUnsafeAccess":true}, 
    {"name":"task", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutor$QNode",
  "fields":[{"name":"next", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase1",
  "fields":[
    {"name":"tail", "allowUnsafeAccess":true}, 
    {"name":"tailLock", "allowUnsafeAccess":true}
  ]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase3",
  "fields":[{"name":"head", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.EnhancedQueueExecutorBase5",
  "fields":[{"name":"threadStatus", "allowUnsafeAccess":true}]
},
{
  "name":"org.jboss.threads.Messages_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.jgroups.AnycastAddress",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.MergeView",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.Message",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.View",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.ViewId",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.auth.FixedMembershipToken",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.auth.MD5Token",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.auth.SimpleToken",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.auth.X509Token",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.blocks.MethodCall",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.blocks.RequestCorrelator$Header",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.blocks.RequestCorrelator$MultiDestinationHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.blocks.executor.ExecutionService$RunnableAdapter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.blocks.executor.Executions$StreamableCallable",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.conf.ClassConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.conf.PropertyConverters$Default",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.conf.PropertyConverters$NetworkInterfaceList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.ABP$ABPHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.AuthHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.COMPRESS$CompressHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.COUNTER$CounterHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.DAISYCHAIN$DaisyHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.DH_KEY_EXCHANGE$DhHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.Discovery",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jgroups.protocols.EncryptHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.Executing$ExecutorHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.Executing$Request",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FD$FdHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FD_ALL",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FD_SOCK",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FD_SOCK$FdHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FORK$ForkHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FORWARD_TO_COORD$ForwardHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FRAG3",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FailureDetection",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jgroups.protocols.FailureDetection$HeartbeatHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FcHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FlowControl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jgroups.protocols.Frag3Header",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.FragHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.Locking$LockingHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.MERGE3",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.MERGE3$MergeHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.MFC",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.NAMING$Header",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.PERF$PerfHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.PING",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.PingData",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.PingHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.RELAY$RelayHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.RSVP$RsvpHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.SEQUENCER$SequencerHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.SEQUENCER2$SequencerHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.STOMP$StompHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.SaslHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.TP",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jgroups.protocols.TpHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.UDP",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.UFC",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.UNICAST3",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.UnicastHeader3",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.VERIFY_SUSPECT",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.VERIFY_SUSPECT$VerifyHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.FLUSH$FlushHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.GMS",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.GMS$GmsHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.JoinRsp",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.NAKACK2",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.NakAckHeader2",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.STABLE",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.STABLE$StableHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.STATE_TRANSFER$StateHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.pbcast.StreamingStateTransfer$StateHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.relay.RELAY2$Relay2Header",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.relay.SiteMaster",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.relay.SiteUUID",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.protocols.tom.ToaHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.stack.IpAddress",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.stack.IpAddressUUID",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.stack.Protocol",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.jgroups.tests.perf.MPerf$MPerfHeader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.util.Digest",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.util.ExtendedUUID",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.util.FlagsUUID",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.util.SeqnoList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.jgroups.util.UUID",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.Config$ConfigProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.Token",
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.authorization.jpa.entities.PermissionTicketEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.authorization.jpa.entities.PolicyEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.authorization.jpa.entities.ResourceAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.authorization.jpa.entities.ResourceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.authorization.jpa.entities.ResourceServerEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.authorization.jpa.entities.ScopeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.cluster.infinispan.InfinispanClusterProviderFactory$ViewChangeListener",
  "allPublicMethods":true
},
{
  "name":"org.keycloak.cluster.infinispan.InfinispanNotificationsManager$CacheEntryListener",
  "allPublicMethods":true
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.MySQL8VarcharType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.AddRealmCodeSecret",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.AuthzResourceUseMoreURIs",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.ExtractRealmKeysFromRealmTable",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdate1_2_0_Beta1",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdate1_2_0_CR1",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdate1_4_0_Final",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdate1_9_0_Final",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdate4_0_0_DefaultClientScopes",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdate4_7_0_OfflineSessionsTimestamps",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.JpaUpdateAuthz_3_4_0_CR1",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.MigrateUserFedToComponent",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.PortLdapUserFedToComponentModel",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.custom.RemoveDuplicateOfflineSessions",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.CustomInitializeDatabaseChangeLogLockTableStatement"
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.CustomInsertLockRecordGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.CustomLockDatabaseChangeLogGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.CustomLockDatabaseChangeLogStatement"
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.CustomLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.DummyLockService",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.LiquibaseDBLockProvider"
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.LiquibaseDBLockProviderFactory"
},
{
  "name":"org.keycloak.connections.jpa.updater.liquibase.lock.LockRetryException"
},
{
  "name":"org.keycloak.events.jpa.AdminEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.events.jpa.EventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.forms.login.freemarker.model.AuthenticationContextBean",
  "allPublicMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.forms.login.freemarker.model.IdentityProviderBean",
  "allPublicMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.forms.login.freemarker.model.LoginBean",
  "allPublicMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.forms.login.freemarker.model.RealmBean",
  "allPublicMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.forms.login.freemarker.model.UrlBean",
  "allPublicMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.jose.jws.Algorithm",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.jose.jws.JWSHeader",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.json.StringOrArrayDeserializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.json.StringOrArraySerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.models.AuthenticationExecutionModel$Requirement"
},
{
  "name":"org.keycloak.models.UserModel",
  "methods":[
    {"name":"getEmail","parameterTypes":[] }, 
    {"name":"getFirstName","parameterTypes":[] }, 
    {"name":"getLastName","parameterTypes":[] }, 
    {"name":"getUsername","parameterTypes":[] }, 
    {"name":"isEmailVerified","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.credential.dto.PasswordCredentialData",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.models.credential.dto.PasswordSecretData",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.models.jpa.entities.AuthenticationExecutionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.AuthenticationFlowEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.AuthenticatorConfigEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientAttributeEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getAttributes","parameterTypes":[] }, 
    {"name":"getAuthFlowBindings","parameterTypes":[] }, 
    {"name":"getBaseUrl","parameterTypes":[] }, 
    {"name":"getClientAuthenticatorType","parameterTypes":[] }, 
    {"name":"getClientId","parameterTypes":[] }, 
    {"name":"getDefaultRoles","parameterTypes":[] }, 
    {"name":"getDescription","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getManagementUrl","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getNodeReRegistrationTimeout","parameterTypes":[] }, 
    {"name":"getNotBefore","parameterTypes":[] }, 
    {"name":"getProtocol","parameterTypes":[] }, 
    {"name":"getProtocolMappers","parameterTypes":[] }, 
    {"name":"getRealm","parameterTypes":[] }, 
    {"name":"getRedirectUris","parameterTypes":[] }, 
    {"name":"getRegisteredNodes","parameterTypes":[] }, 
    {"name":"getRegistrationToken","parameterTypes":[] }, 
    {"name":"getRootUrl","parameterTypes":[] }, 
    {"name":"getScopeMapping","parameterTypes":[] }, 
    {"name":"getSecret","parameterTypes":[] }, 
    {"name":"getWebOrigins","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isAlwaysDisplayInConsole","parameterTypes":[] }, 
    {"name":"isBearerOnly","parameterTypes":[] }, 
    {"name":"isConsentRequired","parameterTypes":[] }, 
    {"name":"isDirectAccessGrantsEnabled","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"isFrontchannelLogout","parameterTypes":[] }, 
    {"name":"isFullScopeAllowed","parameterTypes":[] }, 
    {"name":"isImplicitFlowEnabled","parameterTypes":[] }, 
    {"name":"isPublicClient","parameterTypes":[] }, 
    {"name":"isServiceAccountsEnabled","parameterTypes":[] }, 
    {"name":"isStandardFlowEnabled","parameterTypes":[] }, 
    {"name":"isSurrogateAuthRequired","parameterTypes":[] }, 
    {"name":"setAlwaysDisplayInConsole","parameterTypes":["boolean"] }, 
    {"name":"setAttributes","parameterTypes":["java.util.Collection"] }, 
    {"name":"setAuthFlowBindings","parameterTypes":["java.util.Map"] }, 
    {"name":"setBaseUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"setBearerOnly","parameterTypes":["boolean"] }, 
    {"name":"setClientAuthenticatorType","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientId","parameterTypes":["java.lang.String"] }, 
    {"name":"setConsentRequired","parameterTypes":["boolean"] }, 
    {"name":"setDefaultRoles","parameterTypes":["java.util.Collection"] }, 
    {"name":"setDescription","parameterTypes":["java.lang.String"] }, 
    {"name":"setDirectAccessGrantsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setFrontchannelLogout","parameterTypes":["boolean"] }, 
    {"name":"setFullScopeAllowed","parameterTypes":["boolean"] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }, 
    {"name":"setImplicitFlowEnabled","parameterTypes":["boolean"] }, 
    {"name":"setManagementUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setNodeReRegistrationTimeout","parameterTypes":["int"] }, 
    {"name":"setNotBefore","parameterTypes":["int"] }, 
    {"name":"setProtocol","parameterTypes":["java.lang.String"] }, 
    {"name":"setProtocolMappers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setPublicClient","parameterTypes":["boolean"] }, 
    {"name":"setRealm","parameterTypes":["org.keycloak.models.jpa.entities.RealmEntity"] }, 
    {"name":"setRedirectUris","parameterTypes":["java.util.Set"] }, 
    {"name":"setRegisteredNodes","parameterTypes":["java.util.Map"] }, 
    {"name":"setRegistrationToken","parameterTypes":["java.lang.String"] }, 
    {"name":"setRootUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"setScopeMapping","parameterTypes":["java.util.Set"] }, 
    {"name":"setSecret","parameterTypes":["java.lang.String"] }, 
    {"name":"setServiceAccountsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setStandardFlowEnabled","parameterTypes":["boolean"] }, 
    {"name":"setSurrogateAuthRequired","parameterTypes":["boolean"] }, 
    {"name":"setWebOrigins","parameterTypes":["java.util.Set"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientEntity$HibernateProxy$ayhTiBSw",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientInitialAccessEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeAttributeEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeClientMappingEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeClientMappingEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeRoleMappingEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.ClientScopeRoleMappingEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ComponentConfigEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ComponentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.CredentialEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.DefaultClientScopeRealmMappingEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.DefaultClientScopeRealmMappingEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.FederatedIdentityEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.FederatedIdentityEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.GroupAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.GroupEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.GroupRoleMappingEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.GroupRoleMappingEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.IdentityProviderEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getInternalId","parameterTypes":[] }, 
    {"name":"setInternalId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.IdentityProviderMapperEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.MigrationModelEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.ProtocolMapperEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.RealmAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.RealmAttributeEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.RealmEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addIdentityProvider","parameterTypes":["org.keycloak.models.jpa.entities.IdentityProviderEntity"] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getAccessCodeLifespan","parameterTypes":[] }, 
    {"name":"getAccessCodeLifespanLogin","parameterTypes":[] }, 
    {"name":"getAccessCodeLifespanUserAction","parameterTypes":[] }, 
    {"name":"getAccessTokenLifespan","parameterTypes":[] }, 
    {"name":"getAccessTokenLifespanForImplicitFlow","parameterTypes":[] }, 
    {"name":"getAccountTheme","parameterTypes":[] }, 
    {"name":"getAdminTheme","parameterTypes":[] }, 
    {"name":"getAttributes","parameterTypes":[] }, 
    {"name":"getAuthenticationFlows","parameterTypes":[] }, 
    {"name":"getAuthenticatorConfigs","parameterTypes":[] }, 
    {"name":"getBrowserFlow","parameterTypes":[] }, 
    {"name":"getClientAuthenticationFlow","parameterTypes":[] }, 
    {"name":"getClientScopes","parameterTypes":[] }, 
    {"name":"getComponents","parameterTypes":[] }, 
    {"name":"getDefaultGroups","parameterTypes":[] }, 
    {"name":"getDefaultLocale","parameterTypes":[] }, 
    {"name":"getDefaultRoles","parameterTypes":[] }, 
    {"name":"getDirectGrantFlow","parameterTypes":[] }, 
    {"name":"getDockerAuthenticationFlow","parameterTypes":[] }, 
    {"name":"getEmailTheme","parameterTypes":[] }, 
    {"name":"getEnabledEventTypes","parameterTypes":[] }, 
    {"name":"getEventsExpiration","parameterTypes":[] }, 
    {"name":"getEventsListeners","parameterTypes":[] }, 
    {"name":"getGroups","parameterTypes":[] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getIdentityProviderMappers","parameterTypes":[] }, 
    {"name":"getIdentityProviders","parameterTypes":[] }, 
    {"name":"getLoginTheme","parameterTypes":[] }, 
    {"name":"getMasterAdminClient","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getNotBefore","parameterTypes":[] }, 
    {"name":"getOfflineSessionIdleTimeout","parameterTypes":[] }, 
    {"name":"getOtpPolicyAlgorithm","parameterTypes":[] }, 
    {"name":"getOtpPolicyDigits","parameterTypes":[] }, 
    {"name":"getOtpPolicyInitialCounter","parameterTypes":[] }, 
    {"name":"getOtpPolicyLookAheadWindow","parameterTypes":[] }, 
    {"name":"getOtpPolicyPeriod","parameterTypes":[] }, 
    {"name":"getOtpPolicyType","parameterTypes":[] }, 
    {"name":"getPasswordPolicy","parameterTypes":[] }, 
    {"name":"getRefreshTokenMaxReuse","parameterTypes":[] }, 
    {"name":"getRegistrationFlow","parameterTypes":[] }, 
    {"name":"getRequiredActionProviders","parameterTypes":[] }, 
    {"name":"getRequiredCredentials","parameterTypes":[] }, 
    {"name":"getResetCredentialsFlow","parameterTypes":[] }, 
    {"name":"getSmtpConfig","parameterTypes":[] }, 
    {"name":"getSslRequired","parameterTypes":[] }, 
    {"name":"getSsoSessionIdleTimeout","parameterTypes":[] }, 
    {"name":"getSsoSessionIdleTimeoutRememberMe","parameterTypes":[] }, 
    {"name":"getSsoSessionMaxLifespan","parameterTypes":[] }, 
    {"name":"getSsoSessionMaxLifespanRememberMe","parameterTypes":[] }, 
    {"name":"getSupportedLocales","parameterTypes":[] }, 
    {"name":"getUserFederationMappers","parameterTypes":[] }, 
    {"name":"getUserFederationProviders","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isAdminEventsDetailsEnabled","parameterTypes":[] }, 
    {"name":"isAdminEventsEnabled","parameterTypes":[] }, 
    {"name":"isAllowUserManagedAccess","parameterTypes":[] }, 
    {"name":"isDuplicateEmailsAllowed","parameterTypes":[] }, 
    {"name":"isEditUsernameAllowed","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"isEventsEnabled","parameterTypes":[] }, 
    {"name":"isInternationalizationEnabled","parameterTypes":[] }, 
    {"name":"isLoginWithEmailAllowed","parameterTypes":[] }, 
    {"name":"isRegistrationAllowed","parameterTypes":[] }, 
    {"name":"isRegistrationEmailAsUsername","parameterTypes":[] }, 
    {"name":"isRememberMe","parameterTypes":[] }, 
    {"name":"isResetPasswordAllowed","parameterTypes":[] }, 
    {"name":"isRevokeRefreshToken","parameterTypes":[] }, 
    {"name":"isVerifyEmail","parameterTypes":[] }, 
    {"name":"setAccessCodeLifespan","parameterTypes":["int"] }, 
    {"name":"setAccessCodeLifespanLogin","parameterTypes":["int"] }, 
    {"name":"setAccessCodeLifespanUserAction","parameterTypes":["int"] }, 
    {"name":"setAccessTokenLifespan","parameterTypes":["int"] }, 
    {"name":"setAccessTokenLifespanForImplicitFlow","parameterTypes":["int"] }, 
    {"name":"setAccountTheme","parameterTypes":["java.lang.String"] }, 
    {"name":"setAdminEventsDetailsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setAdminEventsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setAdminTheme","parameterTypes":["java.lang.String"] }, 
    {"name":"setAllowUserManagedAccess","parameterTypes":["boolean"] }, 
    {"name":"setAttributes","parameterTypes":["java.util.Collection"] }, 
    {"name":"setAuthenticationFlows","parameterTypes":["java.util.Collection"] }, 
    {"name":"setAuthenticatorConfigs","parameterTypes":["java.util.Collection"] }, 
    {"name":"setBrowserFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientAuthenticationFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"setClientScopes","parameterTypes":["java.util.Collection"] }, 
    {"name":"setComponents","parameterTypes":["java.util.Set"] }, 
    {"name":"setDefaultGroups","parameterTypes":["java.util.Collection"] }, 
    {"name":"setDefaultLocale","parameterTypes":["java.lang.String"] }, 
    {"name":"setDefaultRoles","parameterTypes":["java.util.Collection"] }, 
    {"name":"setDirectGrantFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"setDockerAuthenticationFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"setDuplicateEmailsAllowed","parameterTypes":["boolean"] }, 
    {"name":"setEditUsernameAllowed","parameterTypes":["boolean"] }, 
    {"name":"setEmailTheme","parameterTypes":["java.lang.String"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setEnabledEventTypes","parameterTypes":["java.util.Set"] }, 
    {"name":"setEventsEnabled","parameterTypes":["boolean"] }, 
    {"name":"setEventsExpiration","parameterTypes":["long"] }, 
    {"name":"setEventsListeners","parameterTypes":["java.util.Set"] }, 
    {"name":"setGroups","parameterTypes":["java.util.Collection"] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }, 
    {"name":"setIdentityProviderMappers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setIdentityProviders","parameterTypes":["java.util.List"] }, 
    {"name":"setInternationalizationEnabled","parameterTypes":["boolean"] }, 
    {"name":"setLoginTheme","parameterTypes":["java.lang.String"] }, 
    {"name":"setLoginWithEmailAllowed","parameterTypes":["boolean"] }, 
    {"name":"setMasterAdminClient","parameterTypes":["org.keycloak.models.jpa.entities.ClientEntity"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setNotBefore","parameterTypes":["int"] }, 
    {"name":"setOfflineSessionIdleTimeout","parameterTypes":["int"] }, 
    {"name":"setOtpPolicyAlgorithm","parameterTypes":["java.lang.String"] }, 
    {"name":"setOtpPolicyDigits","parameterTypes":["int"] }, 
    {"name":"setOtpPolicyInitialCounter","parameterTypes":["int"] }, 
    {"name":"setOtpPolicyLookAheadWindow","parameterTypes":["int"] }, 
    {"name":"setOtpPolicyPeriod","parameterTypes":["int"] }, 
    {"name":"setOtpPolicyType","parameterTypes":["java.lang.String"] }, 
    {"name":"setPasswordPolicy","parameterTypes":["java.lang.String"] }, 
    {"name":"setRefreshTokenMaxReuse","parameterTypes":["int"] }, 
    {"name":"setRegistrationAllowed","parameterTypes":["boolean"] }, 
    {"name":"setRegistrationEmailAsUsername","parameterTypes":["boolean"] }, 
    {"name":"setRegistrationFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"setRememberMe","parameterTypes":["boolean"] }, 
    {"name":"setRequiredActionProviders","parameterTypes":["java.util.Collection"] }, 
    {"name":"setRequiredCredentials","parameterTypes":["java.util.Collection"] }, 
    {"name":"setResetCredentialsFlow","parameterTypes":["java.lang.String"] }, 
    {"name":"setResetPasswordAllowed","parameterTypes":["boolean"] }, 
    {"name":"setRevokeRefreshToken","parameterTypes":["boolean"] }, 
    {"name":"setSmtpConfig","parameterTypes":["java.util.Map"] }, 
    {"name":"setSslRequired","parameterTypes":["java.lang.String"] }, 
    {"name":"setSsoSessionIdleTimeout","parameterTypes":["int"] }, 
    {"name":"setSsoSessionIdleTimeoutRememberMe","parameterTypes":["int"] }, 
    {"name":"setSsoSessionMaxLifespan","parameterTypes":["int"] }, 
    {"name":"setSsoSessionMaxLifespanRememberMe","parameterTypes":["int"] }, 
    {"name":"setSupportedLocales","parameterTypes":["java.util.Set"] }, 
    {"name":"setUserFederationMappers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setUserFederationProviders","parameterTypes":["java.util.List"] }, 
    {"name":"setVerifyEmail","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.RealmEntity$HibernateProxy$ZueTNpWL",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.keycloak.models.jpa.entities.RequiredActionProviderEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.RequiredCredentialEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.RequiredCredentialEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.RoleAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.RoleEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserConsentClientScopeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.UserConsentClientScopeEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserConsentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserFederationMapperEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserFederationProviderEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserGroupMembershipEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.UserGroupMembershipEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserRequiredActionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.UserRequiredActionEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.entities.UserRoleMappingEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.models.jpa.entities.UserRoleMappingEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.session.PersistentClientSessionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.models.jpa.session.PersistentClientSessionEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.models.jpa.session.PersistentUserSessionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.models.jpa.session.PersistentUserSessionEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.protocol.AuthorizationEndpointBase",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.protocol.RestartLoginCookie",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.protocol.oidc.OIDCLoginProtocolService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.protocol.oidc.endpoints.AuthorizationEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.protocol.oidc.endpoints.LoginStatusIframeEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.protocol.oidc.endpoints.LogoutEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.protocol.oidc.endpoints.TokenEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.representations.AccessToken",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.AccessToken$Access",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.AccessToken$Authorization",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.AccessToken$CertConf",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.AccessTokenResponse",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.AddressClaimSet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.IDToken",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.JsonWebToken",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.representations.RefreshToken",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.account.DeviceRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.adapters.config.BaseRealmConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.representations.idm.ComponentTypeRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.ConfigPropertyRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.PasswordPolicyTypeRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.ProtocolMapperRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.ProtocolMapperTypeRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.RealmRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.authorization.DecisionStrategy"
},
{
  "name":"org.keycloak.representations.idm.authorization.Logic"
},
{
  "name":"org.keycloak.representations.idm.authorization.Permission",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.idm.authorization.PolicyEnforcementMode"
},
{
  "name":"org.keycloak.representations.info.ClientInstallationRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.MemoryInfoRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.ProfileInfoRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.ProviderRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.ServerInfoRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.SpiInfoRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.SystemInfoRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.representations.info.ThemeInfoRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.services.ServicesLogger_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.keycloak.services.error.KeycloakErrorHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.services.filters.KeycloakSecurityHeadersFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.services.filters.KeycloakTransactionCommitter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.services.managers.ClientManager$InstallationAdapterConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.services.managers.IdentityCookieToken",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.services.resources.JsResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.services.resources.KeycloakApplication",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.services.resources.LoginActionsService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.RealmsResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.RobotsResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.ThemeResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true,
  "allPublicConstructors":true
},
{
  "name":"org.keycloak.services.resources.WelcomeResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.admin.AdminConsole",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.admin.AdminConsole$WhoAmI",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.services.resources.admin.AdminRoot",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.admin.RealmAdminResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.admin.RealmsAdminResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.resources.admin.info.ServerInfoAdminResource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.keycloak.services.util.ObjectMapperResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.keycloak.storage.jpa.entity.BrokerLinkEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.storage.jpa.entity.BrokerLinkEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUser",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserAttributeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserConsentClientScopeEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserConsentClientScopeEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserConsentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserCredentialEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getId","parameterTypes":[] }, 
    {"name":"setId","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserGroupMembershipEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserGroupMembershipEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserRequiredActionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserRequiredActionEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserRoleMappingEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.keycloak.storage.jpa.entity.FederatedUserRoleMappingEntity$Key",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"hashCode","parameterTypes":[] }
  ]
},
{
  "name":"org.keycloak.theme.ClasspathThemeProviderFactory$ThemeRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.keycloak.theme.ClasspathThemeProviderFactory$ThemeRepresentation[]"
},
{
  "name":"org.keycloak.theme.ClasspathThemeProviderFactory$ThemesRepresentation",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.reactivestreams.Publisher"
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"setBeforeExistingAdvisors","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, 
    {"name":"isExposeProxy","parameterTypes":[] }, 
    {"name":"isFrozen","parameterTypes":[] }, 
    {"name":"isOpaque","parameterTypes":[] }, 
    {"name":"isOptimize","parameterTypes":[] }, 
    {"name":"isProxyTargetClass","parameterTypes":[] }, 
    {"name":"setExposeProxy","parameterTypes":["boolean"] }, 
    {"name":"setFrozen","parameterTypes":["boolean"] }, 
    {"name":"setOpaque","parameterTypes":["boolean"] }, 
    {"name":"setOptimize","parameterTypes":["boolean"] }, 
    {"name":"setProxyTargetClass","parameterTypes":["boolean"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setProxyClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"isFrozen","parameterTypes":[] }, 
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessAfterInstantiation","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, 
    {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, 
    {"name":"setAdvisorAdapterRegistry","parameterTypes":["org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"] }, 
    {"name":"setApplyCommonInterceptorsFirst","parameterTypes":["boolean"] }, 
    {"name":"setCustomTargetSourceCreators","parameterTypes":["org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"] }, 
    {"name":"setFrozen","parameterTypes":["boolean"] }, 
    {"name":"setInterceptorNames","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getAdvice","parameterTypes":[] }, 
    {"name":"getAdviceBeanName","parameterTypes":[] }, 
    {"name":"setAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, 
    {"name":"setAdviceBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isPerInstance","parameterTypes":[] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.beans.ExtendedBeanInfoFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.Aware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getRootPath","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getNames","parameterTypes":[] }, 
    {"name":"getPrimary","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorRegistryHealthIndicatorRegistryAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getAll","parameterTypes":[] }, 
    {"name":"register","parameterTypes":["java.lang.String","org.springframework.boot.actuate.health.HealthIndicator"] }, 
    {"name":"unregister","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getRoles","parameterTypes":[] }, 
    {"name":"getShowComponents","parameterTypes":[] }, 
    {"name":"getShowDetails","parameterTypes":[] }, 
    {"name":"getStatus","parameterTypes":[] }, 
    {"name":"setRoles","parameterTypes":["java.util.Set"] }, 
    {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"] }, 
    {"name":"setShowDetails","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointAdaptersConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.LegacyHealthEndpointCompatibilityConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, 
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, 
    {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"mode","parameterTypes":[] }, 
    {"name":"prefix","parameterTypes":[] }, 
    {"name":"step","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration$MetricsWebMvcConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"addInterceptors","parameterTypes":["org.springframework.web.servlet.config.annotation.InterceptorRegistry"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration$$Lambda$887/0x00000008406f3440",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getServletPath","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"createManagementContext","parameterTypes":["org.springframework.context.ApplicationContext","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint"
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"mapParameterValue","parameterTypes":["org.springframework.boot.actuate.endpoint.invoke.OperationParameter","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"onStartup","parameterTypes":["javax.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getEndpoints","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$LinksHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint"
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthAggregator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"aggregate","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] }, 
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthAggregator",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtension",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicatorRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.OrderedHealthAggregator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getStatusCode","parameterTypes":["org.springframework.boot.actuate.health.Status"] }]
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getAggregateStatus","parameterTypes":["java.util.Set"] }]
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }]
},
{
  "name":"org.springframework.boot.actuate.info.GitInfoContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }]
},
{
  "name":"org.springframework.boot.actuate.info.InfoContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoPropertiesInfoContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.jdbc.DataSourceHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.liquibase.LiquibaseEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint"
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint"
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.DefaultRestTemplateExchangeTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getTags","parameterTypes":["java.lang.String","org.springframework.http.HttpRequest","org.springframework.http.client.ClientHttpResponse"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.MetricsRestTemplateCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.web.client.RestTemplate"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.client.RestTemplateExchangeTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.servlet.DefaultWebMvcTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getLongRequestTags","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getTags","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Throwable"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.servlet.WebMvcTagsProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
},
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceRepository"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"getMappingName","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"getMappingName","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"getMappingName","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnJndi",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnJndiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.neo4j.Neo4jDataAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationScriptMissingFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider$FreeMarkerTemplateAvailabilityProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"customize","parameterTypes":["com.google.gson.GsonBuilder"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$JacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration$PreferGsonOrJacksonAndJsonbUnavailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConverters",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Dbcp2"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Tomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceInitializationConfiguration$Registrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration$Hikari",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.XADataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$886/0x00000008406f3040",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getDataSourcePoolMetadata","parameterTypes":["javax.sql.DataSource"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jms.activemq.ActiveMQAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jms.artemis.ArtemisAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$JwtConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration$OpaqueTokenConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.session.NonUniqueSessionRepositoryFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.template.PathBasedTemplateAvailabilityProvider$TemplateAvailabilityProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.PlatformTransactionManagerCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.transaction.PlatformTransactionManager"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.AtomikosJtaConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.BitronixJtaConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"supports","parameterTypes":["java.lang.Class"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, 
    {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ResourceProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ConditionalOnMissingFilterBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DefaultDispatcherServletCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addUrlMappings","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"setUrlMappings","parameterTypes":["java.util.Collection"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, 
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"] }, 
    {"name":"configureAsyncSupport","parameterTypes":["org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"] }, 
    {"name":"configureContentNegotiation","parameterTypes":["org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"] }, 
    {"name":"configureMessageConverters","parameterTypes":["java.util.List"] }, 
    {"name":"configurePathMatch","parameterTypes":["org.springframework.web.servlet.config.annotation.PathMatchConfigurer"] }, 
    {"name":"getMessageCodesResolver","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.AbstractErrorController",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getErrorPath","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveErrorView","parameterTypes":["javax.servlet.http.HttpServletRequest","org.springframework.http.HttpStatus","java.util.Map"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"registerErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPageRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorTemplateMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$StaticView",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getContentType","parameterTypes":[] }, 
    {"name":"render","parameterTypes":["java.util.Map","javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.UndertowWebSocketServletWebServerCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, 
    {"name":"getOrder","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getLastChangeEvent","parameterTypes":["java.lang.Class"] }, 
    {"name":"getState","parameterTypes":["java.lang.Class"] }, 
    {"name":"getState","parameterTypes":["java.lang.Class","org.springframework.boot.availability.AvailabilityState"] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }
  ]
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigFileApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.ClasspathLoggingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationBeanFactoryMetadata",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBeanDefinitionValidator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.diagnostics.FailureAnalyzers",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.context.ConfigurableApplicationContext"] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.ConnectorStartFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.info.InfoProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"get","parameterTypes":["java.lang.String"] }, 
    {"name":"getInstant","parameterTypes":["java.lang.String"] }, 
    {"name":"iterator","parameterTypes":[] }, 
    {"name":"toPropertySource","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.jdbc.XADataSourceWrapper"
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.client.RestTemplateCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.undertow.ConfigurableUndertowWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addBuilderCustomizers","parameterTypes":["org.springframework.boot.web.embedded.undertow.UndertowBuilderCustomizer[]"] }, 
    {"name":"getWebServer","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"setAccessLogDirectory","parameterTypes":["java.io.File"] }, 
    {"name":"setAccessLogEnabled","parameterTypes":["boolean"] }, 
    {"name":"setAccessLogPattern","parameterTypes":["java.lang.String"] }, 
    {"name":"setAccessLogPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setAccessLogRotate","parameterTypes":["boolean"] }, 
    {"name":"setAccessLogSuffix","parameterTypes":["java.lang.String"] }, 
    {"name":"setBufferSize","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setBuilderCustomizers","parameterTypes":["java.util.Collection"] }, 
    {"name":"setIoThreads","parameterTypes":["java.lang.Integer"] }, 
    {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }, 
    {"name":"setUseDirectBuffers","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setUseForwardHeaders","parameterTypes":["boolean"] }, 
    {"name":"setWorkerThreads","parameterTypes":["java.lang.Integer"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, 
    {"name":"getAddress","parameterTypes":[] }, 
    {"name":"getCompression","parameterTypes":[] }, 
    {"name":"getErrorPages","parameterTypes":[] }, 
    {"name":"getHttp2","parameterTypes":[] }, 
    {"name":"getPort","parameterTypes":[] }, 
    {"name":"getServerHeader","parameterTypes":[] }, 
    {"name":"getShutdown","parameterTypes":[] }, 
    {"name":"getSsl","parameterTypes":[] }, 
    {"name":"getSslStoreProvider","parameterTypes":[] }, 
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, 
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, 
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, 
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, 
    {"name":"setPort","parameterTypes":["int"] }, 
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, 
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, 
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, 
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrar",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, 
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addServletNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"addServletRegistrationBeans","parameterTypes":["org.springframework.boot.web.servlet.ServletRegistrationBean[]"] }, 
    {"name":"addUrlPatterns","parameterTypes":["java.lang.String[]"] }, 
    {"name":"getServletNames","parameterTypes":[] }, 
    {"name":"getServletRegistrationBeans","parameterTypes":[] }, 
    {"name":"getUrlPatterns","parameterTypes":[] }, 
    {"name":"isMatchAfter","parameterTypes":[] }, 
    {"name":"setDispatcherTypes","parameterTypes":["java.util.EnumSet"] }, 
    {"name":"setDispatcherTypes","parameterTypes":["javax.servlet.DispatcherType","javax.servlet.DispatcherType[]"] }, 
    {"name":"setMatchAfter","parameterTypes":["boolean"] }, 
    {"name":"setServletNames","parameterTypes":["java.util.Collection"] }, 
    {"name":"setServletRegistrationBeans","parameterTypes":["java.util.Collection"] }, 
    {"name":"setUrlPatterns","parameterTypes":["java.util.Collection"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.DynamicRegistrationBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addInitParameter","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"isAsyncSupported","parameterTypes":[] }, 
    {"name":"setAsyncSupported","parameterTypes":["boolean"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.FilterRegistrationBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getFilter","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.RegistrationBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"isEnabled","parameterTypes":[] }, 
    {"name":"onStartup","parameterTypes":["javax.servlet.ServletContext"] }, 
    {"name":"setEnabled","parameterTypes":["boolean"] }, 
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.ServletContextInitializer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.ServletRegistrationBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getMultipartConfig","parameterTypes":[] }, 
    {"name":"getServlet","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"getUrlMappings","parameterTypes":[] }, 
    {"name":"setLoadOnStartup","parameterTypes":["int"] }, 
    {"name":"setMultipartConfig","parameterTypes":["javax.servlet.MultipartConfigElement"] }, 
    {"name":"setServlet","parameterTypes":["javax.servlet.Servlet"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getError","parameterTypes":["org.springframework.web.context.request.WebRequest"] }, 
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }, 
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.context.request.WebRequest","boolean"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveException","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorAttributes",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.error.ErrorController",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addInitializers","parameterTypes":["org.springframework.boot.web.servlet.ServletContextInitializer[]"] }, 
    {"name":"getContextPath","parameterTypes":[] }, 
    {"name":"getDisplayName","parameterTypes":[] }, 
    {"name":"getDocumentRoot","parameterTypes":[] }, 
    {"name":"getInitParameters","parameterTypes":[] }, 
    {"name":"getJsp","parameterTypes":[] }, 
    {"name":"getLocaleCharsetMappings","parameterTypes":[] }, 
    {"name":"getMimeMappings","parameterTypes":[] }, 
    {"name":"getSession","parameterTypes":[] }, 
    {"name":"isRegisterDefaultServlet","parameterTypes":[] }, 
    {"name":"setContextPath","parameterTypes":["java.lang.String"] }, 
    {"name":"setDisplayName","parameterTypes":["java.lang.String"] }, 
    {"name":"setDocumentRoot","parameterTypes":["java.io.File"] }, 
    {"name":"setInitParameters","parameterTypes":["java.util.Map"] }, 
    {"name":"setInitializers","parameterTypes":["java.util.List"] }, 
    {"name":"setJsp","parameterTypes":["org.springframework.boot.web.servlet.server.Jsp"] }, 
    {"name":"setLocaleCharsetMappings","parameterTypes":["java.util.Map"] }, 
    {"name":"setMimeMappings","parameterTypes":["org.springframework.boot.web.server.MimeMappings"] }, 
    {"name":"setRegisterDefaultServlet","parameterTypes":["boolean"] }, 
    {"name":"setSession","parameterTypes":["org.springframework.boot.web.servlet.server.Session"] }
  ]
},
{
  "name":"org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.servlet.server.ServletWebServerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cglib.proxy.Enhancer$EnhancerKey",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.Bean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Import",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Role",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"isRunning","parameterTypes":[] }, 
    {"name":"onClose","parameterTypes":[] }, 
    {"name":"onRefresh","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"start","parameterTypes":[] }, 
    {"name":"stop","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.core.Ordered",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AnnotationAttributes[]"
},
{
  "name":"org.springframework.core.annotation.Order",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.TypeMappedAnnotation[]"
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, 
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, 
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, 
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, 
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.task.TaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, 
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, 
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, 
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer"
},
{
  "name":"org.springframework.http.converter.AbstractGenericHttpMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"canWrite","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","java.lang.reflect.Type","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }
  ]
},
{
  "name":"org.springframework.http.converter.AbstractHttpMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getDefaultCharset","parameterTypes":[] }, 
    {"name":"getSupportedMediaTypes","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"setDefaultCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setSupportedMediaTypes","parameterTypes":["java.util.List"] }, 
    {"name":"write","parameterTypes":["java.lang.Object","org.springframework.http.MediaType","org.springframework.http.HttpOutputMessage"] }
  ]
},
{
  "name":"org.springframework.http.converter.FormHttpMessageConverter",
  "allDeclaredFields":true
},
{
  "name":"org.springframework.http.converter.GenericHttpMessageConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.converter.StringHttpMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"canRead","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canRead","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"canWrite","parameterTypes":["java.lang.Class","org.springframework.http.MediaType"] }, 
    {"name":"getObjectMapper","parameterTypes":[] }, 
    {"name":"read","parameterTypes":["java.lang.reflect.Type","java.lang.Class","org.springframework.http.HttpInputMessage"] }, 
    {"name":"setObjectMapper","parameterTypes":["com.fasterxml.jackson.databind.ObjectMapper"] }, 
    {"name":"setPrettyPrint","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler"
},
{
  "name":"org.springframework.jdbc.core.JdbcOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.Collection","int","org.springframework.jdbc.core.ParameterizedPreparedStatementSetter"] }, 
    {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.List"] }, 
    {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.List","int[]"] }, 
    {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.BatchPreparedStatementSetter"] }, 
    {"name":"batchUpdate","parameterTypes":["java.lang.String[]"] }, 
    {"name":"call","parameterTypes":["org.springframework.jdbc.core.CallableStatementCreator","java.util.List"] }, 
    {"name":"execute","parameterTypes":["java.lang.String"] }, 
    {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.CallableStatementCallback"] }, 
    {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.jdbc.core.CallableStatementCreator","org.springframework.jdbc.core.CallableStatementCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.jdbc.core.ConnectionCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.PreparedStatementCallback"] }, 
    {"name":"execute","parameterTypes":["org.springframework.jdbc.core.StatementCallback"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor","java.lang.Object[]"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler","java.lang.Object[]"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Object[]"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.Class"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","java.lang.Class"] }, 
    {"name":"queryForMap","parameterTypes":["java.lang.String"] }, 
    {"name":"queryForMap","parameterTypes":["java.lang.String","java.lang.Object[]"] }, 
    {"name":"queryForMap","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Class"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Object[]"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper","java.lang.Object[]"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","java.lang.Class"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","java.lang.Class"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.lang.Object[]","int[]","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForRowSet","parameterTypes":["java.lang.String"] }, 
    {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.lang.Object[]"] }, 
    {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, 
    {"name":"update","parameterTypes":["java.lang.String"] }, 
    {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementSetter"] }, 
    {"name":"update","parameterTypes":["java.lang.String","java.lang.Object[]"] }, 
    {"name":"update","parameterTypes":["java.lang.String","java.lang.Object[]","int[]"] }, 
    {"name":"update","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator"] }, 
    {"name":"update","parameterTypes":["org.springframework.jdbc.core.PreparedStatementCreator","org.springframework.jdbc.support.KeyHolder"] }
  ]
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"batchUpdate","parameterTypes":["java.lang.String","java.util.Map[]"] }, 
    {"name":"batchUpdate","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource[]"] }, 
    {"name":"execute","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.PreparedStatementCallback"] }, 
    {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.PreparedStatementCallback"] }, 
    {"name":"execute","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.PreparedStatementCallback"] }, 
    {"name":"getJdbcOperations","parameterTypes":[] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.ResultSetExtractor"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowCallbackHandler"] }, 
    {"name":"query","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.util.Map"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","java.util.Map","java.lang.Class"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, 
    {"name":"queryForList","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","java.lang.Class"] }, 
    {"name":"queryForMap","parameterTypes":["java.lang.String","java.util.Map"] }, 
    {"name":"queryForMap","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.util.Map","java.lang.Class"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","java.util.Map","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","java.lang.Class"] }, 
    {"name":"queryForObject","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.core.RowMapper"] }, 
    {"name":"queryForRowSet","parameterTypes":["java.lang.String","java.util.Map"] }, 
    {"name":"queryForRowSet","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, 
    {"name":"update","parameterTypes":["java.lang.String","java.util.Map"] }, 
    {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource"] }, 
    {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.support.KeyHolder"] }, 
    {"name":"update","parameterTypes":["java.lang.String","org.springframework.jdbc.core.namedparam.SqlParameterSource","org.springframework.jdbc.support.KeyHolder","java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.jdbc.datasource.DataSourceTransactionManager",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.jdbc.datasource.DelegatingDataSource"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
},
{
  "name":"org.springframework.jdbc.support.JdbcAccessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getDataSource","parameterTypes":[] }, 
    {"name":"getExceptionTranslator","parameterTypes":[] }, 
    {"name":"isLazyInit","parameterTypes":[] }, 
    {"name":"setDataSource","parameterTypes":["javax.sql.DataSource"] }, 
    {"name":"setDatabaseProductName","parameterTypes":["java.lang.String"] }, 
    {"name":"setExceptionTranslator","parameterTypes":["org.springframework.jdbc.support.SQLExceptionTranslator"] }, 
    {"name":"setLazyInit","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"initialize","parameterTypes":[] }, 
    {"name":"setAwaitTerminationMillis","parameterTypes":["long"] }, 
    {"name":"setAwaitTerminationSeconds","parameterTypes":["int"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setRejectedExecutionHandler","parameterTypes":["java.util.concurrent.RejectedExecutionHandler"] }, 
    {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, 
    {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setWaitForTasksToCompleteOnShutdown","parameterTypes":["boolean"] }, 
    {"name":"shutdown","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"execute","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, 
    {"name":"submit","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, 
    {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }
  ]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.stereotype.Component",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager",
  "allPublicMethods":true
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager"
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allPublicFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.transaction.TransactionManager"
},
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, 
    {"name":"transactionalEventListenerFactory","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.event.TransactionalEventListenerFactory",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }]
},
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"currentTransactionStatus","parameterTypes":[] }, 
    {"name":"getTransactionAttributeSource","parameterTypes":[] }, 
    {"name":"getTransactionManager","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, 
    {"name":"setTransactionAttributeSource","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }, 
    {"name":"setTransactionAttributeSources","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource[]"] }, 
    {"name":"setTransactionAttributes","parameterTypes":["java.util.Properties"] }, 
    {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.TransactionManager"] }, 
    {"name":"setTransactionManagerBeanName","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.jta.JtaTransactionManager"
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager",
  "allDeclaredFields":true,
  "allPublicFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"commit","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, 
    {"name":"getDefaultTimeout","parameterTypes":[] }, 
    {"name":"getTransaction","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, 
    {"name":"getTransactionSynchronization","parameterTypes":[] }, 
    {"name":"isFailEarlyOnGlobalRollbackOnly","parameterTypes":[] }, 
    {"name":"isGlobalRollbackOnParticipationFailure","parameterTypes":[] }, 
    {"name":"isNestedTransactionAllowed","parameterTypes":[] }, 
    {"name":"isRollbackOnCommitFailure","parameterTypes":[] }, 
    {"name":"isValidateExistingTransaction","parameterTypes":[] }, 
    {"name":"rollback","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, 
    {"name":"setDefaultTimeout","parameterTypes":["int"] }, 
    {"name":"setFailEarlyOnGlobalRollbackOnly","parameterTypes":["boolean"] }, 
    {"name":"setGlobalRollbackOnParticipationFailure","parameterTypes":["boolean"] }, 
    {"name":"setNestedTransactionAllowed","parameterTypes":["boolean"] }, 
    {"name":"setRollbackOnCommitFailure","parameterTypes":["boolean"] }, 
    {"name":"setTransactionSynchronization","parameterTypes":["int"] }, 
    {"name":"setTransactionSynchronizationName","parameterTypes":["java.lang.String"] }, 
    {"name":"setValidateExistingTransaction","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionDefinition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getIsolationLevel","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getPropagationBehavior","parameterTypes":[] }, 
    {"name":"getTimeout","parameterTypes":[] }, 
    {"name":"hashCode","parameterTypes":[] }, 
    {"name":"isReadOnly","parameterTypes":[] }, 
    {"name":"setIsolationLevel","parameterTypes":["int"] }, 
    {"name":"setIsolationLevelName","parameterTypes":["java.lang.String"] }, 
    {"name":"setName","parameterTypes":["java.lang.String"] }, 
    {"name":"setPropagationBehavior","parameterTypes":["int"] }, 
    {"name":"setPropagationBehaviorName","parameterTypes":["java.lang.String"] }, 
    {"name":"setReadOnly","parameterTypes":["boolean"] }, 
    {"name":"setTimeout","parameterTypes":["int"] }, 
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.transaction.support.ResourceTransactionManager",
  "allPublicMethods":true
},
{
  "name":"org.springframework.transaction.support.TransactionOperations",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.transaction.support.TransactionTemplate",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"equals","parameterTypes":["java.lang.Object"] }, 
    {"name":"execute","parameterTypes":["org.springframework.transaction.support.TransactionCallback"] }
  ]
},
{
  "name":"org.springframework.util.AntPathMatcher",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"combine","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"extractPathWithinPattern","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"extractUriTemplateVariables","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"getPatternComparator","parameterTypes":["java.lang.String"] }, 
    {"name":"isPattern","parameterTypes":["java.lang.String"] }, 
    {"name":"match","parameterTypes":["java.lang.String","java.lang.String"] }, 
    {"name":"matchStart","parameterTypes":["java.lang.String","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"createThread","parameterTypes":["java.lang.Runnable"] }, 
    {"name":"getThreadGroup","parameterTypes":[] }, 
    {"name":"getThreadNamePrefix","parameterTypes":[] }, 
    {"name":"getThreadPriority","parameterTypes":[] }, 
    {"name":"isDaemon","parameterTypes":[] }, 
    {"name":"setDaemon","parameterTypes":["boolean"] }, 
    {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, 
    {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, 
    {"name":"setThreadPriority","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.util.PathMatcher",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.validation.SmartValidator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.validation.Validator",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.accept.ContentNegotiationManager",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getAllFileExtensions","parameterTypes":[] }, 
    {"name":"resolveFileExtensions","parameterTypes":["org.springframework.http.MediaType"] }, 
    {"name":"resolveMediaTypes","parameterTypes":["org.springframework.web.context.request.NativeWebRequest"] }
  ]
},
{
  "name":"org.springframework.web.accept.ContentNegotiationStrategy",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.accept.MediaTypeFileExtensionResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMethod[]"
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.ServletContextAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.context.WebApplicationContext"
},
{
  "name":"org.springframework.web.context.request.RequestContextListener"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.context.support.WebApplicationObjectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }]
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getEncoding","parameterTypes":[] }, 
    {"name":"isForceRequestEncoding","parameterTypes":[] }, 
    {"name":"isForceResponseEncoding","parameterTypes":[] }, 
    {"name":"setEncoding","parameterTypes":["java.lang.String"] }, 
    {"name":"setForceEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceRequestEncoding","parameterTypes":["boolean"] }, 
    {"name":"setForceResponseEncoding","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.filter.FormContentFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"setCharset","parameterTypes":["java.nio.charset.Charset"] }, 
    {"name":"setFormConverter","parameterTypes":["org.springframework.http.converter.FormHttpMessageConverter"] }
  ]
},
{
  "name":"org.springframework.web.filter.GenericFilterBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getFilterConfig","parameterTypes":[] }, 
    {"name":"init","parameterTypes":["javax.servlet.FilterConfig"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }
  ]
},
{
  "name":"org.springframework.web.filter.OncePerRequestFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"doFilter","parameterTypes":["javax.servlet.ServletRequest","javax.servlet.ServletResponse","javax.servlet.FilterChain"] }]
},
{
  "name":"org.springframework.web.filter.RequestContextFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"setThreadContextInheritable","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.method.support.CompositeUriComponentsContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"contributeMethodArgument","parameterTypes":["org.springframework.core.MethodParameter","java.lang.Object","org.springframework.web.util.UriComponentsBuilder","java.util.Map","org.springframework.core.convert.ConversionService"] }, 
    {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }
  ]
},
{
  "name":"org.springframework.web.method.support.UriComponentsContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.MultipartResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.multipart.commons.CommonsMultipartResolver"
},
{
  "name":"org.springframework.web.multipart.support.StandardServletMultipartResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"cleanupMultipart","parameterTypes":["org.springframework.web.multipart.MultipartHttpServletRequest"] }, 
    {"name":"isMultipart","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"resolveMultipart","parameterTypes":["javax.servlet.http.HttpServletRequest"] }
  ]
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.FrameworkServlet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"destroy","parameterTypes":[] }, 
    {"name":"getContextAttribute","parameterTypes":[] }, 
    {"name":"getContextClass","parameterTypes":[] }, 
    {"name":"getContextConfigLocation","parameterTypes":[] }, 
    {"name":"getContextId","parameterTypes":[] }, 
    {"name":"getNamespace","parameterTypes":[] }, 
    {"name":"getServletContextAttributeName","parameterTypes":[] }, 
    {"name":"getWebApplicationContext","parameterTypes":[] }, 
    {"name":"isEnableLoggingRequestDetails","parameterTypes":[] }, 
    {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextRefreshedEvent"] }, 
    {"name":"refresh","parameterTypes":[] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setContextConfigLocation","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextId","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializerClasses","parameterTypes":["java.lang.String"] }, 
    {"name":"setContextInitializers","parameterTypes":["org.springframework.context.ApplicationContextInitializer[]"] }, 
    {"name":"setDispatchOptionsRequest","parameterTypes":["boolean"] }, 
    {"name":"setDispatchTraceRequest","parameterTypes":["boolean"] }, 
    {"name":"setEnableLoggingRequestDetails","parameterTypes":["boolean"] }, 
    {"name":"setNamespace","parameterTypes":["java.lang.String"] }, 
    {"name":"setPublishContext","parameterTypes":["boolean"] }, 
    {"name":"setPublishEvents","parameterTypes":["boolean"] }, 
    {"name":"setThreadContextInheritable","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.HandlerAdapter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.HandlerExceptionResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.HandlerMapping",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.HttpServletBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getEnvironment","parameterTypes":[] }, 
    {"name":"getServletName","parameterTypes":[] }, 
    {"name":"init","parameterTypes":[] }, 
    {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }
  ]
},
{
  "name":"org.springframework.web.servlet.View",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.ViewResolver",
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.CorsRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.config.annotation.InterceptorRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ViewControllerRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"beanNameHandlerMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"defaultServletHandlerMapping","parameterTypes":[] }, 
    {"name":"getApplicationContext","parameterTypes":[] }, 
    {"name":"getServletContext","parameterTypes":[] }, 
    {"name":"handlerExceptionResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"handlerFunctionAdapter","parameterTypes":[] }, 
    {"name":"httpRequestHandlerAdapter","parameterTypes":[] }, 
    {"name":"mvcHandlerMappingIntrospector","parameterTypes":[] }, 
    {"name":"mvcPathMatcher","parameterTypes":[] }, 
    {"name":"mvcResourceUrlProvider","parameterTypes":[] }, 
    {"name":"mvcUriComponentsContributor","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"] }, 
    {"name":"mvcUrlPathHelper","parameterTypes":[] }, 
    {"name":"mvcViewResolver","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.util.UrlPathHelper","org.springframework.util.PathMatcher","org.springframework.web.accept.ContentNegotiationManager","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"routerFunctionMapping","parameterTypes":["org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }, 
    {"name":"simpleControllerHandlerAdapter","parameterTypes":[] }, 
    {"name":"viewControllerHandlerMapping","parameterTypes":["org.springframework.util.PathMatcher","org.springframework.web.util.UrlPathHelper","org.springframework.format.support.FormattingConversionService","org.springframework.web.servlet.resource.ResourceUrlProvider"] }
  ]
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.function.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"initApplicationContext","parameterTypes":[] }, 
    {"name":"setDetectHandlersInAncestorContexts","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getCorsProcessor","parameterTypes":[] }, 
    {"name":"getDefaultHandler","parameterTypes":[] }, 
    {"name":"getHandler","parameterTypes":["javax.servlet.http.HttpServletRequest"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getPathMatcher","parameterTypes":[] }, 
    {"name":"getUrlPathHelper","parameterTypes":[] }, 
    {"name":"setAlwaysUseFullPath","parameterTypes":["boolean"] }, 
    {"name":"setBeanName","parameterTypes":["java.lang.String"] }, 
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.CorsConfigurationSource"] }, 
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, 
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.CorsProcessor"] }, 
    {"name":"setDefaultHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setInterceptors","parameterTypes":["java.lang.Object[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPathMatcher","parameterTypes":["org.springframework.util.PathMatcher"] }, 
    {"name":"setRemoveSemicolonContent","parameterTypes":["boolean"] }, 
    {"name":"setUrlDecode","parameterTypes":["boolean"] }, 
    {"name":"setUrlPathHelper","parameterTypes":["org.springframework.web.util.UrlPathHelper"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getHandlerMethods","parameterTypes":[] }, 
    {"name":"getHandlerMethodsForMappingName","parameterTypes":["java.lang.String"] }, 
    {"name":"getNamingStrategy","parameterTypes":[] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setDetectHandlerMethodsInAncestorContexts","parameterTypes":["boolean"] }, 
    {"name":"setHandlerMethodMappingNamingStrategy","parameterTypes":["org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy"] }, 
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$EmptyHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerMap","parameterTypes":[] }, 
    {"name":"getRootHandler","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }, 
    {"name":"setRootHandler","parameterTypes":["java.lang.Object"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveException","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object","java.lang.Exception"] }
  ]
},
{
  "name":"org.springframework.web.servlet.handler.HandlerMappingIntrospector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.handler.MatchableHandlerMapping",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getLastModified","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.Object"] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"handle","parameterTypes":["javax.servlet.http.HttpServletRequest","javax.servlet.http.HttpServletResponse","java.lang.Object"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"supports","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }
  ]
},
{
  "name":"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getContentNegotiationManager","parameterTypes":[] }, 
    {"name":"getFileExtensions","parameterTypes":[] }, 
    {"name":"getPathPrefixes","parameterTypes":[] }, 
    {"name":"match","parameterTypes":["javax.servlet.http.HttpServletRequest","java.lang.String"] }, 
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"registerMapping","parameterTypes":["org.springframework.web.servlet.mvc.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, 
    {"name":"setContentNegotiationManager","parameterTypes":["org.springframework.web.accept.ContentNegotiationManager"] }, 
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, 
    {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, 
    {"name":"setUseRegisteredSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseSuffixPatternMatch","parameterTypes":["boolean"] }, 
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }, 
    {"name":"useRegisteredSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useSuffixPatternMatch","parameterTypes":[] }, 
    {"name":"useTrailingSlashMatch","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.servlet.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.web.servlet.support.WebContentGenerator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getCacheControl","parameterTypes":[] }, 
    {"name":"getCacheSeconds","parameterTypes":[] }, 
    {"name":"getSupportedMethods","parameterTypes":[] }, 
    {"name":"getVaryByRequestHeaders","parameterTypes":[] }, 
    {"name":"isAlwaysMustRevalidate","parameterTypes":[] }, 
    {"name":"isRequireSession","parameterTypes":[] }, 
    {"name":"isUseCacheControlHeader","parameterTypes":[] }, 
    {"name":"isUseCacheControlNoStore","parameterTypes":[] }, 
    {"name":"isUseExpiresHeader","parameterTypes":[] }, 
    {"name":"setAlwaysMustRevalidate","parameterTypes":["boolean"] }, 
    {"name":"setCacheControl","parameterTypes":["org.springframework.http.CacheControl"] }, 
    {"name":"setCacheSeconds","parameterTypes":["int"] }, 
    {"name":"setRequireSession","parameterTypes":["boolean"] }, 
    {"name":"setSupportedMethods","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setUseCacheControlHeader","parameterTypes":["boolean"] }, 
    {"name":"setUseCacheControlNoStore","parameterTypes":["boolean"] }, 
    {"name":"setUseExpiresHeader","parameterTypes":["boolean"] }, 
    {"name":"setVaryByRequestHeaders","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.AbstractCachingViewResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"clearCache","parameterTypes":[] }, 
    {"name":"getCacheFilter","parameterTypes":[] }, 
    {"name":"getCacheLimit","parameterTypes":[] }, 
    {"name":"isCache","parameterTypes":[] }, 
    {"name":"isCacheUnresolved","parameterTypes":[] }, 
    {"name":"removeFromCache","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"setCache","parameterTypes":["boolean"] }, 
    {"name":"setCacheFilter","parameterTypes":["org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter"] }, 
    {"name":"setCacheLimit","parameterTypes":["int"] }, 
    {"name":"setCacheUnresolved","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.BeanNameViewResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.InternalResourceViewResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.web.servlet.view.UrlBasedViewResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getAttributesMap","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"getRedirectHosts","parameterTypes":[] }, 
    {"name":"setAttributes","parameterTypes":["java.util.Properties"] }, 
    {"name":"setAttributesMap","parameterTypes":["java.util.Map"] }, 
    {"name":"setContentType","parameterTypes":["java.lang.String"] }, 
    {"name":"setExposeContextBeansAsAttributes","parameterTypes":["boolean"] }, 
    {"name":"setExposePathVariables","parameterTypes":["java.lang.Boolean"] }, 
    {"name":"setExposedContextBeanNames","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setOrder","parameterTypes":["int"] }, 
    {"name":"setPrefix","parameterTypes":["java.lang.String"] }, 
    {"name":"setRedirectContextRelative","parameterTypes":["boolean"] }, 
    {"name":"setRedirectHosts","parameterTypes":["java.lang.String[]"] }, 
    {"name":"setRedirectHttp10Compatible","parameterTypes":["boolean"] }, 
    {"name":"setRequestContextAttribute","parameterTypes":["java.lang.String"] }, 
    {"name":"setSuffix","parameterTypes":["java.lang.String"] }, 
    {"name":"setViewClass","parameterTypes":["java.lang.Class"] }, 
    {"name":"setViewNames","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.web.servlet.view.ViewResolverComposite",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] }, 
    {"name":"getOrder","parameterTypes":[] }, 
    {"name":"resolveViewName","parameterTypes":["java.lang.String","java.util.Locale"] }, 
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, 
    {"name":"setServletContext","parameterTypes":["javax.servlet.ServletContext"] }
  ]
},
{
  "name":"org.springframework.web.util.UrlPathHelper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"org.xnio._private.Messages_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.xnio.nio.AbstractNioChannel",
  "allDeclaredFields":true
},
{
  "name":"org.xnio.nio.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.xnio.nio.QueuedNioTcpServer2",
  "allDeclaredFields":true
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }]
}
]
